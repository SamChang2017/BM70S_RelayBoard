

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed May 24 13:57:41 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	nvCOMRAM
    28  000043                     __pnvCOMRAM:
    29                           	opt stack 0
    30  000043                     _TFNum:
    31                           	opt stack 0
    32  000043                     	ds	1
    33  000044                     _eusart1TxBufferRemaining:
    34                           	opt stack 0
    35  000044                     	ds	1
    36  0000                     _ANSELA	set	3896
    37  0000                     _ANSELB	set	3897
    38  0000                     _ANSELC	set	3898
    39  0000                     _ANSELD	set	3899
    40  0000                     _ANSELE	set	3900
    41  0000                     _BAUDCON1	set	4024
    42  0000                     _INTCON2bits	set	4081
    43  0000                     _INTCONbits	set	4082
    44  0000                     _LATA	set	3977
    45  0000                     _LATB	set	3978
    46  0000                     _LATC	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _LATDbits	set	3980
    49  0000                     _LATE	set	3981
    50  0000                     _OSCCON	set	4051
    51  0000                     _OSCCON2	set	4050
    52  0000                     _OSCTUNE	set	3995
    53  0000                     _PIE1bits	set	3997
    54  0000                     _PIR1bits	set	3998
    55  0000                     _RCONbits	set	4048
    56  0000                     _RCREG1	set	4014
    57  0000                     _RCSTA1	set	4011
    58  0000                     _RCSTA1bits	set	4011
    59  0000                     _SPBRG1	set	4015
    60  0000                     _SPBRGH1	set	4016
    61  0000                     _TRISA	set	3986
    62  0000                     _TRISB	set	3987
    63  0000                     _TRISC	set	3988
    64  0000                     _TRISD	set	3989
    65  0000                     _TRISE	set	3990
    66  0000                     _TXREG1	set	4013
    67  0000                     _TXSTA1	set	4012
    68  0000                     _WPUB	set	3937
    69                           
    70                           	psect	smallconst
    71  000600                     __psmallconst:
    72                           	opt stack 0
    73  000600  00                 	db	0
    74  000601                     STR_1:
    75  000601  0D                 	db	13
    76  000602  0A                 	db	10
    77  000603  4C                 	db	76	;'L'
    78  000604  45                 	db	69	;'E'
    79  000605  44                 	db	68	;'D'
    80  000606  5F                 	db	95	;'_'
    81  000607  44                 	db	68	;'D'
    82  000608  30                 	db	48	;'0'
    83  000609  20                 	db	32
    84  00060A  74                 	db	116	;'t'
    85  00060B  6F                 	db	111	;'o'
    86  00060C  67                 	db	103	;'g'
    87  00060D  67                 	db	103	;'g'
    88  00060E  6C                 	db	108	;'l'
    89  00060F  65                 	db	101	;'e'
    90  000610  0D                 	db	13
    91  000611  0A                 	db	10
    92  000612  00                 	db	0
    93  0000                     
    94                           ; #config settings
    95  000613  00                 	db	0	; dummy byte at the end
    96  0000                     
    97                           	psect	cinit
    98  00093A                     __pcinit:
    99                           	opt stack 0
   100  00093A                     start_initialization:
   101                           	opt stack 0
   102  00093A                     __initialization:
   103                           	opt stack 0
   104                           
   105                           ; Clear objects allocated to COMRAM (37 bytes)
   106  00093A  EE00  F001         	lfsr	0,__pbssCOMRAM
   107  00093E  0E25               	movlw	37
   108  000940                     clear_0:
   109  000940  6AEE               	clrf	postinc0,c
   110  000942  06E8               	decf	wreg,f,c
   111  000944  E1FD               	bnz	clear_0
   112  000946                     end_of_initialization:
   113                           	opt stack 0
   114  000946                     __end_of__initialization:
   115                           	opt stack 0
   116  000946  0E00               	movlw	low (__Lmediumconst shr (0+16))
   117  000948  6EF8               	movwf	tblptru,c
   118  00094A  0100               	movlb	0
   119  00094C  EF0A  F003         	goto	_main	;jump to C main() function
   120                           tblptru	equ	0xFF8
   121                           postinc0	equ	0xFEE
   122                           wreg	equ	0xFE8
   123                           
   124                           	psect	bssCOMRAM
   125  000001                     __pbssCOMRAM:
   126                           	opt stack 0
   127  000001                     _site0_IL:
   128                           	opt stack 0
   129  000001                     	ds	16
   130  000011                     _eusart1RxBuffer:
   131                           	opt stack 0
   132  000011                     	ds	8
   133  000019                     _eusart1TxBuffer:
   134                           	opt stack 0
   135  000019                     	ds	8
   136  000021                     _eusart1RxCount:
   137                           	opt stack 0
   138  000021                     	ds	1
   139  000022                     _eusart1RxHead:
   140                           	opt stack 0
   141  000022                     	ds	1
   142  000023                     _eusart1RxTail:
   143                           	opt stack 0
   144  000023                     	ds	1
   145  000024                     _eusart1TxHead:
   146                           	opt stack 0
   147  000024                     	ds	1
   148  000025                     _eusart1TxTail:
   149                           	opt stack 0
   150  000025                     	ds	1
   151                           tblptru	equ	0xFF8
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           
   155                           	psect	cstackCOMRAM
   156  000026                     __pcstackCOMRAM:
   157                           	opt stack 0
   158  000026                     ??_INTERRUPT_InterruptManager:
   159  000026                     
   160                           ; 1 bytes @ 0x0
   161  000026                     	ds	14
   162  000034                     EUSART1_Read@readValue:
   163                           	opt stack 0
   164  000034                     EUSART1_Write@txData:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0xE
   168  000034                     	ds	1
   169  000035                     ??_relayControl:
   170  000035                     putch@txData:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0xF
   174  000035                     	ds	1
   175  000036                     ?_printf:
   176                           	opt stack 0
   177  000036                     relayControl@data:
   178                           	opt stack 0
   179  000036                     printf@f:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x10
   183  000036                     	ds	1
   184  000037                     relayControl@count:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x11
   188  000037                     	ds	1
   189  000038                     printf@ap:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x12
   193  000038                     	ds	2
   194  00003A                     printf@c:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x14
   198  00003A                     	ds	1
   199  00003B                     ??_main:
   200                           
   201                           ; 0 bytes @ 0x15
   202  00003B                     	ds	1
   203  00003C                     main@count:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x16
   207  00003C                     	ds	2
   208  00003E                     main@flashCount:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x18
   212  00003E                     	ds	2
   213  000040                     main@count_640:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x1A
   217  000040                     	ds	2
   218  000042                     main@RxData:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x1C
   222  000042                     	ds	1
   223                           tblptru	equ	0xFF8
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   229 ;;
   230 ;; *************** function _main *****************
   231 ;; Defined at:
   232 ;;		line 32 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  count           2   26[COMRAM] int 
   237 ;;  flashCount      2   24[COMRAM] int 
   238 ;;  count           2   22[COMRAM] int 
   239 ;;  RxData          1   28[COMRAM] unsigned char 
   240 ;; Return value:  Size  Location     Type
   241 ;;		None               void
   242 ;; Registers used:
   243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   249 ;;      Params:         0       0       0       0       0       0       0
   250 ;;      Locals:         7       0       0       0       0       0       0
   251 ;;      Temps:          1       0       0       0       0       0       0
   252 ;;      Totals:         8       0       0       0       0       0       0
   253 ;;Total ram usage:        8 bytes
   254 ;; Hardware stack levels required when called:    5
   255 ;; This function calls:
   256 ;;		_EUSART1_Read
   257 ;;		_EUSART1_Write
   258 ;;		_SYSTEM_Initialize
   259 ;;		_printf
   260 ;;		_relayControl
   261 ;; This function is called by:
   262 ;;		Startup code after reset
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           	psect	text0
   267  000614                     __ptext0:
   268                           	opt stack 0
   269  000614                     _main:
   270                           	opt stack 26
   271                           
   272                           ;main.c: 35: SYSTEM_Initialize();
   273                           
   274                           ;incstack = 0
   275  000614  ECA8  F004         	call	_SYSTEM_Initialize	;wreg free
   276                           
   277                           ;main.c: 37: (INTCONbits.GIE = 1);
   278  000618  8EF2               	bsf	intcon,7,c	;volatile
   279                           
   280                           ;main.c: 38: (INTCONbits.PEIE = 1);
   281  00061A  8CF2               	bsf	intcon,6,c	;volatile
   282                           
   283                           ;main.c: 40: char RxData;
   284                           ;main.c: 42: TFNum = '5';
   285  00061C  0E35               	movlw	53
   286  00061E  6E43               	movwf	_TFNum,c
   287                           
   288                           ;main.c: 43: site0_IL[0] = '3';
   289  000620  0E33               	movlw	51
   290  000622  6E01               	movwf	_site0_IL,c
   291                           
   292                           ;main.c: 44: site0_IL[1] = '.';
   293  000624  0E2E               	movlw	46
   294  000626  6E02               	movwf	_site0_IL+1,c
   295                           
   296                           ;main.c: 45: site0_IL[2] = '9';
   297  000628  0E39               	movlw	57
   298  00062A  6E03               	movwf	_site0_IL+2,c
   299                           
   300                           ;main.c: 46: site0_IL[3] = '4';
   301  00062C  0E34               	movlw	52
   302  00062E  6E04               	movwf	_site0_IL+3,c
   303                           
   304                           ;main.c: 48: site0_IL[4] = '3';
   305  000630  0E33               	movlw	51
   306  000632  6E05               	movwf	_site0_IL+4,c
   307                           
   308                           ;main.c: 49: site0_IL[5] = '7';
   309  000634  0E37               	movlw	55
   310  000636  6E06               	movwf	_site0_IL+5,c
   311                           
   312                           ;main.c: 50: site0_IL[6] = '.';
   313  000638  0E2E               	movlw	46
   314  00063A  6E07               	movwf	_site0_IL+6,c
   315                           
   316                           ;main.c: 51: site0_IL[7] = '9';
   317  00063C  0E39               	movlw	57
   318  00063E  6E08               	movwf	_site0_IL+7,c
   319                           
   320                           ;main.c: 53: site0_IL[8] = '1';
   321  000640  0E31               	movlw	49
   322  000642  6E09               	movwf	_site0_IL+8,c
   323                           
   324                           ;main.c: 54: site0_IL[9] = '5';
   325  000644  0E35               	movlw	53
   326  000646  6E0A               	movwf	_site0_IL+9,c
   327                           
   328                           ;main.c: 55: site0_IL[10] = '.';
   329  000648  0E2E               	movlw	46
   330  00064A  6E0B               	movwf	_site0_IL+10,c
   331                           
   332                           ;main.c: 56: site0_IL[11] = '4';
   333  00064C  0E34               	movlw	52
   334  00064E  6E0C               	movwf	_site0_IL+11,c
   335                           
   336                           ;main.c: 58: site0_IL[12] = '5';
   337  000650  0E35               	movlw	53
   338  000652  6E0D               	movwf	_site0_IL+12,c
   339                           
   340                           ;main.c: 59: site0_IL[13] = '.';
   341  000654  0E2E               	movlw	46
   342  000656  6E0E               	movwf	_site0_IL+13,c
   343                           
   344                           ;main.c: 60: site0_IL[14] = '8';
   345  000658  0E38               	movlw	56
   346  00065A  6E0F               	movwf	_site0_IL+14,c
   347                           
   348                           ;main.c: 61: site0_IL[15] = '7';
   349  00065C  0E37               	movlw	55
   350  00065E  6E10               	movwf	_site0_IL+15,c
   351  000660  D000               	goto	l1103
   352  000662                     l1103:
   353                           
   354                           ;main.c: 64: {
   355                           ;main.c: 65: printf("\r\nLED_D0 toggle\r\n");
   356  000662  0E01               	movlw	low STR_1
   357  000664  6E36               	movwf	printf@f,c
   358  000666  0E06               	movlw	high STR_1
   359  000668  6E37               	movwf	printf@f+1,c
   360  00066A  EC87  F004         	call	_printf	;wreg free
   361                           
   362                           ;main.c: 67: for (int count=0; count<20; count++){
   363  00066E  0E00               	movlw	0
   364  000670  6E3D               	movwf	main@count+1,c
   365  000672  0E00               	movlw	0
   366  000674  6E3C               	movwf	main@count,c
   367  000676                     l1107:
   368  000676  BE3D               	btfsc	main@count+1,7,c
   369  000678  D008               	goto	l1111
   370  00067A  503D               	movf	main@count+1,w,c
   371  00067C  E154               	bnz	l1143
   372  00067E  0E14               	movlw	20
   373  000680  5C3C               	subwf	main@count,w,c
   374  000682  B0D8               	btfsc	status,0,c
   375  000684  D050               	goto	l1143
   376  000686  D001               	goto	l1111
   377  000688  D04E               	goto	l1143
   378  00068A                     l1111:
   379                           
   380                           ;main.c: 68: _delay((unsigned long)((25)*(8000000/4000.0)));
   381  00068A  0E41               	movlw	65
   382  00068C  6E3B               	movwf	??_main& (0+255),c
   383  00068E  0EEE               	movlw	238
   384  000690                     u357:
   385  000690  2EE8               	decfsz	wreg,f,c
   386  000692  D7FE               	goto	u357
   387  000694  2E3B               	decfsz	??_main& (0+255),f,c
   388  000696  D7FC               	goto	u357
   389  000698  D000               	nop2	
   390  00069A  4A3C               	infsnz	main@count,f,c
   391  00069C  2A3D               	incf	main@count+1,f,c
   392  00069E  D7EB               	goto	l1107
   393                           
   394                           ;main.c: 69: }
   395                           ;main.c: 72: while((eusart1RxCount)){
   396  0006A0  D042               	goto	l1143
   397  0006A2                     l1115:
   398                           
   399                           ;main.c: 74: RxData = EUSART1_Read();
   400  0006A2  EC1F  F004         	call	_EUSART1_Read	;wreg free
   401  0006A6  6E42               	movwf	main@RxData,c
   402                           
   403                           ;main.c: 75: for (int flashCount=0; flashCount<20; flashCount++){
   404  0006A8  0E00               	movlw	0
   405  0006AA  6E3F               	movwf	main@flashCount+1,c
   406  0006AC  0E00               	movlw	0
   407  0006AE  6E3E               	movwf	main@flashCount,c
   408  0006B0  BE3F               	btfsc	main@flashCount+1,7,c
   409  0006B2  D008               	goto	l188
   410  0006B4  503F               	movf	main@flashCount+1,w,c
   411  0006B6  E129               	bnz	l187
   412  0006B8  0E14               	movlw	20
   413  0006BA  5C3E               	subwf	main@flashCount,w,c
   414  0006BC  B0D8               	btfsc	status,0,c
   415  0006BE  D025               	goto	l187
   416  0006C0  D001               	goto	l188
   417  0006C2  D023               	goto	l187
   418  0006C4                     l188:
   419  0006C4  728C               	btg	3980,1,c	;volatile
   420  0006C6  D000               	goto	l1123
   421  0006C8                     l1123:
   422                           
   423                           ;main.c: 77: for (int count=0; count<20; count++){
   424  0006C8  0E00               	movlw	0
   425  0006CA  6E41               	movwf	main@count_640+1,c
   426  0006CC  0E00               	movlw	0
   427  0006CE  6E40               	movwf	main@count_640,c
   428  0006D0                     l1125:
   429  0006D0  BE41               	btfsc	main@count_640+1,7,c
   430  0006D2  D008               	goto	l1129
   431  0006D4  5041               	movf	main@count_640+1,w,c
   432  0006D6  E112               	bnz	l1133
   433  0006D8  0E14               	movlw	20
   434  0006DA  5C40               	subwf	main@count_640,w,c
   435  0006DC  B0D8               	btfsc	status,0,c
   436  0006DE  D00E               	goto	l1133
   437  0006E0  D001               	goto	l1129
   438  0006E2  D00C               	goto	l1133
   439  0006E4                     l1129:
   440                           
   441                           ;main.c: 78: _delay((unsigned long)((15)*(8000000/4000.0)));
   442  0006E4  0E27               	movlw	39
   443  0006E6  6E3B               	movwf	??_main& (0+255),c
   444  0006E8  0EF5               	movlw	245
   445  0006EA                     u367:
   446  0006EA  2EE8               	decfsz	wreg,f,c
   447  0006EC  D7FE               	goto	u367
   448  0006EE  2E3B               	decfsz	??_main& (0+255),f,c
   449  0006F0  D7FC               	goto	u367
   450  0006F2  F000               	nop	
   451  0006F4  4A40               	infsnz	main@count_640,f,c
   452  0006F6  2A41               	incf	main@count_640+1,f,c
   453  0006F8  D7EB               	goto	l1125
   454  0006FA  D000               	goto	l1133
   455  0006FC                     l1133:
   456  0006FC  4A3E               	infsnz	main@flashCount,f,c
   457  0006FE  2A3F               	incf	main@flashCount+1,f,c
   458  000700  BE3F               	btfsc	main@flashCount+1,7,c
   459  000702  D7E0               	goto	l188
   460  000704  503F               	movf	main@flashCount+1,w,c
   461  000706  E101               	bnz	u330
   462  000708  D7D7               	goto	L1
   463  00070A                     u330:
   464  00070A                     l187:
   465                           
   466                           ;main.c: 79: }
   467                           ;main.c: 80: }
   468                           ;main.c: 81: PIE1bits.TX1IE=0;
   469  00070A  989D               	bcf	3997,4,c	;volatile
   470                           
   471                           ;main.c: 82: EUSART1_Write(RxData);
   472  00070C  5042               	movf	main@RxData,w,c
   473  00070E  ECFF  F003         	call	_EUSART1_Write
   474                           
   475                           ;main.c: 83: printf("\r\n");
   476  000712  0E10               	movlw	low (STR_1+15)
   477  000714  6E36               	movwf	printf@f,c
   478  000716  0E06               	movlw	high (STR_1+15)
   479  000718  6E37               	movwf	printf@f+1,c
   480  00071A  EC87  F004         	call	_printf	;wreg free
   481                           
   482                           ;main.c: 85: relayControl(RxData);
   483  00071E  5042               	movf	main@RxData,w,c
   484  000720  EC9A  F003         	call	_relayControl
   485  000724  D000               	goto	l1143
   486  000726                     l1143:
   487  000726  5021               	movf	_eusart1RxCount,w,c	;volatile
   488  000728  B4D8               	btfsc	status,2,c
   489  00072A  D79B               	goto	l1103
   490  00072C  D7BA               	goto	l1115
   491                           
   492                           ;main.c: 86: };
   493  00072E  D799               	goto	l1103
   494  000730  EF4D  F000         	goto	start
   495  000734                     __end_of_main:
   496                           	opt stack 0
   497                           tblptru	equ	0xFF8
   498                           intcon	equ	0xFF2
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           status	equ	0xFD8
   502                           
   503 ;; *************** function _relayControl *****************
   504 ;; Defined at:
   505 ;;		line 105 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  data            1    wreg     unsigned char 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  data            1   16[COMRAM] unsigned char 
   510 ;;  count           2   17[COMRAM] int 
   511 ;; Return value:  Size  Location     Type
   512 ;;		None               void
   513 ;; Registers used:
   514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   520 ;;      Params:         0       0       0       0       0       0       0
   521 ;;      Locals:         3       0       0       0       0       0       0
   522 ;;      Temps:          1       0       0       0       0       0       0
   523 ;;      Totals:         4       0       0       0       0       0       0
   524 ;;Total ram usage:        4 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    3
   527 ;; This function calls:
   528 ;;		_EUSART1_Write
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text1
   535  000734                     __ptext1:
   536                           	opt stack 0
   537  000734                     _relayControl:
   538                           	opt stack 27
   539                           
   540                           ;incstack = 0
   541                           ;relayControl@data stored from wreg
   542  000734  6E36               	movwf	relayControl@data,c
   543                           
   544                           ;main.c: 106: switch (data){
   545  000736  D02F               	goto	l947
   546  000738                     l927:
   547                           
   548                           ;main.c: 108: EUSART1_Write(TFNum);
   549  000738  5043               	movf	_TFNum,w,c
   550  00073A  ECFF  F003         	call	_EUSART1_Write
   551                           
   552                           ;main.c: 109: break;
   553  00073E  0012               	return	
   554  000740                     l929:
   555                           
   556                           ;main.c: 111: for (int count=0; count<16; count++){
   557  000740  0E00               	movlw	0
   558  000742  6E38               	movwf	relayControl@count+1,c
   559  000744  0E00               	movlw	0
   560  000746  6E37               	movwf	relayControl@count,c
   561  000748                     l931:
   562  000748  BE38               	btfsc	relayControl@count+1,7,c
   563  00074A  D008               	goto	l935
   564  00074C  5038               	movf	relayControl@count+1,w,c
   565  00074E  E131               	bnz	l217
   566  000750  0E10               	movlw	16
   567  000752  5C37               	subwf	relayControl@count,w,c
   568  000754  B0D8               	btfsc	status,0,c
   569  000756  0012               	return	
   570  000758  D001               	goto	l935
   571  00075A  0012               	return	
   572  00075C                     l935:
   573                           
   574                           ;main.c: 112: EUSART1_Write(site0_IL[count]);
   575  00075C  0E01               	movlw	low _site0_IL
   576  00075E  2437               	addwf	relayControl@count,w,c
   577  000760  6ED9               	movwf	fsr2l,c
   578  000762  0E00               	movlw	high _site0_IL
   579  000764  2038               	addwfc	relayControl@count+1,w,c
   580  000766  6EDA               	movwf	fsr2h,c
   581  000768  50DF               	movf	indf2,w,c
   582  00076A  ECFF  F003         	call	_EUSART1_Write
   583                           
   584                           ;main.c: 113: _delay((unsigned long)((25)*(8000000/4000.0)));
   585  00076E  0E41               	movlw	65
   586  000770  6E35               	movwf	??_relayControl& (0+255),c
   587  000772  0EEE               	movlw	238
   588  000774                     u377:
   589  000774  2EE8               	decfsz	wreg,f,c
   590  000776  D7FE               	goto	u377
   591  000778  2E35               	decfsz	??_relayControl& (0+255),f,c
   592  00077A  D7FC               	goto	u377
   593  00077C  D000               	nop2	
   594  00077E  4A37               	infsnz	relayControl@count,f,c
   595  000780  2A38               	incf	relayControl@count+1,f,c
   596  000782  D7E2               	goto	l931
   597                           
   598                           ;main.c: 114: }
   599                           ;main.c: 115: break;
   600  000784  0012               	return	
   601  000786                     l211:
   602  000786  908C               	bcf	3980,0,c	;volatile
   603                           
   604                           ;main.c: 118: break;
   605  000788  0012               	return	
   606  00078A                     l214:
   607  00078A  808C               	bsf	3980,0,c	;volatile
   608                           
   609                           ;main.c: 121: break;
   610  00078C  0012               	return	
   611  00078E                     l943:
   612                           
   613                           ;main.c: 123: EUSART1_Write('U');
   614  00078E  0E55               	movlw	85
   615  000790  ECFF  F003         	call	_EUSART1_Write
   616                           
   617                           ;main.c: 125: }
   618                           
   619                           ;main.c: 124: break;
   620  000794  0012               	return	
   621  000796                     l947:
   622  000796  5036               	movf	relayControl@data,w,c
   623                           
   624                           ; Switch size 1, requested type "space"
   625                           ; Number of cases is 4, Range of values is 73 to 98
   626                           ; switch strategies available:
   627                           ; Name         Instructions Cycles
   628                           ; simple_byte           13     7 (average)
   629                           ;	Chosen strategy is simple_byte
   630  000798  0A49               	xorlw	73	; case 73
   631  00079A  B4D8               	btfsc	status,2,c
   632  00079C  D7D1               	goto	l929
   633  00079E  0A1D               	xorlw	29	; case 84
   634  0007A0  B4D8               	btfsc	status,2,c
   635  0007A2  D7CA               	goto	l927
   636  0007A4  0A35               	xorlw	53	; case 97
   637  0007A6  B4D8               	btfsc	status,2,c
   638  0007A8  D7EE               	goto	l211
   639  0007AA  0A03               	xorlw	3	; case 98
   640  0007AC  B4D8               	btfsc	status,2,c
   641  0007AE  D7ED               	goto	l214
   642  0007B0  D7EE               	goto	l943
   643  0007B2                     l217:
   644  0007B2  0012               	return		;funcret
   645  0007B4                     __end_of_relayControl:
   646                           	opt stack 0
   647                           tblptru	equ	0xFF8
   648                           intcon	equ	0xFF2
   649                           postinc0	equ	0xFEE
   650                           wreg	equ	0xFE8
   651                           indf2	equ	0xFDF
   652                           fsr2h	equ	0xFDA
   653                           fsr2l	equ	0xFD9
   654                           status	equ	0xFD8
   655                           
   656 ;; *************** function _printf *****************
   657 ;; Defined at:
   658 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  f               2   16[COMRAM] PTR const unsigned char 
   661 ;;		 -> STR_2(3), STR_1(18), 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  tmpval          4    0        struct .
   664 ;;  cp              3    0        PTR const unsigned char 
   665 ;;  ap              2   18[COMRAM] PTR void [1]
   666 ;;		 -> ?_printf(2), 
   667 ;;  len             2    0        unsigned int 
   668 ;;  val             2    0        unsigned int 
   669 ;;  c               1   20[COMRAM] char 
   670 ;;  flag            1    0        unsigned char 
   671 ;;  prec            1    0        char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  2   16[COMRAM] int 
   674 ;; Registers used:
   675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   681 ;;      Params:         2       0       0       0       0       0       0
   682 ;;      Locals:         3       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0
   684 ;;      Totals:         5       0       0       0       0       0       0
   685 ;;Total ram usage:        5 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    4
   688 ;; This function calls:
   689 ;;		_putch
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text2
   696  00090E                     __ptext2:
   697                           	opt stack 0
   698  00090E                     _printf:
   699                           	opt stack 26
   700                           
   701                           ;doprnt.c: 466: va_list ap;
   702                           ;doprnt.c: 499: signed char c;
   703                           ;doprnt.c: 506: signed char prec;
   704                           ;doprnt.c: 508: unsigned char flag;
   705                           ;doprnt.c: 523: union {
   706                           ;doprnt.c: 524: unsigned long vd;
   707                           ;doprnt.c: 525: double integ;
   708                           ;doprnt.c: 526: } tmpval;
   709                           ;doprnt.c: 528: unsigned int val;
   710                           ;doprnt.c: 529: unsigned len;
   711                           ;doprnt.c: 530: const char * cp;
   712                           ;doprnt.c: 533: *ap = __va_start();
   713                           
   714                           ;incstack = 0
   715  00090E  0E38               	movlw	low (?_printf+2)
   716  000910  6E38               	movwf	printf@ap,c
   717  000912  0E00               	movlw	high (?_printf+2)
   718  000914  6E39               	movwf	printf@ap+1,c
   719                           
   720                           ;doprnt.c: 536: while(c = *f++) {
   721  000916  D004               	goto	l1061
   722  000918                     l1059:
   723                           
   724                           ;doprnt.c: 540: {
   725                           ;doprnt.c: 541: (putch(c) );
   726  000918  503A               	movf	printf@c,w,c
   727  00091A  ECB8  F004         	call	_putch
   728                           
   729                           ;doprnt.c: 542: continue;
   730  00091E  D000               	goto	l1061
   731  000920                     l1061:
   732  000920  C036  FFF6         	movff	printf@f,tblptrl
   733  000924  C037  FFF7         	movff	printf@f+1,tblptrh
   734  000928  4A36               	infsnz	printf@f,f,c
   735  00092A  2A37               	incf	printf@f+1,f,c
   736  00092C                     	if	0	;tblptru may be non-zero
   737  00092C                     	endif
   738  00092C                     	if	0	;tblptru may be non-zero
   739  00092C                     	endif
   740  00092C  0008               	tblrd		*
   741  00092E  CFF5 F03A          	movff	tablat,printf@c
   742  000932  503A               	movf	printf@c,w,c
   743  000934  A4D8               	btfss	status,2,c
   744  000936  D7F0               	goto	l1059
   745                           
   746                           ;doprnt.c: 1469: }
   747                           ;doprnt.c: 1533: }
   748                           ;doprnt.c: 1540: return 0;
   749                           ;	Return value of _printf is never used
   750  000938  0012               	return		;funcret
   751  00093A                     __end_of_printf:
   752                           	opt stack 0
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           intcon	equ	0xFF2
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           indf2	equ	0xFDF
   761                           fsr2h	equ	0xFDA
   762                           fsr2l	equ	0xFD9
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _putch *****************
   766 ;; Defined at:
   767 ;;		line 160 in file "mcc_generated_files/eusart1.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  txData          1    wreg     unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  txData          1   15[COMRAM] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;		None               void
   774 ;; Registers used:
   775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   781 ;;      Params:         0       0       0       0       0       0       0
   782 ;;      Locals:         1       0       0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0
   784 ;;      Totals:         1       0       0       0       0       0       0
   785 ;;Total ram usage:        1 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    3
   788 ;; This function calls:
   789 ;;		_EUSART1_Write
   790 ;; This function is called by:
   791 ;;		_printf
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text3
   796  000970                     __ptext3:
   797                           	opt stack 0
   798  000970                     _putch:
   799                           	opt stack 26
   800                           
   801                           ;incstack = 0
   802                           ;putch@txData stored from wreg
   803  000970  6E35               	movwf	putch@txData,c
   804                           
   805                           ;eusart1.c: 162: EUSART1_Write(txData);
   806  000972  5035               	movf	putch@txData,w,c
   807  000974  ECFF  F003         	call	_EUSART1_Write
   808  000978  0012               	return		;funcret
   809  00097A                     __end_of_putch:
   810                           	opt stack 0
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           intcon	equ	0xFF2
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           indf2	equ	0xFDF
   819                           fsr2h	equ	0xFDA
   820                           fsr2l	equ	0xFD9
   821                           status	equ	0xFD8
   822                           
   823 ;; *************** function _EUSART1_Write *****************
   824 ;; Defined at:
   825 ;;		line 132 in file "mcc_generated_files/eusart1.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  txData          1    wreg     unsigned char 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  txData          1   14[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   839 ;;      Params:         0       0       0       0       0       0       0
   840 ;;      Locals:         1       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0
   842 ;;      Totals:         1       0       0       0       0       0       0
   843 ;;Total ram usage:        1 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    2
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_putch
   850 ;;		_main
   851 ;;		_relayControl
   852 ;;		_sendString
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text4
   857  0007FE                     __ptext4:
   858                           	opt stack 0
   859  0007FE                     _EUSART1_Write:
   860                           	opt stack 27
   861                           
   862                           ;incstack = 0
   863                           ;EUSART1_Write@txData stored from wreg
   864  0007FE  6E34               	movwf	EUSART1_Write@txData,c
   865                           
   866                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
   867  000800  D000               	goto	l827
   868  000802                     l827:
   869  000802  5044               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   870  000804  B4D8               	btfsc	status,2,c
   871  000806  D7FD               	goto	l827
   872                           
   873                           ;eusart1.c: 136: }
   874                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
   875  000808  B89D               	btfsc	3997,4,c	;volatile
   876  00080A  D003               	goto	l70
   877                           
   878                           ;eusart1.c: 139: {
   879                           ;eusart1.c: 140: TXREG1 = txData;
   880  00080C  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   881                           
   882                           ;eusart1.c: 141: }
   883  000810  D014               	goto	l841
   884  000812                     l70:
   885                           
   886                           ;eusart1.c: 142: else
   887                           ;eusart1.c: 143: {
   888                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
   889  000812  989D               	bcf	3997,4,c	;volatile
   890                           
   891                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
   892  000814  5024               	movf	_eusart1TxHead,w,c
   893  000816  0D01               	mullw	1
   894  000818  0E19               	movlw	low _eusart1TxBuffer
   895  00081A  24F3               	addwf	prodl,w,c
   896  00081C  6ED9               	movwf	fsr2l,c
   897  00081E  0E00               	movlw	high _eusart1TxBuffer
   898  000820  20F4               	addwfc	prodh,w,c
   899  000822  6EDA               	movwf	fsr2h,c
   900  000824  C034  FFDF         	movff	EUSART1_Write@txData,indf2
   901  000828  2A24               	incf	_eusart1TxHead,f,c
   902                           
   903                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
   904  00082A  0E07               	movlw	7
   905  00082C  6424               	cpfsgt	_eusart1TxHead,c
   906  00082E  D003               	goto	l839
   907                           
   908                           ;eusart1.c: 147: {
   909                           ;eusart1.c: 148: eusart1TxHead = 0;
   910  000830  0E00               	movlw	0
   911  000832  6E24               	movwf	_eusart1TxHead,c
   912  000834  D000               	goto	l839
   913  000836                     l839:
   914                           
   915                           ;eusart1.c: 149: }
   916                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
   917  000836  0644               	decf	_eusart1TxBufferRemaining,f,c	;volatile
   918  000838  D000               	goto	l841
   919  00083A                     l841:
   920                           
   921                           ;eusart1.c: 151: }
   922                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
   923  00083A  889D               	bsf	3997,4,c	;volatile
   924  00083C  0012               	return		;funcret
   925  00083E                     __end_of_EUSART1_Write:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           prodh	equ	0xFF4
   932                           prodl	equ	0xFF3
   933                           intcon	equ	0xFF2
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           indf2	equ	0xFDF
   937                           fsr2h	equ	0xFDA
   938                           fsr2l	equ	0xFD9
   939                           status	equ	0xFD8
   940                           
   941 ;; *************** function _SYSTEM_Initialize *****************
   942 ;; Defined at:
   943 ;;		line 111 in file "mcc_generated_files/mcc.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;		None               void
   950 ;; Registers used:
   951 ;;		wreg, status,2, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         0       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    3
   964 ;; This function calls:
   965 ;;		_EUSART1_Initialize
   966 ;;		_INTERRUPT_Initialize
   967 ;;		_OSCILLATOR_Initialize
   968 ;;		_PIN_MANAGER_Initialize
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text5
   975  000950                     __ptext5:
   976                           	opt stack 0
   977  000950                     _SYSTEM_Initialize:
   978                           	opt stack 27
   979                           
   980                           ;mcc.c: 114: INTERRUPT_Initialize();
   981                           
   982                           ;incstack = 0
   983  000950  ECBD  F004         	call	_INTERRUPT_Initialize	;wreg free
   984                           
   985                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   986  000954  ECDA  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   987                           
   988                           ;mcc.c: 116: OSCILLATOR_Initialize();
   989  000958  ECB1  F004         	call	_OSCILLATOR_Initialize	;wreg free
   990                           
   991                           ;mcc.c: 117: EUSART1_Initialize();
   992  00095C  EC3C  F004         	call	_EUSART1_Initialize	;wreg free
   993  000960  0012               	return		;funcret
   994  000962                     __end_of_SYSTEM_Initialize:
   995                           	opt stack 0
   996                           tblptru	equ	0xFF8
   997                           tblptrh	equ	0xFF7
   998                           tblptrl	equ	0xFF6
   999                           tablat	equ	0xFF5
  1000                           prodh	equ	0xFF4
  1001                           prodl	equ	0xFF3
  1002                           intcon	equ	0xFF2
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           indf2	equ	0xFDF
  1006                           fsr2h	equ	0xFDA
  1007                           fsr2l	equ	0xFD9
  1008                           status	equ	0xFD8
  1009                           
  1010 ;; *************** function _PIN_MANAGER_Initialize *****************
  1011 ;; Defined at:
  1012 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;		None               void
  1019 ;; Registers used:
  1020 ;;		wreg, status,2
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1026 ;;      Params:         0       0       0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_SYSTEM_Initialize
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text6
  1041  0007B4                     __ptext6:
  1042                           	opt stack 0
  1043  0007B4                     _PIN_MANAGER_Initialize:
  1044                           	opt stack 27
  1045                           
  1046                           ;pin_manager.c: 56: LATE = 0x00;
  1047                           
  1048                           ;incstack = 0
  1049  0007B4  0E00               	movlw	0
  1050  0007B6  6E8D               	movwf	3981,c	;volatile
  1051                           
  1052                           ;pin_manager.c: 57: LATD = 0x00;
  1053  0007B8  0E00               	movlw	0
  1054  0007BA  6E8C               	movwf	3980,c	;volatile
  1055                           
  1056                           ;pin_manager.c: 58: LATA = 0x00;
  1057  0007BC  0E00               	movlw	0
  1058  0007BE  6E89               	movwf	3977,c	;volatile
  1059                           
  1060                           ;pin_manager.c: 59: LATB = 0x00;
  1061  0007C0  0E00               	movlw	0
  1062  0007C2  6E8A               	movwf	3978,c	;volatile
  1063                           
  1064                           ;pin_manager.c: 60: LATC = 0x00;
  1065  0007C4  0E00               	movlw	0
  1066  0007C6  6E8B               	movwf	3979,c	;volatile
  1067                           
  1068                           ;pin_manager.c: 65: TRISE = 0x00;
  1069  0007C8  0E00               	movlw	0
  1070  0007CA  6E96               	movwf	3990,c	;volatile
  1071                           
  1072                           ;pin_manager.c: 66: TRISA = 0x80;
  1073  0007CC  0E80               	movlw	128
  1074  0007CE  6E92               	movwf	3986,c	;volatile
  1075                           
  1076                           ;pin_manager.c: 67: TRISB = 0xFF;
  1077  0007D0  6893               	setf	3987,c	;volatile
  1078                           
  1079                           ;pin_manager.c: 68: TRISC = 0xB8;
  1080  0007D2  0EB8               	movlw	184
  1081  0007D4  6E94               	movwf	3988,c	;volatile
  1082                           
  1083                           ;pin_manager.c: 69: TRISD = 0xFC;
  1084  0007D6  0EFC               	movlw	252
  1085  0007D8  6E95               	movwf	3989,c	;volatile
  1086                           
  1087                           ;pin_manager.c: 74: ANSELC = 0x38;
  1088  0007DA  0E38               	movlw	56
  1089  0007DC  010F               	movlb	15	; () banked
  1090  0007DE  6F3A               	movwf	58,b	;volatile
  1091                           
  1092                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1093  0007E0  0E3F               	movlw	63
  1094  0007E2  010F               	movlb	15	; () banked
  1095  0007E4  6F39               	movwf	57,b	;volatile
  1096                           
  1097                           ;pin_manager.c: 76: ANSELD = 0x00;
  1098  0007E6  0E00               	movlw	0
  1099  0007E8  010F               	movlb	15	; () banked
  1100  0007EA  6F3B               	movwf	59,b	;volatile
  1101                           
  1102                           ;pin_manager.c: 77: ANSELE = 0x00;
  1103  0007EC  0E00               	movlw	0
  1104  0007EE  010F               	movlb	15	; () banked
  1105  0007F0  6F3C               	movwf	60,b	;volatile
  1106                           
  1107                           ;pin_manager.c: 78: ANSELA = 0x00;
  1108  0007F2  0E00               	movlw	0
  1109  0007F4  010F               	movlb	15	; () banked
  1110  0007F6  6F38               	movwf	56,b	;volatile
  1111                           
  1112                           ; BSR set to: 15
  1113                           ;pin_manager.c: 83: WPUB = 0xFF;
  1114  0007F8  6861               	setf	3937,c	;volatile
  1115                           
  1116                           ; BSR set to: 15
  1117                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1118  0007FA  9EF1               	bcf	intcon2,7,c	;volatile
  1119                           
  1120                           ; BSR set to: 15
  1121  0007FC  0012               	return		;funcret
  1122  0007FE                     __end_of_PIN_MANAGER_Initialize:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           prodh	equ	0xFF4
  1129                           prodl	equ	0xFF3
  1130                           intcon	equ	0xFF2
  1131                           intcon2	equ	0xFF1
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           indf2	equ	0xFDF
  1135                           fsr2h	equ	0xFDA
  1136                           fsr2l	equ	0xFD9
  1137                           status	equ	0xFD8
  1138                           
  1139 ;; *************** function _OSCILLATOR_Initialize *****************
  1140 ;; Defined at:
  1141 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;		None               void
  1148 ;; Registers used:
  1149 ;;		wreg, status,2
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1155 ;;      Params:         0       0       0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0
  1158 ;;      Totals:         0       0       0       0       0       0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    2
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_SYSTEM_Initialize
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text7
  1170  000962                     __ptext7:
  1171                           	opt stack 0
  1172  000962                     _OSCILLATOR_Initialize:
  1173                           	opt stack 27
  1174                           
  1175                           ;mcc.c: 123: OSCCON = 0x60;
  1176                           
  1177                           ; BSR set to: 15
  1178                           ;incstack = 0
  1179  000962  0E60               	movlw	96
  1180  000964  6ED3               	movwf	4051,c	;volatile
  1181                           
  1182                           ;mcc.c: 125: OSCCON2 = 0x04;
  1183  000966  0E04               	movlw	4
  1184  000968  6ED2               	movwf	4050,c	;volatile
  1185                           
  1186                           ;mcc.c: 127: OSCTUNE = 0x00;
  1187  00096A  0E00               	movlw	0
  1188  00096C  6E9B               	movwf	3995,c	;volatile
  1189  00096E  0012               	return		;funcret
  1190  000970                     __end_of_OSCILLATOR_Initialize:
  1191                           	opt stack 0
  1192                           tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           prodh	equ	0xFF4
  1197                           prodl	equ	0xFF3
  1198                           intcon	equ	0xFF2
  1199                           intcon2	equ	0xFF1
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           indf2	equ	0xFDF
  1203                           fsr2h	equ	0xFDA
  1204                           fsr2l	equ	0xFD9
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function _INTERRUPT_Initialize *****************
  1208 ;; Defined at:
  1209 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;		None               void
  1216 ;; Registers used:
  1217 ;;		None
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1223 ;;      Params:         0       0       0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    2
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_SYSTEM_Initialize
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text8
  1238  00097A                     __ptext8:
  1239                           	opt stack 0
  1240  00097A                     _INTERRUPT_Initialize:
  1241                           	opt stack 27
  1242                           
  1243                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1244                           
  1245                           ;incstack = 0
  1246  00097A  9ED0               	bcf	4048,7,c	;volatile
  1247  00097C  0012               	return		;funcret
  1248  00097E                     __end_of_INTERRUPT_Initialize:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           prodh	equ	0xFF4
  1255                           prodl	equ	0xFF3
  1256                           intcon	equ	0xFF2
  1257                           intcon2	equ	0xFF1
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           indf2	equ	0xFDF
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _EUSART1_Initialize *****************
  1266 ;; Defined at:
  1267 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		wreg, status,2
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1281 ;;      Params:         0       0       0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    2
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_SYSTEM_Initialize
  1292 ;;		_sendString
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text9
  1297  000878                     __ptext9:
  1298                           	opt stack 0
  1299  000878                     _EUSART1_Initialize:
  1300                           	opt stack 27
  1301                           
  1302                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1303                           
  1304                           ;incstack = 0
  1305  000878  9A9D               	bcf	3997,5,c	;volatile
  1306                           
  1307                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1308  00087A  989D               	bcf	3997,4,c	;volatile
  1309                           
  1310                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1311  00087C  0E08               	movlw	8
  1312  00087E  6EB8               	movwf	4024,c	;volatile
  1313                           
  1314                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1315  000880  0E90               	movlw	144
  1316  000882  6EAB               	movwf	4011,c	;volatile
  1317                           
  1318                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1319  000884  0E24               	movlw	36
  1320  000886  6EAC               	movwf	4012,c	;volatile
  1321                           
  1322                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1323  000888  0ECF               	movlw	207
  1324  00088A  6EAF               	movwf	4015,c	;volatile
  1325                           
  1326                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1327  00088C  0E00               	movlw	0
  1328  00088E  6EB0               	movwf	4016,c	;volatile
  1329                           
  1330                           ;eusart1.c: 100: eusart1TxHead = 0;
  1331  000890  0E00               	movlw	0
  1332  000892  6E24               	movwf	_eusart1TxHead,c
  1333                           
  1334                           ;eusart1.c: 101: eusart1TxTail = 0;
  1335  000894  0E00               	movlw	0
  1336  000896  6E25               	movwf	_eusart1TxTail,c
  1337                           
  1338                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1339  000898  0E08               	movlw	8
  1340  00089A  6E44               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1341                           
  1342                           ;eusart1.c: 104: eusart1RxHead = 0;
  1343  00089C  0E00               	movlw	0
  1344  00089E  6E22               	movwf	_eusart1RxHead,c
  1345                           
  1346                           ;eusart1.c: 105: eusart1RxTail = 0;
  1347  0008A0  0E00               	movlw	0
  1348  0008A2  6E23               	movwf	_eusart1RxTail,c
  1349                           
  1350                           ;eusart1.c: 106: eusart1RxCount = 0;
  1351  0008A4  0E00               	movlw	0
  1352  0008A6  6E21               	movwf	_eusart1RxCount,c	;volatile
  1353                           
  1354                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1355  0008A8  8A9D               	bsf	3997,5,c	;volatile
  1356  0008AA  0012               	return		;funcret
  1357  0008AC                     __end_of_EUSART1_Initialize:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           prodh	equ	0xFF4
  1364                           prodl	equ	0xFF3
  1365                           intcon	equ	0xFF2
  1366                           intcon2	equ	0xFF1
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           indf2	equ	0xFDF
  1370                           fsr2h	equ	0xFDA
  1371                           fsr2l	equ	0xFD9
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _EUSART1_Read *****************
  1375 ;; Defined at:
  1376 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  readValue       1   14[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      unsigned char 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         0       0       0       0       0       0       0
  1391 ;;      Locals:         1       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0
  1393 ;;      Totals:         1       0       0       0       0       0       0
  1394 ;;Total ram usage:        1 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    2
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;;		_getch
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text10
  1406  00083E                     __ptext10:
  1407                           	opt stack 0
  1408  00083E                     _EUSART1_Read:
  1409                           	opt stack 28
  1410                           
  1411                           ;eusart1.c: 114: uint8_t readValue = 0;
  1412                           
  1413                           ;incstack = 0
  1414  00083E  0E00               	movlw	0
  1415  000840  6E34               	movwf	EUSART1_Read@readValue,c
  1416                           
  1417                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1418  000842  D000               	goto	l873
  1419  000844                     l873:
  1420  000844  5021               	movf	_eusart1RxCount,w,c	;volatile
  1421  000846  B4D8               	btfsc	status,2,c
  1422  000848  D7FD               	goto	l873
  1423                           
  1424                           ;eusart1.c: 118: }
  1425                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1426  00084A  5023               	movf	_eusart1RxTail,w,c
  1427  00084C  0D01               	mullw	1
  1428  00084E  0E11               	movlw	low _eusart1RxBuffer
  1429  000850  24F3               	addwf	prodl,w,c
  1430  000852  6ED9               	movwf	fsr2l,c
  1431  000854  0E00               	movlw	high _eusart1RxBuffer
  1432  000856  20F4               	addwfc	prodh,w,c
  1433  000858  6EDA               	movwf	fsr2h,c
  1434  00085A  50DF               	movf	indf2,w,c
  1435  00085C  6E34               	movwf	EUSART1_Read@readValue,c
  1436  00085E  2A23               	incf	_eusart1RxTail,f,c
  1437                           
  1438                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1439  000860  0E07               	movlw	7
  1440  000862  6423               	cpfsgt	_eusart1RxTail,c
  1441  000864  D003               	goto	l883
  1442                           
  1443                           ;eusart1.c: 122: {
  1444                           ;eusart1.c: 123: eusart1RxTail = 0;
  1445  000866  0E00               	movlw	0
  1446  000868  6E23               	movwf	_eusart1RxTail,c
  1447  00086A  D000               	goto	l883
  1448  00086C                     l883:
  1449                           
  1450                           ;eusart1.c: 124: }
  1451                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1452  00086C  9A9D               	bcf	3997,5,c	;volatile
  1453                           
  1454                           ;eusart1.c: 126: eusart1RxCount--;
  1455  00086E  0621               	decf	_eusart1RxCount,f,c	;volatile
  1456                           
  1457                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1458  000870  8A9D               	bsf	3997,5,c	;volatile
  1459                           
  1460                           ;eusart1.c: 129: return readValue;
  1461  000872  5034               	movf	EUSART1_Read@readValue,w,c
  1462  000874  0012               	return	
  1463  000876  0012               	return		;funcret
  1464  000878                     __end_of_EUSART1_Read:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           tblptrh	equ	0xFF7
  1468                           tblptrl	equ	0xFF6
  1469                           tablat	equ	0xFF5
  1470                           prodh	equ	0xFF4
  1471                           prodl	equ	0xFF3
  1472                           intcon	equ	0xFF2
  1473                           intcon2	equ	0xFF1
  1474                           postinc0	equ	0xFEE
  1475                           wreg	equ	0xFE8
  1476                           indf2	equ	0xFDF
  1477                           fsr2h	equ	0xFDA
  1478                           fsr2l	equ	0xFD9
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _INTERRUPT_InterruptManager *****************
  1482 ;; Defined at:
  1483 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;		None               void
  1490 ;; Registers used:
  1491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         0       0       0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0
  1499 ;;      Temps:         14       0       0       0       0       0       0
  1500 ;;      Totals:        14       0       0       0       0       0       0
  1501 ;;Total ram usage:       14 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    1
  1504 ;; This function calls:
  1505 ;;		_EUSART1_Receive_ISR
  1506 ;;		_EUSART1_Transmit_ISR
  1507 ;; This function is called by:
  1508 ;;		Interrupt level 2
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	intcode
  1513  000008                     __pintcode:
  1514                           	opt stack 0
  1515  000008                     _INTERRUPT_InterruptManager:
  1516                           	opt stack 26
  1517                           
  1518                           ;incstack = 0
  1519  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1520  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1521  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1522  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1523  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1524  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1525  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1526  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1527  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1528  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1529  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1530  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1531  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1532  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1533                           
  1534                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1535  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1536  000042  A89D               	btfss	3997,4,c	;volatile
  1537  000044  D005               	goto	i2l148
  1538  000046  A89E               	btfss	3998,4,c	;volatile
  1539  000048  D003               	goto	i2l148
  1540                           
  1541                           ;interrupt_manager.c: 61: {
  1542                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1543  00004A  EC56  F004         	call	_EUSART1_Transmit_ISR	;wreg free
  1544                           
  1545                           ;interrupt_manager.c: 63: }
  1546  00004E  D008               	goto	i2l152
  1547  000050                     i2l148:
  1548                           
  1549                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1550  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1551  000052  AA9D               	btfss	3997,5,c	;volatile
  1552  000054  D005               	goto	i2l152
  1553  000056  AA9E               	btfss	3998,5,c	;volatile
  1554  000058  D003               	goto	i2l152
  1555                           
  1556                           ;interrupt_manager.c: 65: {
  1557                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1558  00005A  EC6F  F004         	call	_EUSART1_Receive_ISR	;wreg free
  1559                           
  1560                           ;interrupt_manager.c: 68: else
  1561                           ;interrupt_manager.c: 69: {
  1562                           
  1563                           ;interrupt_manager.c: 67: }
  1564  00005E  D000               	goto	i2l152
  1565  000060                     i2l152:
  1566  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1567  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1568  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1569  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1570  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1571  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1572  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1573  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1574  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1575  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1576  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1577  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1578  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1579  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1580  000098  0011               	retfie		f
  1581  00009A                     __end_of_INTERRUPT_InterruptManager:
  1582                           	opt stack 0
  1583                           pclatu	equ	0xFFB
  1584                           pclath	equ	0xFFA
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           prodh	equ	0xFF4
  1590                           prodl	equ	0xFF3
  1591                           intcon	equ	0xFF2
  1592                           intcon2	equ	0xFF1
  1593                           postinc0	equ	0xFEE
  1594                           fsr0h	equ	0xFEA
  1595                           fsr0l	equ	0xFE9
  1596                           wreg	equ	0xFE8
  1597                           fsr1h	equ	0xFE2
  1598                           fsr1l	equ	0xFE1
  1599                           indf2	equ	0xFDF
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _EUSART1_Transmit_ISR *****************
  1605 ;; Defined at:
  1606 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;		None               void
  1613 ;; Registers used:
  1614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1620 ;;      Params:         0       0       0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_INTERRUPT_InterruptManager
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text12
  1634  0008AC                     __ptext12:
  1635                           	opt stack 0
  1636  0008AC                     _EUSART1_Transmit_ISR:
  1637                           	opt stack 26
  1638                           
  1639                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1640                           
  1641                           ;incstack = 0
  1642  0008AC  0E08               	movlw	8
  1643  0008AE  6044               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1644  0008B0  D013               	goto	i2l82
  1645                           
  1646                           ;eusart1.c: 170: {
  1647                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1648  0008B2  5025               	movf	_eusart1TxTail,w,c
  1649  0008B4  0D01               	mullw	1
  1650  0008B6  0E19               	movlw	low _eusart1TxBuffer
  1651  0008B8  24F3               	addwf	prodl,w,c
  1652  0008BA  6ED9               	movwf	fsr2l,c
  1653  0008BC  0E00               	movlw	high _eusart1TxBuffer
  1654  0008BE  20F4               	addwfc	prodh,w,c
  1655  0008C0  6EDA               	movwf	fsr2h,c
  1656  0008C2  50DF               	movf	indf2,w,c
  1657  0008C4  6EAD               	movwf	4013,c	;volatile
  1658  0008C6  2A25               	incf	_eusart1TxTail,f,c
  1659                           
  1660                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1661  0008C8  0E07               	movlw	7
  1662  0008CA  6425               	cpfsgt	_eusart1TxTail,c
  1663  0008CC  D003               	goto	i2l903
  1664                           
  1665                           ;eusart1.c: 173: {
  1666                           ;eusart1.c: 174: eusart1TxTail = 0;
  1667  0008CE  0E00               	movlw	0
  1668  0008D0  6E25               	movwf	_eusart1TxTail,c
  1669  0008D2  D000               	goto	i2l903
  1670  0008D4                     i2l903:
  1671                           
  1672                           ;eusart1.c: 175: }
  1673                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1674  0008D4  2A44               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1675                           
  1676                           ;eusart1.c: 177: }
  1677  0008D6  0012               	return	
  1678  0008D8                     i2l82:
  1679                           
  1680                           ;eusart1.c: 178: else
  1681                           ;eusart1.c: 179: {
  1682                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1683  0008D8  989D               	bcf	3997,4,c	;volatile
  1684  0008DA  0012               	return	
  1685  0008DC  0012               	return		;funcret
  1686  0008DE                     __end_of_EUSART1_Transmit_ISR:
  1687                           	opt stack 0
  1688                           pclatu	equ	0xFFB
  1689                           pclath	equ	0xFFA
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           prodh	equ	0xFF4
  1695                           prodl	equ	0xFF3
  1696                           intcon	equ	0xFF2
  1697                           intcon2	equ	0xFF1
  1698                           postinc0	equ	0xFEE
  1699                           fsr0h	equ	0xFEA
  1700                           fsr0l	equ	0xFE9
  1701                           wreg	equ	0xFE8
  1702                           fsr1h	equ	0xFE2
  1703                           fsr1l	equ	0xFE1
  1704                           indf2	equ	0xFDF
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _EUSART1_Receive_ISR *****************
  1710 ;; Defined at:
  1711 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1725 ;;      Params:         0       0       0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_INTERRUPT_InterruptManager
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text13
  1739  0008DE                     __ptext13:
  1740                           	opt stack 0
  1741  0008DE                     _EUSART1_Receive_ISR:
  1742                           	opt stack 26
  1743                           
  1744                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1745                           
  1746                           ;incstack = 0
  1747  0008DE  A2AB               	btfss	4011,1,c	;volatile
  1748  0008E0  D003               	goto	i2l909
  1749                           
  1750                           ;eusart1.c: 188: {
  1751                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1752  0008E2  98AB               	bcf	4011,4,c	;volatile
  1753                           
  1754                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1755  0008E4  88AB               	bsf	4011,4,c	;volatile
  1756  0008E6  D000               	goto	i2l909
  1757  0008E8                     i2l909:
  1758                           
  1759                           ;eusart1.c: 193: }
  1760                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1761  0008E8  5022               	movf	_eusart1RxHead,w,c
  1762  0008EA  0D01               	mullw	1
  1763  0008EC  0E11               	movlw	low _eusart1RxBuffer
  1764  0008EE  24F3               	addwf	prodl,w,c
  1765  0008F0  6ED9               	movwf	fsr2l,c
  1766  0008F2  0E00               	movlw	high _eusart1RxBuffer
  1767  0008F4  20F4               	addwfc	prodh,w,c
  1768  0008F6  6EDA               	movwf	fsr2h,c
  1769  0008F8  CFAE FFDF          	movff	4014,indf2	;volatile
  1770  0008FC  2A22               	incf	_eusart1RxHead,f,c
  1771                           
  1772                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1773  0008FE  0E07               	movlw	7
  1774  000900  6422               	cpfsgt	_eusart1RxHead,c
  1775  000902  D003               	goto	i2l917
  1776                           
  1777                           ;eusart1.c: 198: {
  1778                           ;eusart1.c: 199: eusart1RxHead = 0;
  1779  000904  0E00               	movlw	0
  1780  000906  6E22               	movwf	_eusart1RxHead,c
  1781  000908  D000               	goto	i2l917
  1782  00090A                     i2l917:
  1783                           
  1784                           ;eusart1.c: 200: }
  1785                           ;eusart1.c: 201: eusart1RxCount++;
  1786  00090A  2A21               	incf	_eusart1RxCount,f,c	;volatile
  1787  00090C  0012               	return		;funcret
  1788  00090E                     __end_of_EUSART1_Receive_ISR:
  1789                           	opt stack 0
  1790                           pclatu	equ	0xFFB
  1791                           pclath	equ	0xFFA
  1792                           tblptru	equ	0xFF8
  1793                           tblptrh	equ	0xFF7
  1794                           tblptrl	equ	0xFF6
  1795                           tablat	equ	0xFF5
  1796                           prodh	equ	0xFF4
  1797                           prodl	equ	0xFF3
  1798                           intcon	equ	0xFF2
  1799                           intcon2	equ	0xFF1
  1800                           postinc0	equ	0xFEE
  1801                           fsr0h	equ	0xFEA
  1802                           fsr0l	equ	0xFE9
  1803                           wreg	equ	0xFE8
  1804                           fsr1h	equ	0xFE2
  1805                           fsr1l	equ	0xFE1
  1806                           indf2	equ	0xFDF
  1807                           fsr2h	equ	0xFDA
  1808                           fsr2l	equ	0xFD9
  1809                           status	equ	0xFD8
  1810                           pclatu	equ	0xFFB
  1811                           pclath	equ	0xFFA
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           intcon	equ	0xFF2
  1819                           intcon2	equ	0xFF1
  1820                           postinc0	equ	0xFEE
  1821                           fsr0h	equ	0xFEA
  1822                           fsr0l	equ	0xFE9
  1823                           wreg	equ	0xFE8
  1824                           fsr1h	equ	0xFE2
  1825                           fsr1l	equ	0xFE1
  1826                           indf2	equ	0xFDF
  1827                           fsr2h	equ	0xFDA
  1828                           fsr2l	equ	0xFD9
  1829                           status	equ	0xFD8
  1830                           
  1831                           	psect	rparam
  1832  0000                     pclatu	equ	0xFFB
  1833                           pclath	equ	0xFFA
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           intcon	equ	0xFF2
  1841                           intcon2	equ	0xFF1
  1842                           postinc0	equ	0xFEE
  1843                           fsr0h	equ	0xFEA
  1844                           fsr0l	equ	0xFE9
  1845                           wreg	equ	0xFE8
  1846                           fsr1h	equ	0xFE2
  1847                           fsr1l	equ	0xFE1
  1848                           indf2	equ	0xFDF
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[3]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _relayControl->_EUSART1_Write
    _printf->_putch
    _putch->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     537
                                             21 COMRAM     8     8      0
                       _EUSART1_Read
                      _EUSART1_Write
                  _SYSTEM_Initialize
                             _printf
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     219
                                             16 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      45
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _putch
       _EUSART1_Write
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      44       1       71.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44       9        0.0%
DATA                 0      0      44      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed May 24 13:57:41 2017

           _eusart1TxBufferRemaining 0044                                   l70 0812  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l211 0786  
                                l214 078A                                  l217 07B2  
                                l187 070A                                  l188 06C4  
                                l841 083A                                  l827 0802  
                                l931 0748                                  l839 0836  
                                l943 078E                                  l935 075C  
                                l927 0738                                  l873 0844  
                                l929 0740                                  l883 086C  
                                l947 0796                         __CFG_CPB$OFF 000000  
                                u330 070A                         __CFG_CPD$OFF 000000  
                                u357 0690                                  u367 06EA  
                                u377 0774                                  prod 000FF3  
                                wreg 000FE8                                 l1111 068A  
                               l1103 0662                                 l1123 06C8  
                               l1115 06A2                                 l1107 0676  
                               l1061 0920                                 l1133 06FC  
                               l1125 06D0                                 l1143 0726  
                               l1129 06E4                                 l1059 0918  
                               STR_1 0601                                 STR_2 0610  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l82 08D8  
                               _WPUB 000F61                        _EUSART1_Write 07FE  
                               _main 0614                        ?_EUSART1_Read 0026  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 009A  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0970  
                              ?_main 0026                       __CFG_DEBUG$OFF 000000  
                              i2l152 0060                                i2l148 0050  
                              i2l903 08D4                                i2l917 090A  
                              i2l909 08E8                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _TFNum 0043                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 08AC  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
                              _putch 0970                       ?_EUSART1_Write 0026  
                              tablat 000FF5                       ??_EUSART1_Read 0034  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 093A  
         __end_of_EUSART1_Initialize 08AC                         __end_of_main 0734  
        ?_INTERRUPT_InterruptManager 0026                               ??_main 003B  
                      __activetblptr 000002                ?_EUSART1_Transmit_ISR 0026  
                      main@count_640 0040                               _ANSELA 000F38  
                             ?_putch 0026                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                       __CFG_STVREN$ON 000000  
                             clear_0 0940                               _printf 090E  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    ??_EUSART1_Write 0034                      _eusart1RxBuffer 0011  
      __size_of_INTERRUPT_Initialize 0004                      _eusart1TxBuffer 0019  
                  _SYSTEM_Initialize 0950                           __accesstop 0060  
            __end_of__initialization 0946                   ?_SYSTEM_Initialize 0026  
                      ___rparam_used 000001                       __pcstackCOMRAM 0026  
                ??_SYSTEM_Initialize 0034                        __end_of_putch 097A  
               __end_of_EUSART1_Read 0878               ??_EUSART1_Transmit_ISR 0026  
        __end_of_EUSART1_Receive_ISR 090E                        ?_relayControl 0026  
          __end_of_SYSTEM_Initialize 0962                              ??_putch 0035  
                      _eusart1RxHead 0022                        _eusart1TxHead 0024  
                      _eusart1RxTail 0023                        _eusart1TxTail 0025  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 0043  
                     main@flashCount 003E                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                              ?_printf 0036  
                            _OSCCON2 000FD2                       ??_relayControl 0035  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                         __psmallconst 0600  
                            __pcinit 093A                              __ramtop 0600  
                            __ptext0 0614                              __ptext1 0734  
                            __ptext2 090E                              __ptext3 0970  
                            __ptext4 07FE                              __ptext5 0950  
                            __ptext6 07B4                              __ptext7 0962  
                            __ptext8 097A                              __ptext9 0878  
                    __size_of_printf 002C                _OSCILLATOR_Initialize 0962  
                 _EUSART1_Initialize 0878             ??_PIN_MANAGER_Initialize 0034  
         __size_of_SYSTEM_Initialize 0012                 end_of_initialization 0946  
                ?_EUSART1_Initialize 0026                        __Lmediumconst 0000  
                            printf@c 003A                              printf@f 0036  
                            postinc0 000FEE                __size_of_EUSART1_Read 003A  
               ??_EUSART1_Initialize 0034                  EUSART1_Write@txData 0034  
                         main@RxData 0042                         _EUSART1_Read 083E  
               __end_of_relayControl 07B4         __end_of_INTERRUPT_Initialize 097E  
             ?_OSCILLATOR_Initialize 0026                       __end_of_printf 093A  
                start_initialization 093A      __size_of_PIN_MANAGER_Initialize 004A  
                        putch@txData 0035                __end_of_EUSART1_Write 083E  
                           ??_printf 0038                       _eusart1RxCount 0021  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                  relayControl@count 0037         __size_of_EUSART1_Receive_ISR 0030  
             _PIN_MANAGER_Initialize 07B4                            __pintcode 0008  
       ??_INTERRUPT_InterruptManager 0026                     __CFG_PRICLKEN$ON 000000  
                        __smallconst 0600                             _BAUDCON1 000FB8  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 097A  
                           _LATDbits 000F8C                __size_of_relayControl 0080  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0092  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            main@count 003C  
                       _relayControl 0734                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0026                EUSART1_Read@readValue 0034  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0034          __size_of_EUSART1_Initialize 0034  
                   relayControl@data 0036                             __ptext10 083E  
                           __ptext12 08AC                             __ptext13 08DE  
                      __size_of_main 0120                             _site0_IL 0001  
 __end_of_INTERRUPT_InterruptManager 009A           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 08DE                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 0034                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0026              ?_PIN_MANAGER_Initialize 0026  
                         _RCSTA1bits 000FAB         __end_of_EUSART1_Transmit_ISR 08DE  
                           printf@ap 0038               __size_of_EUSART1_Write 0040  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0026  
     __end_of_PIN_MANAGER_Initialize 07FE                    __CFG_FOSC$INTIO67 000000  
