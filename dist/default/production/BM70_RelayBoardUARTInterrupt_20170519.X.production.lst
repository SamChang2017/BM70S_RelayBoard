

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May 25 17:14:14 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	nvCOMRAM
    28  000043                     __pnvCOMRAM:
    29                           	opt stack 0
    30  000043                     _TFNum:
    31                           	opt stack 0
    32  000043                     	ds	1
    33  000044                     _eusart1TxBufferRemaining:
    34                           	opt stack 0
    35  000044                     	ds	1
    36  0000                     _ANSELA	set	3896
    37  0000                     _ANSELB	set	3897
    38  0000                     _ANSELC	set	3898
    39  0000                     _ANSELD	set	3899
    40  0000                     _ANSELE	set	3900
    41  0000                     _BAUDCON1	set	4024
    42  0000                     _INTCON2bits	set	4081
    43  0000                     _INTCONbits	set	4082
    44  0000                     _LATA	set	3977
    45  0000                     _LATAbits	set	3977
    46  0000                     _LATB	set	3978
    47  0000                     _LATC	set	3979
    48  0000                     _LATCbits	set	3979
    49  0000                     _LATD	set	3980
    50  0000                     _LATDbits	set	3980
    51  0000                     _LATE	set	3981
    52  0000                     _LATEbits	set	3981
    53  0000                     _OSCCON	set	4051
    54  0000                     _OSCCON2	set	4050
    55  0000                     _OSCTUNE	set	3995
    56  0000                     _PIE1bits	set	3997
    57  0000                     _PIR1bits	set	3998
    58  0000                     _RCONbits	set	4048
    59  0000                     _RCREG1	set	4014
    60  0000                     _RCSTA1	set	4011
    61  0000                     _RCSTA1bits	set	4011
    62  0000                     _SPBRG1	set	4015
    63  0000                     _SPBRGH1	set	4016
    64  0000                     _TRISA	set	3986
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISC	set	3988
    67  0000                     _TRISD	set	3989
    68  0000                     _TRISE	set	3990
    69  0000                     _TXREG1	set	4013
    70  0000                     _TXSTA1	set	4012
    71  0000                     _WPUB	set	3937
    72                           
    73                           	psect	smallconst
    74  000600                     __psmallconst:
    75                           	opt stack 0
    76  000600  00                 	db	0
    77  000601                     STR_1:
    78  000601  0D                 	db	13
    79  000602  0A                 	db	10
    80  000603  4C                 	db	76	;'L'
    81  000604  45                 	db	69	;'E'
    82  000605  44                 	db	68	;'D'
    83  000606  5F                 	db	95	;'_'
    84  000607  44                 	db	68	;'D'
    85  000608  30                 	db	48	;'0'
    86  000609  20                 	db	32
    87  00060A  74                 	db	116	;'t'
    88  00060B  6F                 	db	111	;'o'
    89  00060C  67                 	db	103	;'g'
    90  00060D  67                 	db	103	;'g'
    91  00060E  6C                 	db	108	;'l'
    92  00060F  65                 	db	101	;'e'
    93  000610  0D                 	db	13
    94  000611  0A                 	db	10
    95  000612  00                 	db	0
    96  0000                     
    97                           ; #config settings
    98  000613  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           	psect	cinit
   101  0009FC                     __pcinit:
   102                           	opt stack 0
   103  0009FC                     start_initialization:
   104                           	opt stack 0
   105  0009FC                     __initialization:
   106                           	opt stack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (37 bytes)
   109  0009FC  EE00  F001         	lfsr	0,__pbssCOMRAM
   110  000A00  0E25               	movlw	37
   111  000A02                     clear_0:
   112  000A02  6AEE               	clrf	postinc0,c
   113  000A04  06E8               	decf	wreg,f,c
   114  000A06  E1FD               	bnz	clear_0
   115  000A08                     end_of_initialization:
   116                           	opt stack 0
   117  000A08                     __end_of__initialization:
   118                           	opt stack 0
   119  000A08  0E00               	movlw	low (__Lmediumconst shr (0+16))
   120  000A0A  6EF8               	movwf	tblptru,c
   121  000A0C  0100               	movlb	0
   122  000A0E  EFAB  F003         	goto	_main	;jump to C main() function
   123                           tblptru	equ	0xFF8
   124                           postinc0	equ	0xFEE
   125                           wreg	equ	0xFE8
   126                           
   127                           	psect	bssCOMRAM
   128  000001                     __pbssCOMRAM:
   129                           	opt stack 0
   130  000001                     _site0_IL:
   131                           	opt stack 0
   132  000001                     	ds	16
   133  000011                     _eusart1RxBuffer:
   134                           	opt stack 0
   135  000011                     	ds	8
   136  000019                     _eusart1TxBuffer:
   137                           	opt stack 0
   138  000019                     	ds	8
   139  000021                     _eusart1RxCount:
   140                           	opt stack 0
   141  000021                     	ds	1
   142  000022                     _eusart1RxHead:
   143                           	opt stack 0
   144  000022                     	ds	1
   145  000023                     _eusart1RxTail:
   146                           	opt stack 0
   147  000023                     	ds	1
   148  000024                     _eusart1TxHead:
   149                           	opt stack 0
   150  000024                     	ds	1
   151  000025                     _eusart1TxTail:
   152                           	opt stack 0
   153  000025                     	ds	1
   154                           tblptru	equ	0xFF8
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	cstackCOMRAM
   159  000026                     __pcstackCOMRAM:
   160                           	opt stack 0
   161  000026                     ??_INTERRUPT_InterruptManager:
   162  000026                     
   163                           ; 1 bytes @ 0x0
   164  000026                     	ds	14
   165  000034                     EUSART1_Read@readValue:
   166                           	opt stack 0
   167  000034                     EUSART1_Write@txData:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0xE
   171  000034                     	ds	1
   172  000035                     ??_relayControl:
   173  000035                     putch@txData:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0xF
   177  000035                     	ds	1
   178  000036                     ?_printf:
   179                           	opt stack 0
   180  000036                     relayControl@data:
   181                           	opt stack 0
   182  000036                     printf@f:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x10
   186  000036                     	ds	1
   187  000037                     relayControl@count:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x11
   191  000037                     	ds	1
   192  000038                     printf@ap:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x12
   196  000038                     	ds	2
   197  00003A                     printf@c:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x14
   201  00003A                     	ds	1
   202  00003B                     ??_main:
   203                           
   204                           ; 0 bytes @ 0x15
   205  00003B                     	ds	1
   206  00003C                     main@count:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x16
   210  00003C                     	ds	2
   211  00003E                     main@flashCount:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x18
   215  00003E                     	ds	2
   216  000040                     main@count_855:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x1A
   220  000040                     	ds	2
   221  000042                     main@RxData:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x1C
   225  000042                     	ds	1
   226                           tblptru	equ	0xFF8
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 32 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  count           2   26[COMRAM] int 
   240 ;;  flashCount      2   24[COMRAM] int 
   241 ;;  count           2   22[COMRAM] int 
   242 ;;  RxData          1   28[COMRAM] unsigned char 
   243 ;; Return value:  Size  Location     Type
   244 ;;		None               void
   245 ;; Registers used:
   246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   252 ;;      Params:         0       0       0       0       0       0       0
   253 ;;      Locals:         7       0       0       0       0       0       0
   254 ;;      Temps:          1       0       0       0       0       0       0
   255 ;;      Totals:         8       0       0       0       0       0       0
   256 ;;Total ram usage:        8 bytes
   257 ;; Hardware stack levels required when called:    5
   258 ;; This function calls:
   259 ;;		_EUSART1_Read
   260 ;;		_EUSART1_Write
   261 ;;		_SYSTEM_Initialize
   262 ;;		_printf
   263 ;;		_relayControl
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270  000756                     __ptext0:
   271                           	opt stack 0
   272  000756                     _main:
   273                           	opt stack 26
   274                           
   275                           ;main.c: 35: SYSTEM_Initialize();
   276                           
   277                           ;incstack = 0
   278  000756  EC09  F005         	call	_SYSTEM_Initialize	;wreg free
   279                           
   280                           ;main.c: 37: (INTCONbits.GIE = 1);
   281  00075A  8EF2               	bsf	intcon,7,c	;volatile
   282                           
   283                           ;main.c: 38: (INTCONbits.PEIE = 1);
   284  00075C  8CF2               	bsf	intcon,6,c	;volatile
   285                           
   286                           ;main.c: 40: char RxData;
   287                           ;main.c: 42: TFNum = '5';
   288  00075E  0E35               	movlw	53
   289  000760  6E43               	movwf	_TFNum,c
   290                           
   291                           ;main.c: 43: site0_IL[0] = '3';
   292  000762  0E33               	movlw	51
   293  000764  6E01               	movwf	_site0_IL,c
   294                           
   295                           ;main.c: 44: site0_IL[1] = '.';
   296  000766  0E2E               	movlw	46
   297  000768  6E02               	movwf	_site0_IL+1,c
   298                           
   299                           ;main.c: 45: site0_IL[2] = '9';
   300  00076A  0E39               	movlw	57
   301  00076C  6E03               	movwf	_site0_IL+2,c
   302                           
   303                           ;main.c: 46: site0_IL[3] = '4';
   304  00076E  0E34               	movlw	52
   305  000770  6E04               	movwf	_site0_IL+3,c
   306                           
   307                           ;main.c: 48: site0_IL[4] = '3';
   308  000772  0E33               	movlw	51
   309  000774  6E05               	movwf	_site0_IL+4,c
   310                           
   311                           ;main.c: 49: site0_IL[5] = '7';
   312  000776  0E37               	movlw	55
   313  000778  6E06               	movwf	_site0_IL+5,c
   314                           
   315                           ;main.c: 50: site0_IL[6] = '.';
   316  00077A  0E2E               	movlw	46
   317  00077C  6E07               	movwf	_site0_IL+6,c
   318                           
   319                           ;main.c: 51: site0_IL[7] = '9';
   320  00077E  0E39               	movlw	57
   321  000780  6E08               	movwf	_site0_IL+7,c
   322                           
   323                           ;main.c: 53: site0_IL[8] = '1';
   324  000782  0E31               	movlw	49
   325  000784  6E09               	movwf	_site0_IL+8,c
   326                           
   327                           ;main.c: 54: site0_IL[9] = '5';
   328  000786  0E35               	movlw	53
   329  000788  6E0A               	movwf	_site0_IL+9,c
   330                           
   331                           ;main.c: 55: site0_IL[10] = '.';
   332  00078A  0E2E               	movlw	46
   333  00078C  6E0B               	movwf	_site0_IL+10,c
   334                           
   335                           ;main.c: 56: site0_IL[11] = '4';
   336  00078E  0E34               	movlw	52
   337  000790  6E0C               	movwf	_site0_IL+11,c
   338                           
   339                           ;main.c: 58: site0_IL[12] = '5';
   340  000792  0E35               	movlw	53
   341  000794  6E0D               	movwf	_site0_IL+12,c
   342                           
   343                           ;main.c: 59: site0_IL[13] = '.';
   344  000796  0E2E               	movlw	46
   345  000798  6E0E               	movwf	_site0_IL+13,c
   346                           
   347                           ;main.c: 60: site0_IL[14] = '8';
   348  00079A  0E38               	movlw	56
   349  00079C  6E0F               	movwf	_site0_IL+14,c
   350                           
   351                           ;main.c: 61: site0_IL[15] = '7';
   352  00079E  0E37               	movlw	55
   353  0007A0  6E10               	movwf	_site0_IL+15,c
   354  0007A2  D000               	goto	l1176
   355  0007A4                     l1176:
   356                           
   357                           ;main.c: 64: {
   358                           ;main.c: 65: printf("\r\nLED_D0 toggle\r\n");
   359  0007A4  0E01               	movlw	low STR_1
   360  0007A6  6E36               	movwf	printf@f,c
   361  0007A8  0E06               	movlw	high STR_1
   362  0007AA  6E37               	movwf	printf@f+1,c
   363  0007AC  ECE8  F004         	call	_printf	;wreg free
   364                           
   365                           ;main.c: 67: for (int count=0; count<20; count++){
   366  0007B0  0E00               	movlw	0
   367  0007B2  6E3D               	movwf	main@count+1,c
   368  0007B4  0E00               	movlw	0
   369  0007B6  6E3C               	movwf	main@count,c
   370  0007B8                     l1180:
   371  0007B8  BE3D               	btfsc	main@count+1,7,c
   372  0007BA  D008               	goto	l1184
   373  0007BC  503D               	movf	main@count+1,w,c
   374  0007BE  E154               	bnz	l1216
   375  0007C0  0E14               	movlw	20
   376  0007C2  5C3C               	subwf	main@count,w,c
   377  0007C4  B0D8               	btfsc	status,0,c
   378  0007C6  D050               	goto	l1216
   379  0007C8  D001               	goto	l1184
   380  0007CA  D04E               	goto	l1216
   381  0007CC                     l1184:
   382                           
   383                           ;main.c: 68: _delay((unsigned long)((25)*(8000000/4000.0)));
   384  0007CC  0E41               	movlw	65
   385  0007CE  6E3B               	movwf	??_main& (0+255),c
   386  0007D0  0EEE               	movlw	238
   387  0007D2                     u357:
   388  0007D2  2EE8               	decfsz	wreg,f,c
   389  0007D4  D7FE               	goto	u357
   390  0007D6  2E3B               	decfsz	??_main& (0+255),f,c
   391  0007D8  D7FC               	goto	u357
   392  0007DA  D000               	nop2	
   393  0007DC  4A3C               	infsnz	main@count,f,c
   394  0007DE  2A3D               	incf	main@count+1,f,c
   395  0007E0  D7EB               	goto	l1180
   396                           
   397                           ;main.c: 69: }
   398                           ;main.c: 72: while((eusart1RxCount)){
   399  0007E2  D042               	goto	l1216
   400  0007E4                     l1188:
   401                           
   402                           ;main.c: 74: RxData = EUSART1_Read();
   403  0007E4  EC80  F004         	call	_EUSART1_Read	;wreg free
   404  0007E8  6E42               	movwf	main@RxData,c
   405                           
   406                           ;main.c: 75: for (int flashCount=0; flashCount<20; flashCount++){
   407  0007EA  0E00               	movlw	0
   408  0007EC  6E3F               	movwf	main@flashCount+1,c
   409  0007EE  0E00               	movlw	0
   410  0007F0  6E3E               	movwf	main@flashCount,c
   411  0007F2  BE3F               	btfsc	main@flashCount+1,7,c
   412  0007F4  D008               	goto	l194
   413  0007F6  503F               	movf	main@flashCount+1,w,c
   414  0007F8  E129               	bnz	l193
   415  0007FA  0E14               	movlw	20
   416  0007FC  5C3E               	subwf	main@flashCount,w,c
   417  0007FE  B0D8               	btfsc	status,0,c
   418  000800  D025               	goto	l193
   419  000802  D001               	goto	l194
   420  000804  D023               	goto	l193
   421  000806                     l194:
   422  000806  728C               	btg	3980,1,c	;volatile
   423  000808  D000               	goto	l1196
   424  00080A                     l1196:
   425                           
   426                           ;main.c: 77: for (int count=0; count<20; count++){
   427  00080A  0E00               	movlw	0
   428  00080C  6E41               	movwf	main@count_855+1,c
   429  00080E  0E00               	movlw	0
   430  000810  6E40               	movwf	main@count_855,c
   431  000812                     l1198:
   432  000812  BE41               	btfsc	main@count_855+1,7,c
   433  000814  D008               	goto	l1202
   434  000816  5041               	movf	main@count_855+1,w,c
   435  000818  E112               	bnz	l1206
   436  00081A  0E14               	movlw	20
   437  00081C  5C40               	subwf	main@count_855,w,c
   438  00081E  B0D8               	btfsc	status,0,c
   439  000820  D00E               	goto	l1206
   440  000822  D001               	goto	l1202
   441  000824  D00C               	goto	l1206
   442  000826                     l1202:
   443                           
   444                           ;main.c: 78: _delay((unsigned long)((15)*(8000000/4000.0)));
   445  000826  0E27               	movlw	39
   446  000828  6E3B               	movwf	??_main& (0+255),c
   447  00082A  0EF5               	movlw	245
   448  00082C                     u367:
   449  00082C  2EE8               	decfsz	wreg,f,c
   450  00082E  D7FE               	goto	u367
   451  000830  2E3B               	decfsz	??_main& (0+255),f,c
   452  000832  D7FC               	goto	u367
   453  000834  F000               	nop	
   454  000836  4A40               	infsnz	main@count_855,f,c
   455  000838  2A41               	incf	main@count_855+1,f,c
   456  00083A  D7EB               	goto	l1198
   457  00083C  D000               	goto	l1206
   458  00083E                     l1206:
   459  00083E  4A3E               	infsnz	main@flashCount,f,c
   460  000840  2A3F               	incf	main@flashCount+1,f,c
   461  000842  BE3F               	btfsc	main@flashCount+1,7,c
   462  000844  D7E0               	goto	l194
   463  000846  503F               	movf	main@flashCount+1,w,c
   464  000848  E101               	bnz	u330
   465  00084A  D7D7               	goto	L1
   466  00084C                     u330:
   467  00084C                     l193:
   468                           
   469                           ;main.c: 79: }
   470                           ;main.c: 80: }
   471                           ;main.c: 81: PIE1bits.TX1IE=0;
   472  00084C  989D               	bcf	3997,4,c	;volatile
   473                           
   474                           ;main.c: 82: EUSART1_Write(RxData);
   475  00084E  5042               	movf	main@RxData,w,c
   476  000850  EC60  F004         	call	_EUSART1_Write
   477                           
   478                           ;main.c: 83: printf("\r\n");
   479  000854  0E10               	movlw	low (STR_1+15)
   480  000856  6E36               	movwf	printf@f,c
   481  000858  0E06               	movlw	high (STR_1+15)
   482  00085A  6E37               	movwf	printf@f+1,c
   483  00085C  ECE8  F004         	call	_printf	;wreg free
   484                           
   485                           ;main.c: 85: relayControl(RxData);
   486  000860  5042               	movf	main@RxData,w,c
   487  000862  EC0A  F003         	call	_relayControl
   488  000866  D000               	goto	l1216
   489  000868                     l1216:
   490  000868  5021               	movf	_eusart1RxCount,w,c	;volatile
   491  00086A  B4D8               	btfsc	status,2,c
   492  00086C  D79B               	goto	l1176
   493  00086E  D7BA               	goto	l1188
   494                           
   495                           ;main.c: 86: };
   496  000870  D799               	goto	l1176
   497  000872  EF4D  F000         	goto	start
   498  000876                     __end_of_main:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           intcon	equ	0xFF2
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           status	equ	0xFD8
   505                           
   506 ;; *************** function _relayControl *****************
   507 ;; Defined at:
   508 ;;		line 105 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;  data            1    wreg     unsigned char 
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  data            1   16[COMRAM] unsigned char 
   513 ;;  count           2   17[COMRAM] int 
   514 ;; Return value:  Size  Location     Type
   515 ;;		None               void
   516 ;; Registers used:
   517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   523 ;;      Params:         0       0       0       0       0       0       0
   524 ;;      Locals:         3       0       0       0       0       0       0
   525 ;;      Temps:          1       0       0       0       0       0       0
   526 ;;      Totals:         4       0       0       0       0       0       0
   527 ;;Total ram usage:        4 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    3
   530 ;; This function calls:
   531 ;;		_EUSART1_Write
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text1
   538  000614                     __ptext1:
   539                           	opt stack 0
   540  000614                     _relayControl:
   541                           	opt stack 27
   542                           
   543                           ;incstack = 0
   544                           ;relayControl@data stored from wreg
   545  000614  6E36               	movwf	relayControl@data,c
   546                           
   547                           ;main.c: 106: switch (data){
   548  000616  D069               	goto	l1020
   549  000618                     l1000:
   550                           
   551                           ;main.c: 108: EUSART1_Write(TFNum);
   552  000618  5043               	movf	_TFNum,w,c
   553  00061A  EC60  F004         	call	_EUSART1_Write
   554                           
   555                           ;main.c: 109: break;
   556  00061E  0012               	return	
   557  000620                     l1002:
   558                           
   559                           ;main.c: 111: for (int count=0; count<16; count++){
   560  000620  0E00               	movlw	0
   561  000622  6E38               	movwf	relayControl@count+1,c
   562  000624  0E00               	movlw	0
   563  000626  6E37               	movwf	relayControl@count,c
   564  000628  BE38               	btfsc	relayControl@count+1,7,c
   565  00062A  D008               	goto	l1008
   566  00062C  5038               	movf	relayControl@count+1,w,c
   567  00062E  E105               	bnz	u110
   568  000630  0E10               	movlw	16
   569  000632  5C37               	subwf	relayControl@count,w,c
   570  000634  B0D8               	btfsc	status,0,c
   571  000636  0012               	return	
   572  000638  D001               	goto	l1008
   573  00063A                     u110:
   574  00063A  0012               	return	
   575  00063C                     l1008:
   576                           
   577                           ;main.c: 112: EUSART1_Write(site0_IL[count]);
   578  00063C  0E01               	movlw	low _site0_IL
   579  00063E  2437               	addwf	relayControl@count,w,c
   580  000640  6ED9               	movwf	fsr2l,c
   581  000642  0E00               	movlw	high _site0_IL
   582  000644  2038               	addwfc	relayControl@count+1,w,c
   583  000646  6EDA               	movwf	fsr2h,c
   584  000648  50DF               	movf	indf2,w,c
   585  00064A  EC60  F004         	call	_EUSART1_Write
   586                           
   587                           ;main.c: 113: _delay((unsigned long)((25)*(8000000/4000.0)));
   588  00064E  0E41               	movlw	65
   589  000650  6E35               	movwf	??_relayControl& (0+255),c
   590  000652  0EEE               	movlw	238
   591  000654                     u377:
   592  000654  2EE8               	decfsz	wreg,f,c
   593  000656  D7FE               	goto	u377
   594  000658  2E35               	decfsz	??_relayControl& (0+255),f,c
   595  00065A  D7FC               	goto	u377
   596  00065C  D000               	nop2	
   597  00065E  4A37               	infsnz	relayControl@count,f,c
   598  000660  2A38               	incf	relayControl@count+1,f,c
   599  000662  BE38               	btfsc	relayControl@count+1,7,c
   600  000664  D7EB               	goto	l1008
   601  000666  5038               	movf	relayControl@count+1,w,c
   602  000668  E101               	bnz	u120
   603  00066A  D7E2               	goto	L2
   604  00066C                     u120:
   605                           
   606                           ;main.c: 114: }
   607                           ;main.c: 115: break;
   608  00066C  0012               	return	
   609  00066E                     l217:
   610  00066E  908C               	bcf	3980,0,c	;volatile
   611                           
   612                           ;main.c: 118: break;
   613  000670  0012               	return	
   614  000672                     l220:
   615  000672  808C               	bsf	3980,0,c	;volatile
   616                           
   617                           ;main.c: 121: break;
   618  000674  0012               	return	
   619  000676                     l223:
   620  000676  9089               	bcf	3977,0,c	;volatile
   621  000678  D000               	goto	l225
   622  00067A                     l225:
   623  00067A  9289               	bcf	3977,1,c	;volatile
   624  00067C  D000               	goto	l227
   625  00067E                     l227:
   626  00067E  9489               	bcf	3977,2,c	;volatile
   627  000680  D000               	goto	l229
   628  000682                     l229:
   629  000682  9689               	bcf	3977,3,c	;volatile
   630  000684  D000               	goto	l231
   631  000686                     l231:
   632  000686  9889               	bcf	3977,4,c	;volatile
   633  000688  D000               	goto	l233
   634  00068A                     l233:
   635  00068A  9A89               	bcf	3977,5,c	;volatile
   636  00068C  D000               	goto	l235
   637  00068E                     l235:
   638  00068E  908D               	bcf	3981,0,c	;volatile
   639  000690  D000               	goto	l237
   640  000692                     l237:
   641  000692  928D               	bcf	3981,1,c	;volatile
   642  000694  D000               	goto	l239
   643  000696                     l239:
   644  000696  948D               	bcf	3981,2,c	;volatile
   645  000698  D000               	goto	l241
   646  00069A                     l241:
   647  00069A  9C89               	bcf	3977,6,c	;volatile
   648  00069C  D000               	goto	l243
   649  00069E                     l243:
   650  00069E  908B               	bcf	3979,0,c	;volatile
   651  0006A0  D000               	goto	l245
   652  0006A2                     l245:
   653  0006A2  928B               	bcf	3979,1,c	;volatile
   654  0006A4  D000               	goto	l247
   655  0006A6                     l247:
   656  0006A6  948B               	bcf	3979,2,c	;volatile
   657  0006A8  D000               	goto	l249
   658  0006AA                     l249:
   659  0006AA  908C               	bcf	3980,0,c	;volatile
   660  0006AC  D000               	goto	l251
   661  0006AE                     l251:
   662  0006AE  928C               	bcf	3980,1,c	;volatile
   663                           
   664                           ;main.c: 139: break;
   665  0006B0  0012               	return	
   666  0006B2                     l254:
   667  0006B2  9089               	bcf	3977,0,c	;volatile
   668                           
   669                           ;main.c: 142: break;
   670  0006B4  0012               	return	
   671  0006B6                     l257:
   672  0006B6  8089               	bsf	3977,0,c	;volatile
   673                           
   674                           ;main.c: 145: break;
   675  0006B8  0012               	return	
   676  0006BA                     l260:
   677  0006BA  9289               	bcf	3977,1,c	;volatile
   678                           
   679                           ;main.c: 148: break;
   680  0006BC  0012               	return	
   681  0006BE                     l263:
   682  0006BE  8289               	bsf	3977,1,c	;volatile
   683                           
   684                           ;main.c: 151: break;
   685  0006C0  0012               	return	
   686  0006C2                     l266:
   687  0006C2  9489               	bcf	3977,2,c	;volatile
   688                           
   689                           ;main.c: 154: break;
   690  0006C4  0012               	return	
   691  0006C6                     l269:
   692  0006C6  8489               	bsf	3977,2,c	;volatile
   693                           
   694                           ;main.c: 157: break;
   695  0006C8  0012               	return	
   696  0006CA                     l272:
   697  0006CA  9689               	bcf	3977,3,c	;volatile
   698                           
   699                           ;main.c: 160: break;
   700  0006CC  0012               	return	
   701  0006CE                     l275:
   702  0006CE  8689               	bsf	3977,3,c	;volatile
   703                           
   704                           ;main.c: 163: break;
   705  0006D0  0012               	return	
   706  0006D2                     l278:
   707  0006D2  9889               	bcf	3977,4,c	;volatile
   708                           
   709                           ;main.c: 166: break;
   710  0006D4  0012               	return	
   711  0006D6                     l281:
   712  0006D6  8889               	bsf	3977,4,c	;volatile
   713                           
   714                           ;main.c: 169: break;
   715  0006D8  0012               	return	
   716  0006DA                     l284:
   717  0006DA  9A89               	bcf	3977,5,c	;volatile
   718                           
   719                           ;main.c: 172: break;
   720  0006DC  0012               	return	
   721  0006DE                     l287:
   722  0006DE  8A89               	bsf	3977,5,c	;volatile
   723                           
   724                           ;main.c: 175: break;
   725  0006E0  0012               	return	
   726  0006E2                     l1016:
   727                           
   728                           ;main.c: 177: EUSART1_Write('U');
   729  0006E2  0E55               	movlw	85
   730  0006E4  EC60  F004         	call	_EUSART1_Write
   731                           
   732                           ;main.c: 179: }
   733                           
   734                           ;main.c: 178: break;
   735  0006E8  0012               	return	
   736  0006EA                     l1020:
   737  0006EA  5036               	movf	relayControl@data,w,c
   738                           
   739                           ; Switch size 1, requested type "space"
   740                           ; Number of cases is 17, Range of values is 2 to 98
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte           52    27 (average)
   744                           ;	Chosen strategy is simple_byte
   745  0006EC  0A02               	xorlw	2	; case 2
   746  0006EE  B4D8               	btfsc	status,2,c
   747  0006F0  D7E0               	goto	l254
   748  0006F2  0A06               	xorlw	6	; case 4
   749  0006F4  B4D8               	btfsc	status,2,c
   750  0006F6  D7E1               	goto	l260
   751  0006F8  0A02               	xorlw	2	; case 6
   752  0006FA  B4D8               	btfsc	status,2,c
   753  0006FC  D7E2               	goto	l266
   754  0006FE  0A0E               	xorlw	14	; case 8
   755  000700  B4D8               	btfsc	status,2,c
   756  000702  D7E3               	goto	l272
   757  000704  0A02               	xorlw	2	; case 10
   758  000706  B4D8               	btfsc	status,2,c
   759  000708  D7E4               	goto	l278
   760  00070A  0A06               	xorlw	6	; case 12
   761  00070C  B4D8               	btfsc	status,2,c
   762  00070E  D7E5               	goto	l284
   763  000710  0A2E               	xorlw	46	; case 34
   764  000712  B4D8               	btfsc	status,2,c
   765  000714  D7D0               	goto	l257
   766  000716  0A06               	xorlw	6	; case 36
   767  000718  B4D8               	btfsc	status,2,c
   768  00071A  D7D1               	goto	l263
   769  00071C  0A02               	xorlw	2	; case 38
   770  00071E  B4D8               	btfsc	status,2,c
   771  000720  D7D2               	goto	l269
   772  000722  0A0E               	xorlw	14	; case 40
   773  000724  B4D8               	btfsc	status,2,c
   774  000726  D7D3               	goto	l275
   775  000728  0A02               	xorlw	2	; case 42
   776  00072A  B4D8               	btfsc	status,2,c
   777  00072C  D7D4               	goto	l281
   778  00072E  0A06               	xorlw	6	; case 44
   779  000730  B4D8               	btfsc	status,2,c
   780  000732  D7D5               	goto	l287
   781  000734  0A65               	xorlw	101	; case 73
   782  000736  B4D8               	btfsc	status,2,c
   783  000738  D773               	goto	l1002
   784  00073A  0A1D               	xorlw	29	; case 84
   785  00073C  B4D8               	btfsc	status,2,c
   786  00073E  D76C               	goto	l1000
   787  000740  0A0C               	xorlw	12	; case 88
   788  000742  B4D8               	btfsc	status,2,c
   789  000744  D798               	goto	l223
   790  000746  0A39               	xorlw	57	; case 97
   791  000748  B4D8               	btfsc	status,2,c
   792  00074A  D791               	goto	l217
   793  00074C  0A03               	xorlw	3	; case 98
   794  00074E  B4D8               	btfsc	status,2,c
   795  000750  D790               	goto	l220
   796  000752  D7C7               	goto	l1016
   797  000754  0012               	return		;funcret
   798  000756                     __end_of_relayControl:
   799                           	opt stack 0
   800                           tblptru	equ	0xFF8
   801                           intcon	equ	0xFF2
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           indf2	equ	0xFDF
   805                           fsr2h	equ	0xFDA
   806                           fsr2l	equ	0xFD9
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function _printf *****************
   810 ;; Defined at:
   811 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  f               2   16[COMRAM] PTR const unsigned char 
   814 ;;		 -> STR_2(3), STR_1(18), 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  tmpval          4    0        struct .
   817 ;;  cp              3    0        PTR const unsigned char 
   818 ;;  ap              2   18[COMRAM] PTR void [1]
   819 ;;		 -> ?_printf(2), 
   820 ;;  len             2    0        unsigned int 
   821 ;;  val             2    0        unsigned int 
   822 ;;  c               1   20[COMRAM] char 
   823 ;;  flag            1    0        unsigned char 
   824 ;;  prec            1    0        char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  2   16[COMRAM] int 
   827 ;; Registers used:
   828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   834 ;;      Params:         2       0       0       0       0       0       0
   835 ;;      Locals:         3       0       0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0
   837 ;;      Totals:         5       0       0       0       0       0       0
   838 ;;Total ram usage:        5 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    4
   841 ;; This function calls:
   842 ;;		_putch
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text2
   849  0009D0                     __ptext2:
   850                           	opt stack 0
   851  0009D0                     _printf:
   852                           	opt stack 26
   853                           
   854                           ;doprnt.c: 466: va_list ap;
   855                           ;doprnt.c: 499: signed char c;
   856                           ;doprnt.c: 506: signed char prec;
   857                           ;doprnt.c: 508: unsigned char flag;
   858                           ;doprnt.c: 523: union {
   859                           ;doprnt.c: 524: unsigned long vd;
   860                           ;doprnt.c: 525: double integ;
   861                           ;doprnt.c: 526: } tmpval;
   862                           ;doprnt.c: 528: unsigned int val;
   863                           ;doprnt.c: 529: unsigned len;
   864                           ;doprnt.c: 530: const char * cp;
   865                           ;doprnt.c: 533: *ap = __va_start();
   866                           
   867                           ;incstack = 0
   868  0009D0  0E38               	movlw	low (?_printf+2)
   869  0009D2  6E38               	movwf	printf@ap,c
   870  0009D4  0E00               	movlw	high (?_printf+2)
   871  0009D6  6E39               	movwf	printf@ap+1,c
   872                           
   873                           ;doprnt.c: 536: while(c = *f++) {
   874  0009D8  D004               	goto	l1134
   875  0009DA                     l1132:
   876                           
   877                           ;doprnt.c: 540: {
   878                           ;doprnt.c: 541: (putch(c) );
   879  0009DA  503A               	movf	printf@c,w,c
   880  0009DC  EC19  F005         	call	_putch
   881                           
   882                           ;doprnt.c: 542: continue;
   883  0009E0  D000               	goto	l1134
   884  0009E2                     l1134:
   885  0009E2  C036  FFF6         	movff	printf@f,tblptrl
   886  0009E6  C037  FFF7         	movff	printf@f+1,tblptrh
   887  0009EA  4A36               	infsnz	printf@f,f,c
   888  0009EC  2A37               	incf	printf@f+1,f,c
   889  0009EE                     	if	0	;tblptru may be non-zero
   890  0009EE                     	endif
   891  0009EE                     	if	0	;tblptru may be non-zero
   892  0009EE                     	endif
   893  0009EE  0008               	tblrd		*
   894  0009F0  CFF5 F03A          	movff	tablat,printf@c
   895  0009F4  503A               	movf	printf@c,w,c
   896  0009F6  A4D8               	btfss	status,2,c
   897  0009F8  D7F0               	goto	l1132
   898                           
   899                           ;doprnt.c: 1469: }
   900                           ;doprnt.c: 1533: }
   901                           ;doprnt.c: 1540: return 0;
   902                           ;	Return value of _printf is never used
   903  0009FA  0012               	return		;funcret
   904  0009FC                     __end_of_printf:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           intcon	equ	0xFF2
   911                           postinc0	equ	0xFEE
   912                           wreg	equ	0xFE8
   913                           indf2	equ	0xFDF
   914                           fsr2h	equ	0xFDA
   915                           fsr2l	equ	0xFD9
   916                           status	equ	0xFD8
   917                           
   918 ;; *************** function _putch *****************
   919 ;; Defined at:
   920 ;;		line 160 in file "mcc_generated_files/eusart1.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  txData          1    wreg     unsigned char 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  txData          1   15[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;		None               void
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   934 ;;      Params:         0       0       0       0       0       0       0
   935 ;;      Locals:         1       0       0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0
   937 ;;      Totals:         1       0       0       0       0       0       0
   938 ;;Total ram usage:        1 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    3
   941 ;; This function calls:
   942 ;;		_EUSART1_Write
   943 ;; This function is called by:
   944 ;;		_printf
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text3
   949  000A32                     __ptext3:
   950                           	opt stack 0
   951  000A32                     _putch:
   952                           	opt stack 26
   953                           
   954                           ;incstack = 0
   955                           ;putch@txData stored from wreg
   956  000A32  6E35               	movwf	putch@txData,c
   957                           
   958                           ;eusart1.c: 162: EUSART1_Write(txData);
   959  000A34  5035               	movf	putch@txData,w,c
   960  000A36  EC60  F004         	call	_EUSART1_Write
   961  000A3A  0012               	return		;funcret
   962  000A3C                     __end_of_putch:
   963                           	opt stack 0
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           intcon	equ	0xFF2
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           indf2	equ	0xFDF
   972                           fsr2h	equ	0xFDA
   973                           fsr2l	equ	0xFD9
   974                           status	equ	0xFD8
   975                           
   976 ;; *************** function _EUSART1_Write *****************
   977 ;; Defined at:
   978 ;;		line 132 in file "mcc_generated_files/eusart1.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  txData          1    wreg     unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  txData          1   14[COMRAM] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;		None               void
   985 ;; Registers used:
   986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   992 ;;      Params:         0       0       0       0       0       0       0
   993 ;;      Locals:         1       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0
   995 ;;      Totals:         1       0       0       0       0       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    2
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_putch
  1003 ;;		_main
  1004 ;;		_relayControl
  1005 ;;		_sendString
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text4
  1010  0008C0                     __ptext4:
  1011                           	opt stack 0
  1012  0008C0                     _EUSART1_Write:
  1013                           	opt stack 27
  1014                           
  1015                           ;incstack = 0
  1016                           ;EUSART1_Write@txData stored from wreg
  1017  0008C0  6E34               	movwf	EUSART1_Write@txData,c
  1018                           
  1019                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
  1020  0008C2  D000               	goto	l900
  1021  0008C4                     l900:
  1022  0008C4  5044               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1023  0008C6  B4D8               	btfsc	status,2,c
  1024  0008C8  D7FD               	goto	l900
  1025                           
  1026                           ;eusart1.c: 136: }
  1027                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
  1028  0008CA  B89D               	btfsc	3997,4,c	;volatile
  1029  0008CC  D003               	goto	l70
  1030                           
  1031                           ;eusart1.c: 139: {
  1032                           ;eusart1.c: 140: TXREG1 = txData;
  1033  0008CE  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1034                           
  1035                           ;eusart1.c: 141: }
  1036  0008D2  D014               	goto	l914
  1037  0008D4                     l70:
  1038                           
  1039                           ;eusart1.c: 142: else
  1040                           ;eusart1.c: 143: {
  1041                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
  1042  0008D4  989D               	bcf	3997,4,c	;volatile
  1043                           
  1044                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
  1045  0008D6  5024               	movf	_eusart1TxHead,w,c
  1046  0008D8  0D01               	mullw	1
  1047  0008DA  0E19               	movlw	low _eusart1TxBuffer
  1048  0008DC  24F3               	addwf	prodl,w,c
  1049  0008DE  6ED9               	movwf	fsr2l,c
  1050  0008E0  0E00               	movlw	high _eusart1TxBuffer
  1051  0008E2  20F4               	addwfc	prodh,w,c
  1052  0008E4  6EDA               	movwf	fsr2h,c
  1053  0008E6  C034  FFDF         	movff	EUSART1_Write@txData,indf2
  1054  0008EA  2A24               	incf	_eusart1TxHead,f,c
  1055                           
  1056                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1057  0008EC  0E07               	movlw	7
  1058  0008EE  6424               	cpfsgt	_eusart1TxHead,c
  1059  0008F0  D003               	goto	l912
  1060                           
  1061                           ;eusart1.c: 147: {
  1062                           ;eusart1.c: 148: eusart1TxHead = 0;
  1063  0008F2  0E00               	movlw	0
  1064  0008F4  6E24               	movwf	_eusart1TxHead,c
  1065  0008F6  D000               	goto	l912
  1066  0008F8                     l912:
  1067                           
  1068                           ;eusart1.c: 149: }
  1069                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  1070  0008F8  0644               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1071  0008FA  D000               	goto	l914
  1072  0008FC                     l914:
  1073                           
  1074                           ;eusart1.c: 151: }
  1075                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
  1076  0008FC  889D               	bsf	3997,4,c	;volatile
  1077  0008FE  0012               	return		;funcret
  1078  000900                     __end_of_EUSART1_Write:
  1079                           	opt stack 0
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           prodh	equ	0xFF4
  1085                           prodl	equ	0xFF3
  1086                           intcon	equ	0xFF2
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           indf2	equ	0xFDF
  1090                           fsr2h	equ	0xFDA
  1091                           fsr2l	equ	0xFD9
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function _SYSTEM_Initialize *****************
  1095 ;; Defined at:
  1096 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;		None               void
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1110 ;;      Params:         0       0       0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    3
  1117 ;; This function calls:
  1118 ;;		_EUSART1_Initialize
  1119 ;;		_INTERRUPT_Initialize
  1120 ;;		_OSCILLATOR_Initialize
  1121 ;;		_PIN_MANAGER_Initialize
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text5
  1128  000A12                     __ptext5:
  1129                           	opt stack 0
  1130  000A12                     _SYSTEM_Initialize:
  1131                           	opt stack 27
  1132                           
  1133                           ;mcc.c: 114: INTERRUPT_Initialize();
  1134                           
  1135                           ;incstack = 0
  1136  000A12  EC1E  F005         	call	_INTERRUPT_Initialize	;wreg free
  1137                           
  1138                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1139  000A16  EC3B  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1140                           
  1141                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1142  000A1A  EC12  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1143                           
  1144                           ;mcc.c: 117: EUSART1_Initialize();
  1145  000A1E  EC9D  F004         	call	_EUSART1_Initialize	;wreg free
  1146  000A22  0012               	return		;funcret
  1147  000A24                     __end_of_SYSTEM_Initialize:
  1148                           	opt stack 0
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           prodh	equ	0xFF4
  1154                           prodl	equ	0xFF3
  1155                           intcon	equ	0xFF2
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           indf2	equ	0xFDF
  1159                           fsr2h	equ	0xFDA
  1160                           fsr2l	equ	0xFD9
  1161                           status	equ	0xFD8
  1162                           
  1163 ;; *************** function _PIN_MANAGER_Initialize *****************
  1164 ;; Defined at:
  1165 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;		None               void
  1172 ;; Registers used:
  1173 ;;		wreg, status,2
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1179 ;;      Params:         0       0       0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    2
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_SYSTEM_Initialize
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text6
  1194  000876                     __ptext6:
  1195                           	opt stack 0
  1196  000876                     _PIN_MANAGER_Initialize:
  1197                           	opt stack 27
  1198                           
  1199                           ;pin_manager.c: 56: LATE = 0x00;
  1200                           
  1201                           ;incstack = 0
  1202  000876  0E00               	movlw	0
  1203  000878  6E8D               	movwf	3981,c	;volatile
  1204                           
  1205                           ;pin_manager.c: 57: LATD = 0x00;
  1206  00087A  0E00               	movlw	0
  1207  00087C  6E8C               	movwf	3980,c	;volatile
  1208                           
  1209                           ;pin_manager.c: 58: LATA = 0x00;
  1210  00087E  0E00               	movlw	0
  1211  000880  6E89               	movwf	3977,c	;volatile
  1212                           
  1213                           ;pin_manager.c: 59: LATB = 0x00;
  1214  000882  0E00               	movlw	0
  1215  000884  6E8A               	movwf	3978,c	;volatile
  1216                           
  1217                           ;pin_manager.c: 60: LATC = 0x00;
  1218  000886  0E00               	movlw	0
  1219  000888  6E8B               	movwf	3979,c	;volatile
  1220                           
  1221                           ;pin_manager.c: 65: TRISE = 0x00;
  1222  00088A  0E00               	movlw	0
  1223  00088C  6E96               	movwf	3990,c	;volatile
  1224                           
  1225                           ;pin_manager.c: 66: TRISA = 0x80;
  1226  00088E  0E80               	movlw	128
  1227  000890  6E92               	movwf	3986,c	;volatile
  1228                           
  1229                           ;pin_manager.c: 67: TRISB = 0xFF;
  1230  000892  6893               	setf	3987,c	;volatile
  1231                           
  1232                           ;pin_manager.c: 68: TRISC = 0xB8;
  1233  000894  0EB8               	movlw	184
  1234  000896  6E94               	movwf	3988,c	;volatile
  1235                           
  1236                           ;pin_manager.c: 69: TRISD = 0xFC;
  1237  000898  0EFC               	movlw	252
  1238  00089A  6E95               	movwf	3989,c	;volatile
  1239                           
  1240                           ;pin_manager.c: 74: ANSELC = 0x38;
  1241  00089C  0E38               	movlw	56
  1242  00089E  010F               	movlb	15	; () banked
  1243  0008A0  6F3A               	movwf	58,b	;volatile
  1244                           
  1245                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1246  0008A2  0E3F               	movlw	63
  1247  0008A4  010F               	movlb	15	; () banked
  1248  0008A6  6F39               	movwf	57,b	;volatile
  1249                           
  1250                           ;pin_manager.c: 76: ANSELD = 0x00;
  1251  0008A8  0E00               	movlw	0
  1252  0008AA  010F               	movlb	15	; () banked
  1253  0008AC  6F3B               	movwf	59,b	;volatile
  1254                           
  1255                           ;pin_manager.c: 77: ANSELE = 0x00;
  1256  0008AE  0E00               	movlw	0
  1257  0008B0  010F               	movlb	15	; () banked
  1258  0008B2  6F3C               	movwf	60,b	;volatile
  1259                           
  1260                           ;pin_manager.c: 78: ANSELA = 0x00;
  1261  0008B4  0E00               	movlw	0
  1262  0008B6  010F               	movlb	15	; () banked
  1263  0008B8  6F38               	movwf	56,b	;volatile
  1264                           
  1265                           ; BSR set to: 15
  1266                           ;pin_manager.c: 83: WPUB = 0xFF;
  1267  0008BA  6861               	setf	3937,c	;volatile
  1268                           
  1269                           ; BSR set to: 15
  1270                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1271  0008BC  9EF1               	bcf	intcon2,7,c	;volatile
  1272                           
  1273                           ; BSR set to: 15
  1274  0008BE  0012               	return		;funcret
  1275  0008C0                     __end_of_PIN_MANAGER_Initialize:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           intcon	equ	0xFF2
  1284                           intcon2	equ	0xFF1
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           indf2	equ	0xFDF
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _OSCILLATOR_Initialize *****************
  1293 ;; Defined at:
  1294 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;		None               void
  1301 ;; Registers used:
  1302 ;;		wreg, status,2
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1308 ;;      Params:         0       0       0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    2
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_SYSTEM_Initialize
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text7
  1323  000A24                     __ptext7:
  1324                           	opt stack 0
  1325  000A24                     _OSCILLATOR_Initialize:
  1326                           	opt stack 27
  1327                           
  1328                           ;mcc.c: 123: OSCCON = 0x60;
  1329                           
  1330                           ; BSR set to: 15
  1331                           ;incstack = 0
  1332  000A24  0E60               	movlw	96
  1333  000A26  6ED3               	movwf	4051,c	;volatile
  1334                           
  1335                           ;mcc.c: 125: OSCCON2 = 0x04;
  1336  000A28  0E04               	movlw	4
  1337  000A2A  6ED2               	movwf	4050,c	;volatile
  1338                           
  1339                           ;mcc.c: 127: OSCTUNE = 0x00;
  1340  000A2C  0E00               	movlw	0
  1341  000A2E  6E9B               	movwf	3995,c	;volatile
  1342  000A30  0012               	return		;funcret
  1343  000A32                     __end_of_OSCILLATOR_Initialize:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           tblptrh	equ	0xFF7
  1347                           tblptrl	equ	0xFF6
  1348                           tablat	equ	0xFF5
  1349                           prodh	equ	0xFF4
  1350                           prodl	equ	0xFF3
  1351                           intcon	equ	0xFF2
  1352                           intcon2	equ	0xFF1
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           indf2	equ	0xFDF
  1356                           fsr2h	equ	0xFDA
  1357                           fsr2l	equ	0xFD9
  1358                           status	equ	0xFD8
  1359                           
  1360 ;; *************** function _INTERRUPT_Initialize *****************
  1361 ;; Defined at:
  1362 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;		None               void
  1369 ;; Registers used:
  1370 ;;		None
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1376 ;;      Params:         0       0       0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0
  1379 ;;      Totals:         0       0       0       0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    2
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_SYSTEM_Initialize
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text8
  1391  000A3C                     __ptext8:
  1392                           	opt stack 0
  1393  000A3C                     _INTERRUPT_Initialize:
  1394                           	opt stack 27
  1395                           
  1396                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1397                           
  1398                           ;incstack = 0
  1399  000A3C  9ED0               	bcf	4048,7,c	;volatile
  1400  000A3E  0012               	return		;funcret
  1401  000A40                     __end_of_INTERRUPT_Initialize:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           prodh	equ	0xFF4
  1408                           prodl	equ	0xFF3
  1409                           intcon	equ	0xFF2
  1410                           intcon2	equ	0xFF1
  1411                           postinc0	equ	0xFEE
  1412                           wreg	equ	0xFE8
  1413                           indf2	equ	0xFDF
  1414                           fsr2h	equ	0xFDA
  1415                           fsr2l	equ	0xFD9
  1416                           status	equ	0xFD8
  1417                           
  1418 ;; *************** function _EUSART1_Initialize *****************
  1419 ;; Defined at:
  1420 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;		None               void
  1427 ;; Registers used:
  1428 ;;		wreg, status,2
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1434 ;;      Params:         0       0       0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    2
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_SYSTEM_Initialize
  1445 ;;		_sendString
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text9
  1450  00093A                     __ptext9:
  1451                           	opt stack 0
  1452  00093A                     _EUSART1_Initialize:
  1453                           	opt stack 27
  1454                           
  1455                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1456                           
  1457                           ;incstack = 0
  1458  00093A  9A9D               	bcf	3997,5,c	;volatile
  1459                           
  1460                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1461  00093C  989D               	bcf	3997,4,c	;volatile
  1462                           
  1463                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1464  00093E  0E08               	movlw	8
  1465  000940  6EB8               	movwf	4024,c	;volatile
  1466                           
  1467                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1468  000942  0E90               	movlw	144
  1469  000944  6EAB               	movwf	4011,c	;volatile
  1470                           
  1471                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1472  000946  0E24               	movlw	36
  1473  000948  6EAC               	movwf	4012,c	;volatile
  1474                           
  1475                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1476  00094A  0ECF               	movlw	207
  1477  00094C  6EAF               	movwf	4015,c	;volatile
  1478                           
  1479                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1480  00094E  0E00               	movlw	0
  1481  000950  6EB0               	movwf	4016,c	;volatile
  1482                           
  1483                           ;eusart1.c: 100: eusart1TxHead = 0;
  1484  000952  0E00               	movlw	0
  1485  000954  6E24               	movwf	_eusart1TxHead,c
  1486                           
  1487                           ;eusart1.c: 101: eusart1TxTail = 0;
  1488  000956  0E00               	movlw	0
  1489  000958  6E25               	movwf	_eusart1TxTail,c
  1490                           
  1491                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1492  00095A  0E08               	movlw	8
  1493  00095C  6E44               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1494                           
  1495                           ;eusart1.c: 104: eusart1RxHead = 0;
  1496  00095E  0E00               	movlw	0
  1497  000960  6E22               	movwf	_eusart1RxHead,c
  1498                           
  1499                           ;eusart1.c: 105: eusart1RxTail = 0;
  1500  000962  0E00               	movlw	0
  1501  000964  6E23               	movwf	_eusart1RxTail,c
  1502                           
  1503                           ;eusart1.c: 106: eusart1RxCount = 0;
  1504  000966  0E00               	movlw	0
  1505  000968  6E21               	movwf	_eusart1RxCount,c	;volatile
  1506                           
  1507                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1508  00096A  8A9D               	bsf	3997,5,c	;volatile
  1509  00096C  0012               	return		;funcret
  1510  00096E                     __end_of_EUSART1_Initialize:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           intcon	equ	0xFF2
  1519                           intcon2	equ	0xFF1
  1520                           postinc0	equ	0xFEE
  1521                           wreg	equ	0xFE8
  1522                           indf2	equ	0xFDF
  1523                           fsr2h	equ	0xFDA
  1524                           fsr2l	equ	0xFD9
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function _EUSART1_Read *****************
  1528 ;; Defined at:
  1529 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  readValue       1   14[COMRAM] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      unsigned char 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         0       0       0       0       0       0       0
  1544 ;;      Locals:         1       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0
  1546 ;;      Totals:         1       0       0       0       0       0       0
  1547 ;;Total ram usage:        1 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    2
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;;		_getch
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text10
  1559  000900                     __ptext10:
  1560                           	opt stack 0
  1561  000900                     _EUSART1_Read:
  1562                           	opt stack 28
  1563                           
  1564                           ;eusart1.c: 114: uint8_t readValue = 0;
  1565                           
  1566                           ;incstack = 0
  1567  000900  0E00               	movlw	0
  1568  000902  6E34               	movwf	EUSART1_Read@readValue,c
  1569                           
  1570                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1571  000904  D000               	goto	l946
  1572  000906                     l946:
  1573  000906  5021               	movf	_eusart1RxCount,w,c	;volatile
  1574  000908  B4D8               	btfsc	status,2,c
  1575  00090A  D7FD               	goto	l946
  1576                           
  1577                           ;eusart1.c: 118: }
  1578                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1579  00090C  5023               	movf	_eusart1RxTail,w,c
  1580  00090E  0D01               	mullw	1
  1581  000910  0E11               	movlw	low _eusart1RxBuffer
  1582  000912  24F3               	addwf	prodl,w,c
  1583  000914  6ED9               	movwf	fsr2l,c
  1584  000916  0E00               	movlw	high _eusart1RxBuffer
  1585  000918  20F4               	addwfc	prodh,w,c
  1586  00091A  6EDA               	movwf	fsr2h,c
  1587  00091C  50DF               	movf	indf2,w,c
  1588  00091E  6E34               	movwf	EUSART1_Read@readValue,c
  1589  000920  2A23               	incf	_eusart1RxTail,f,c
  1590                           
  1591                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1592  000922  0E07               	movlw	7
  1593  000924  6423               	cpfsgt	_eusart1RxTail,c
  1594  000926  D003               	goto	l956
  1595                           
  1596                           ;eusart1.c: 122: {
  1597                           ;eusart1.c: 123: eusart1RxTail = 0;
  1598  000928  0E00               	movlw	0
  1599  00092A  6E23               	movwf	_eusart1RxTail,c
  1600  00092C  D000               	goto	l956
  1601  00092E                     l956:
  1602                           
  1603                           ;eusart1.c: 124: }
  1604                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1605  00092E  9A9D               	bcf	3997,5,c	;volatile
  1606                           
  1607                           ;eusart1.c: 126: eusart1RxCount--;
  1608  000930  0621               	decf	_eusart1RxCount,f,c	;volatile
  1609                           
  1610                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1611  000932  8A9D               	bsf	3997,5,c	;volatile
  1612                           
  1613                           ;eusart1.c: 129: return readValue;
  1614  000934  5034               	movf	EUSART1_Read@readValue,w,c
  1615  000936  0012               	return	
  1616  000938  0012               	return		;funcret
  1617  00093A                     __end_of_EUSART1_Read:
  1618                           	opt stack 0
  1619                           tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           prodh	equ	0xFF4
  1624                           prodl	equ	0xFF3
  1625                           intcon	equ	0xFF2
  1626                           intcon2	equ	0xFF1
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           indf2	equ	0xFDF
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _INTERRUPT_InterruptManager *****************
  1635 ;; Defined at:
  1636 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1650 ;;      Params:         0       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0
  1652 ;;      Temps:         14       0       0       0       0       0       0
  1653 ;;      Totals:        14       0       0       0       0       0       0
  1654 ;;Total ram usage:       14 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    1
  1657 ;; This function calls:
  1658 ;;		_EUSART1_Receive_ISR
  1659 ;;		_EUSART1_Transmit_ISR
  1660 ;; This function is called by:
  1661 ;;		Interrupt level 2
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	intcode
  1666  000008                     __pintcode:
  1667                           	opt stack 0
  1668  000008                     _INTERRUPT_InterruptManager:
  1669                           	opt stack 26
  1670                           
  1671                           ;incstack = 0
  1672  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1673  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1674  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1675  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1676  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1677  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1678  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1679  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1680  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1681  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1682  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1683  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1684  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1685  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1686                           
  1687                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1688  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1689  000042  A89D               	btfss	3997,4,c	;volatile
  1690  000044  D005               	goto	i2l148
  1691  000046  A89E               	btfss	3998,4,c	;volatile
  1692  000048  D003               	goto	i2l148
  1693                           
  1694                           ;interrupt_manager.c: 61: {
  1695                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1696  00004A  ECB7  F004         	call	_EUSART1_Transmit_ISR	;wreg free
  1697                           
  1698                           ;interrupt_manager.c: 63: }
  1699  00004E  D008               	goto	i2l152
  1700  000050                     i2l148:
  1701                           
  1702                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1703  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1704  000052  AA9D               	btfss	3997,5,c	;volatile
  1705  000054  D005               	goto	i2l152
  1706  000056  AA9E               	btfss	3998,5,c	;volatile
  1707  000058  D003               	goto	i2l152
  1708                           
  1709                           ;interrupt_manager.c: 65: {
  1710                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1711  00005A  ECD0  F004         	call	_EUSART1_Receive_ISR	;wreg free
  1712                           
  1713                           ;interrupt_manager.c: 68: else
  1714                           ;interrupt_manager.c: 69: {
  1715                           
  1716                           ;interrupt_manager.c: 67: }
  1717  00005E  D000               	goto	i2l152
  1718  000060                     i2l152:
  1719  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1720  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1721  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1722  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1723  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1724  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1725  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1726  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1727  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1728  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1729  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1730  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1731  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1732  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1733  000098  0011               	retfie		f
  1734  00009A                     __end_of_INTERRUPT_InterruptManager:
  1735                           	opt stack 0
  1736                           pclatu	equ	0xFFB
  1737                           pclath	equ	0xFFA
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           intcon	equ	0xFF2
  1745                           intcon2	equ	0xFF1
  1746                           postinc0	equ	0xFEE
  1747                           fsr0h	equ	0xFEA
  1748                           fsr0l	equ	0xFE9
  1749                           wreg	equ	0xFE8
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           indf2	equ	0xFDF
  1753                           fsr2h	equ	0xFDA
  1754                           fsr2l	equ	0xFD9
  1755                           status	equ	0xFD8
  1756                           
  1757 ;; *************** function _EUSART1_Transmit_ISR *****************
  1758 ;; Defined at:
  1759 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;		None               void
  1766 ;; Registers used:
  1767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1773 ;;      Params:         0       0       0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_INTERRUPT_InterruptManager
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text12
  1787  00096E                     __ptext12:
  1788                           	opt stack 0
  1789  00096E                     _EUSART1_Transmit_ISR:
  1790                           	opt stack 26
  1791                           
  1792                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1793                           
  1794                           ;incstack = 0
  1795  00096E  0E08               	movlw	8
  1796  000970  6044               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1797  000972  D013               	goto	i2l82
  1798                           
  1799                           ;eusart1.c: 170: {
  1800                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1801  000974  5025               	movf	_eusart1TxTail,w,c
  1802  000976  0D01               	mullw	1
  1803  000978  0E19               	movlw	low _eusart1TxBuffer
  1804  00097A  24F3               	addwf	prodl,w,c
  1805  00097C  6ED9               	movwf	fsr2l,c
  1806  00097E  0E00               	movlw	high _eusart1TxBuffer
  1807  000980  20F4               	addwfc	prodh,w,c
  1808  000982  6EDA               	movwf	fsr2h,c
  1809  000984  50DF               	movf	indf2,w,c
  1810  000986  6EAD               	movwf	4013,c	;volatile
  1811  000988  2A25               	incf	_eusart1TxTail,f,c
  1812                           
  1813                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1814  00098A  0E07               	movlw	7
  1815  00098C  6425               	cpfsgt	_eusart1TxTail,c
  1816  00098E  D003               	goto	i2l976
  1817                           
  1818                           ;eusart1.c: 173: {
  1819                           ;eusart1.c: 174: eusart1TxTail = 0;
  1820  000990  0E00               	movlw	0
  1821  000992  6E25               	movwf	_eusart1TxTail,c
  1822  000994  D000               	goto	i2l976
  1823  000996                     i2l976:
  1824                           
  1825                           ;eusart1.c: 175: }
  1826                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1827  000996  2A44               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1828                           
  1829                           ;eusart1.c: 177: }
  1830  000998  0012               	return	
  1831  00099A                     i2l82:
  1832                           
  1833                           ;eusart1.c: 178: else
  1834                           ;eusart1.c: 179: {
  1835                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1836  00099A  989D               	bcf	3997,4,c	;volatile
  1837  00099C  0012               	return	
  1838  00099E  0012               	return		;funcret
  1839  0009A0                     __end_of_EUSART1_Transmit_ISR:
  1840                           	opt stack 0
  1841                           pclatu	equ	0xFFB
  1842                           pclath	equ	0xFFA
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           prodh	equ	0xFF4
  1848                           prodl	equ	0xFF3
  1849                           intcon	equ	0xFF2
  1850                           intcon2	equ	0xFF1
  1851                           postinc0	equ	0xFEE
  1852                           fsr0h	equ	0xFEA
  1853                           fsr0l	equ	0xFE9
  1854                           wreg	equ	0xFE8
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           indf2	equ	0xFDF
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _EUSART1_Receive_ISR *****************
  1863 ;; Defined at:
  1864 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;		None               void
  1871 ;; Registers used:
  1872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1878 ;;      Params:         0       0       0       0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0
  1881 ;;      Totals:         0       0       0       0       0       0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_INTERRUPT_InterruptManager
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text13
  1892  0009A0                     __ptext13:
  1893                           	opt stack 0
  1894  0009A0                     _EUSART1_Receive_ISR:
  1895                           	opt stack 26
  1896                           
  1897                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1898                           
  1899                           ;incstack = 0
  1900  0009A0  A2AB               	btfss	4011,1,c	;volatile
  1901  0009A2  D003               	goto	i2l982
  1902                           
  1903                           ;eusart1.c: 188: {
  1904                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1905  0009A4  98AB               	bcf	4011,4,c	;volatile
  1906                           
  1907                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1908  0009A6  88AB               	bsf	4011,4,c	;volatile
  1909  0009A8  D000               	goto	i2l982
  1910  0009AA                     i2l982:
  1911                           
  1912                           ;eusart1.c: 193: }
  1913                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1914  0009AA  5022               	movf	_eusart1RxHead,w,c
  1915  0009AC  0D01               	mullw	1
  1916  0009AE  0E11               	movlw	low _eusart1RxBuffer
  1917  0009B0  24F3               	addwf	prodl,w,c
  1918  0009B2  6ED9               	movwf	fsr2l,c
  1919  0009B4  0E00               	movlw	high _eusart1RxBuffer
  1920  0009B6  20F4               	addwfc	prodh,w,c
  1921  0009B8  6EDA               	movwf	fsr2h,c
  1922  0009BA  CFAE FFDF          	movff	4014,indf2	;volatile
  1923  0009BE  2A22               	incf	_eusart1RxHead,f,c
  1924                           
  1925                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1926  0009C0  0E07               	movlw	7
  1927  0009C2  6422               	cpfsgt	_eusart1RxHead,c
  1928  0009C4  D003               	goto	i2l990
  1929                           
  1930                           ;eusart1.c: 198: {
  1931                           ;eusart1.c: 199: eusart1RxHead = 0;
  1932  0009C6  0E00               	movlw	0
  1933  0009C8  6E22               	movwf	_eusart1RxHead,c
  1934  0009CA  D000               	goto	i2l990
  1935  0009CC                     i2l990:
  1936                           
  1937                           ;eusart1.c: 200: }
  1938                           ;eusart1.c: 201: eusart1RxCount++;
  1939  0009CC  2A21               	incf	_eusart1RxCount,f,c	;volatile
  1940  0009CE  0012               	return		;funcret
  1941  0009D0                     __end_of_EUSART1_Receive_ISR:
  1942                           	opt stack 0
  1943                           pclatu	equ	0xFFB
  1944                           pclath	equ	0xFFA
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           intcon	equ	0xFF2
  1952                           intcon2	equ	0xFF1
  1953                           postinc0	equ	0xFEE
  1954                           fsr0h	equ	0xFEA
  1955                           fsr0l	equ	0xFE9
  1956                           wreg	equ	0xFE8
  1957                           fsr1h	equ	0xFE2
  1958                           fsr1l	equ	0xFE1
  1959                           indf2	equ	0xFDF
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           pclatu	equ	0xFFB
  1964                           pclath	equ	0xFFA
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodh	equ	0xFF4
  1970                           prodl	equ	0xFF3
  1971                           intcon	equ	0xFF2
  1972                           intcon2	equ	0xFF1
  1973                           postinc0	equ	0xFEE
  1974                           fsr0h	equ	0xFEA
  1975                           fsr0l	equ	0xFE9
  1976                           wreg	equ	0xFE8
  1977                           fsr1h	equ	0xFE2
  1978                           fsr1l	equ	0xFE1
  1979                           indf2	equ	0xFDF
  1980                           fsr2h	equ	0xFDA
  1981                           fsr2l	equ	0xFD9
  1982                           status	equ	0xFD8
  1983                           
  1984                           	psect	rparam
  1985  0000                     pclatu	equ	0xFFB
  1986                           pclath	equ	0xFFA
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon	equ	0xFF2
  1994                           intcon2	equ	0xFF1
  1995                           postinc0	equ	0xFEE
  1996                           fsr0h	equ	0xFEA
  1997                           fsr0l	equ	0xFE9
  1998                           wreg	equ	0xFE8
  1999                           fsr1h	equ	0xFE2
  2000                           fsr1l	equ	0xFE1
  2001                           indf2	equ	0xFDF
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[3]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _relayControl->_EUSART1_Write
    _printf->_putch
    _putch->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     537
                                             21 COMRAM     8     8      0
                       _EUSART1_Read
                      _EUSART1_Write
                  _SYSTEM_Initialize
                             _printf
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     219
                                             16 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      45
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _putch
       _EUSART1_Write
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      44       1       71.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44       9        0.0%
DATA                 0      0      44      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May 25 17:14:14 2017

           _eusart1TxBufferRemaining 0044                                   l70 08D4  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l220 0672  
                                l231 0686                                  l223 0676  
                                l241 069A                                  l233 068A  
                                l225 067A                                  l217 066E  
                                l251 06AE                                  l243 069E  
                                l235 068E                                  l227 067E  
                                l260 06BA                                  l245 06A2  
                                l237 0692                                  l229 0682  
                                l254 06B2                                  l263 06BE  
                                l247 06A6                                  l239 0696  
                                l272 06CA                                  l281 06D6  
                                l257 06B6                                  l249 06AA  
                                l193 084C                                  l266 06C2  
                                l194 0806                                  l275 06CE  
                                l284 06DA                                  l269 06C6  
                                l278 06D2                                  l287 06DE  
                                l900 08C4                                  l912 08F8  
                                l914 08FC                                  l946 0906  
                                l956 092E                         __CFG_CPB$OFF 000000  
                                u110 063A                                  u120 066C  
                                u330 084C                         __CFG_CPD$OFF 000000  
                                u357 07D2                                  u367 082C  
                                u377 0654                                  prod 000FF3  
                                wreg 000FE8                                 l1000 0618  
                               l1002 0620                                 l1020 06EA  
                               l1016 06E2                                 l1008 063C  
                               l1202 0826                                 l1132 09DA  
                               l1134 09E2                                 l1206 083E  
                               l1216 0868                                 l1180 07B8  
                               l1184 07CC                                 l1176 07A4  
                               l1196 080A                                 l1188 07E4  
                               l1198 0812                                 STR_1 0601  
                               STR_2 0610                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               i2l82 099A                                 _WPUB 000F61  
                      _EUSART1_Write 08C0                                 _main 0756  
                      ?_EUSART1_Read 0026                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 009A                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 0A32                                ?_main 0026  
                     __CFG_DEBUG$OFF 000000                                i2l152 0060  
                              i2l148 0050                                i2l990 09CC  
                              i2l982 09AA                                i2l976 0996  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _TFNum 0043  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 096E                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 0A32  
                     ?_EUSART1_Write 0026                                tablat 000FF5  
                     ??_EUSART1_Read 0034                                status 000FD8  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 09FC           __end_of_EUSART1_Initialize 096E  
                       __end_of_main 0876          ?_INTERRUPT_InterruptManager 0026  
                             ??_main 003B                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0026                        main@count_855 0040  
                             _ANSELA 000F38                               ?_putch 0026  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                     __CFG_STVREN$ON 000000                               clear_0 0A02  
                             _printf 09D0                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      ??_EUSART1_Write 0034  
                    _eusart1RxBuffer 0011        __size_of_INTERRUPT_Initialize 0004  
                    _eusart1TxBuffer 0019                    _SYSTEM_Initialize 0A12  
                         __accesstop 0060              __end_of__initialization 0A08  
                 ?_SYSTEM_Initialize 0026                        ___rparam_used 000001  
                     __pcstackCOMRAM 0026                  ??_SYSTEM_Initialize 0034  
                      __end_of_putch 0A3C                 __end_of_EUSART1_Read 093A  
             ??_EUSART1_Transmit_ISR 0026          __end_of_EUSART1_Receive_ISR 09D0  
                      ?_relayControl 0026            __end_of_SYSTEM_Initialize 0A24  
                            ??_putch 0035                        _eusart1RxHead 0022  
                      _eusart1TxHead 0024                        _eusart1RxTail 0023  
                      _eusart1TxTail 0025                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 0043                       main@flashCount 003E  
                 __CFG_CCP2MX$PORTC1 000000                   __CFG_CCP3MX$PORTB5 000000  
                            ?_printf 0036                              _OSCCON2 000FD2  
                     ??_relayControl 0035                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                       __psmallconst 0600                              __pcinit 09FC  
                            __ramtop 0600                              __ptext0 0756  
                            __ptext1 0614                              __ptext2 09D0  
                            __ptext3 0A32                              __ptext4 08C0  
                            __ptext5 0A12                              __ptext6 0876  
                            __ptext7 0A24                              __ptext8 0A3C  
                            __ptext9 093A                      __size_of_printf 002C  
              _OSCILLATOR_Initialize 0A24                   _EUSART1_Initialize 093A  
           ??_PIN_MANAGER_Initialize 0034           __size_of_SYSTEM_Initialize 0012  
               end_of_initialization 0A08                  ?_EUSART1_Initialize 0026  
                      __Lmediumconst 0000                              printf@c 003A  
                            printf@f 0036                              postinc0 000FEE  
              __size_of_EUSART1_Read 003A                 ??_EUSART1_Initialize 0034  
                EUSART1_Write@txData 0034                           main@RxData 0042  
                       _EUSART1_Read 0900                 __end_of_relayControl 0756  
       __end_of_INTERRUPT_Initialize 0A40               ?_OSCILLATOR_Initialize 0026  
                     __end_of_printf 09FC                  start_initialization 09FC  
    __size_of_PIN_MANAGER_Initialize 004A                          putch@txData 0035  
              __end_of_EUSART1_Write 0900                             ??_printf 0038  
                     _eusart1RxCount 0021                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                    relayControl@count 0037  
       __size_of_EUSART1_Receive_ISR 0030               _PIN_MANAGER_Initialize 0876  
                          __pintcode 0008         ??_INTERRUPT_InterruptManager 0026  
                   __CFG_PRICLKEN$ON 000000                          __smallconst 0600  
                           _BAUDCON1 000FB8                       __size_of_putch 000A  
               _INTERRUPT_Initialize 0A3C                             _LATAbits 000F89  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
                           _LATEbits 000F8D                __size_of_relayControl 0142  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0092  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                            main@count 003C  
                       _relayControl 0614                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0026                EUSART1_Read@readValue 0034  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0034          __size_of_EUSART1_Initialize 0034  
                   relayControl@data 0036                             __ptext10 0900  
                           __ptext12 096E                             __ptext13 09A0  
                      __size_of_main 0120                             _site0_IL 0001  
 __end_of_INTERRUPT_InterruptManager 009A           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 09A0                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 0034                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0026              ?_PIN_MANAGER_Initialize 0026  
                         _RCSTA1bits 000FAB         __end_of_EUSART1_Transmit_ISR 09A0  
                           printf@ap 0038               __size_of_EUSART1_Write 0040  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0026  
     __end_of_PIN_MANAGER_Initialize 08C0                    __CFG_FOSC$INTIO67 000000  
