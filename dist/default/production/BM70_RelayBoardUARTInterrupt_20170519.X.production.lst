

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri May 26 11:30:59 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           	psect	nvCOMRAM
    28  00003C                     __pnvCOMRAM:
    29                           	opt stack 0
    30  00003C                     _TFNum:
    31                           	opt stack 0
    32  00003C                     	ds	1
    33  00003D                     _eusart1TxBufferRemaining:
    34                           	opt stack 0
    35  00003D                     	ds	1
    36  0000                     _ANSELA	set	3896
    37  0000                     _ANSELB	set	3897
    38  0000                     _ANSELC	set	3898
    39  0000                     _ANSELD	set	3899
    40  0000                     _ANSELE	set	3900
    41  0000                     _BAUDCON1	set	4024
    42  0000                     _INTCON2bits	set	4081
    43  0000                     _INTCONbits	set	4082
    44  0000                     _LATA	set	3977
    45  0000                     _LATAbits	set	3977
    46  0000                     _LATB	set	3978
    47  0000                     _LATC	set	3979
    48  0000                     _LATCbits	set	3979
    49  0000                     _LATD	set	3980
    50  0000                     _LATDbits	set	3980
    51  0000                     _LATE	set	3981
    52  0000                     _LATEbits	set	3981
    53  0000                     _OSCCON	set	4051
    54  0000                     _OSCCON2	set	4050
    55  0000                     _OSCTUNE	set	3995
    56  0000                     _PIE1bits	set	3997
    57  0000                     _PIR1bits	set	3998
    58  0000                     _RCONbits	set	4048
    59  0000                     _RCREG1	set	4014
    60  0000                     _RCSTA1	set	4011
    61  0000                     _RCSTA1bits	set	4011
    62  0000                     _SPBRG1	set	4015
    63  0000                     _SPBRGH1	set	4016
    64  0000                     _TRISA	set	3986
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISC	set	3988
    67  0000                     _TRISD	set	3989
    68  0000                     _TRISE	set	3990
    69  0000                     _TXREG1	set	4013
    70  0000                     _TXSTA1	set	4012
    71  0000                     _WPUB	set	3937
    72                           
    73                           	psect	smallconst
    74  000600                     __psmallconst:
    75                           	opt stack 0
    76  000600  00                 	db	0
    77  000601                     STR_1:
    78  000601  0D                 	db	13
    79  000602  0A                 	db	10
    80  000603  00                 	db	0
    81                           
    82                           ; #config settings
    83  000604  00                 	db	0	; dummy byte at the end
    84  0000                     
    85                           	psect	cinit
    86  000A76                     __pcinit:
    87                           	opt stack 0
    88  000A76                     start_initialization:
    89                           	opt stack 0
    90  000A76                     __initialization:
    91                           	opt stack 0
    92                           
    93                           ; Clear objects allocated to COMRAM (37 bytes)
    94  000A76  EE00  F001         	lfsr	0,__pbssCOMRAM
    95  000A7A  0E25               	movlw	37
    96  000A7C                     clear_0:
    97  000A7C  6AEE               	clrf	postinc0,c
    98  000A7E  06E8               	decf	wreg,f,c
    99  000A80  E1FD               	bnz	clear_0
   100  000A82                     end_of_initialization:
   101                           	opt stack 0
   102  000A82                     __end_of__initialization:
   103                           	opt stack 0
   104  000A82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105  000A84  6EF8               	movwf	tblptru,c
   106  000A86  0100               	movlb	0
   107  000A88  EF1B  F004         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           postinc0	equ	0xFEE
   110                           wreg	equ	0xFE8
   111                           
   112                           	psect	bssCOMRAM
   113  000001                     __pbssCOMRAM:
   114                           	opt stack 0
   115  000001                     _site0_IL:
   116                           	opt stack 0
   117  000001                     	ds	16
   118  000011                     _eusart1RxBuffer:
   119                           	opt stack 0
   120  000011                     	ds	8
   121  000019                     _eusart1TxBuffer:
   122                           	opt stack 0
   123  000019                     	ds	8
   124  000021                     _eusart1RxCount:
   125                           	opt stack 0
   126  000021                     	ds	1
   127  000022                     _eusart1RxHead:
   128                           	opt stack 0
   129  000022                     	ds	1
   130  000023                     _eusart1RxTail:
   131                           	opt stack 0
   132  000023                     	ds	1
   133  000024                     _eusart1TxHead:
   134                           	opt stack 0
   135  000024                     	ds	1
   136  000025                     _eusart1TxTail:
   137                           	opt stack 0
   138  000025                     	ds	1
   139                           tblptru	equ	0xFF8
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	cstackCOMRAM
   144  000026                     __pcstackCOMRAM:
   145                           	opt stack 0
   146  000026                     ??_INTERRUPT_InterruptManager:
   147  000026                     
   148                           ; 1 bytes @ 0x0
   149  000026                     	ds	14
   150  000034                     EUSART1_Read@readValue:
   151                           	opt stack 0
   152  000034                     EUSART1_Write@txData:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0xE
   156  000034                     	ds	1
   157  000035                     ??_relayControl:
   158  000035                     putch@txData:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0xF
   162  000035                     	ds	1
   163  000036                     ?_printf:
   164                           	opt stack 0
   165  000036                     relayControl@data:
   166                           	opt stack 0
   167  000036                     printf@f:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0x10
   171  000036                     	ds	1
   172  000037                     relayControl@count:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x11
   176  000037                     	ds	1
   177  000038                     printf@ap:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x12
   181  000038                     	ds	2
   182  00003A                     printf@c:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x14
   186  00003A                     	ds	1
   187  00003B                     main@RxData:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x15
   191  00003B                     	ds	1
   192                           tblptru	equ	0xFF8
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196 ;;
   197 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   198 ;;
   199 ;; *************** function _main *****************
   200 ;; Defined at:
   201 ;;		line 32 in file "main.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;  RxData          1   21[COMRAM] unsigned char 
   206 ;; Return value:  Size  Location     Type
   207 ;;		None               void
   208 ;; Registers used:
   209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   215 ;;      Params:         0       0       0       0       0       0       0
   216 ;;      Locals:         1       0       0       0       0       0       0
   217 ;;      Temps:          0       0       0       0       0       0       0
   218 ;;      Totals:         1       0       0       0       0       0       0
   219 ;;Total ram usage:        1 bytes
   220 ;; Hardware stack levels required when called:    5
   221 ;; This function calls:
   222 ;;		_EUSART1_Read
   223 ;;		_EUSART1_Write
   224 ;;		_SYSTEM_Initialize
   225 ;;		_printf
   226 ;;		_relayControl
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text0
   233  000836                     __ptext0:
   234                           	opt stack 0
   235  000836                     _main:
   236                           	opt stack 26
   237                           
   238                           ;main.c: 35: SYSTEM_Initialize();
   239                           
   240                           ;incstack = 0
   241  000836  EC46  F005         	call	_SYSTEM_Initialize	;wreg free
   242                           
   243                           ;main.c: 37: (INTCONbits.GIE = 1);
   244  00083A  8EF2               	bsf	intcon,7,c	;volatile
   245                           
   246                           ;main.c: 38: (INTCONbits.PEIE = 1);
   247  00083C  8CF2               	bsf	intcon,6,c	;volatile
   248                           
   249                           ;main.c: 40: char RxData;
   250                           ;main.c: 42: TFNum = '5';
   251  00083E  0E35               	movlw	53
   252  000840  6E3C               	movwf	_TFNum,c
   253                           
   254                           ;main.c: 43: site0_IL[0] = '3';
   255  000842  0E33               	movlw	51
   256  000844  6E01               	movwf	_site0_IL,c
   257                           
   258                           ;main.c: 44: site0_IL[1] = '.';
   259  000846  0E2E               	movlw	46
   260  000848  6E02               	movwf	_site0_IL+1,c
   261                           
   262                           ;main.c: 45: site0_IL[2] = '9';
   263  00084A  0E39               	movlw	57
   264  00084C  6E03               	movwf	_site0_IL+2,c
   265                           
   266                           ;main.c: 46: site0_IL[3] = '4';
   267  00084E  0E34               	movlw	52
   268  000850  6E04               	movwf	_site0_IL+3,c
   269                           
   270                           ;main.c: 48: site0_IL[4] = '3';
   271  000852  0E33               	movlw	51
   272  000854  6E05               	movwf	_site0_IL+4,c
   273                           
   274                           ;main.c: 49: site0_IL[5] = '7';
   275  000856  0E37               	movlw	55
   276  000858  6E06               	movwf	_site0_IL+5,c
   277                           
   278                           ;main.c: 50: site0_IL[6] = '.';
   279  00085A  0E2E               	movlw	46
   280  00085C  6E07               	movwf	_site0_IL+6,c
   281                           
   282                           ;main.c: 51: site0_IL[7] = '9';
   283  00085E  0E39               	movlw	57
   284  000860  6E08               	movwf	_site0_IL+7,c
   285                           
   286                           ;main.c: 53: site0_IL[8] = '1';
   287  000862  0E31               	movlw	49
   288  000864  6E09               	movwf	_site0_IL+8,c
   289                           
   290                           ;main.c: 54: site0_IL[9] = '5';
   291  000866  0E35               	movlw	53
   292  000868  6E0A               	movwf	_site0_IL+9,c
   293                           
   294                           ;main.c: 55: site0_IL[10] = '.';
   295  00086A  0E2E               	movlw	46
   296  00086C  6E0B               	movwf	_site0_IL+10,c
   297                           
   298                           ;main.c: 56: site0_IL[11] = '4';
   299  00086E  0E34               	movlw	52
   300  000870  6E0C               	movwf	_site0_IL+11,c
   301                           
   302                           ;main.c: 58: site0_IL[12] = '5';
   303  000872  0E35               	movlw	53
   304  000874  6E0D               	movwf	_site0_IL+12,c
   305                           
   306                           ;main.c: 59: site0_IL[13] = '.';
   307  000876  0E2E               	movlw	46
   308  000878  6E0E               	movwf	_site0_IL+13,c
   309                           
   310                           ;main.c: 60: site0_IL[14] = '8';
   311  00087A  0E38               	movlw	56
   312  00087C  6E0F               	movwf	_site0_IL+14,c
   313                           
   314                           ;main.c: 61: site0_IL[15] = '7';
   315  00087E  0E37               	movlw	55
   316  000880  6E10               	movwf	_site0_IL+15,c
   317  000882  D000               	goto	l1269
   318  000884                     l1269:
   319  000884  9089               	bcf	3977,0,c	;volatile
   320  000886  D000               	goto	l1271
   321  000888                     l1271:
   322  000888  9289               	bcf	3977,1,c	;volatile
   323  00088A  D000               	goto	l1273
   324  00088C                     l1273:
   325  00088C  9489               	bcf	3977,2,c	;volatile
   326  00088E  D000               	goto	l1275
   327  000890                     l1275:
   328  000890  9689               	bcf	3977,3,c	;volatile
   329  000892  D000               	goto	l1277
   330  000894                     l1277:
   331  000894  9889               	bcf	3977,4,c	;volatile
   332  000896  D000               	goto	l1279
   333  000898                     l1279:
   334  000898  9A89               	bcf	3977,5,c	;volatile
   335  00089A  D000               	goto	l1281
   336  00089C                     l1281:
   337  00089C  908D               	bcf	3981,0,c	;volatile
   338  00089E  D000               	goto	l1283
   339  0008A0                     l1283:
   340  0008A0  928D               	bcf	3981,1,c	;volatile
   341  0008A2  D000               	goto	l1285
   342  0008A4                     l1285:
   343  0008A4  948D               	bcf	3981,2,c	;volatile
   344  0008A6  D000               	goto	l1287
   345  0008A8                     l1287:
   346  0008A8  9C89               	bcf	3977,6,c	;volatile
   347  0008AA  D000               	goto	l1289
   348  0008AC                     l1289:
   349  0008AC  908B               	bcf	3979,0,c	;volatile
   350  0008AE  D000               	goto	l1291
   351  0008B0                     l1291:
   352  0008B0  928B               	bcf	3979,1,c	;volatile
   353  0008B2  D000               	goto	l1293
   354  0008B4                     l1293:
   355  0008B4  948B               	bcf	3979,2,c	;volatile
   356  0008B6  D000               	goto	l1295
   357  0008B8                     l1295:
   358  0008B8  908C               	bcf	3980,0,c	;volatile
   359  0008BA  D000               	goto	l1297
   360  0008BC                     l1297:
   361  0008BC  928C               	bcf	3980,1,c	;volatile
   362                           
   363                           ;main.c: 81: {
   364                           ;main.c: 90: while((eusart1RxCount)){
   365                           
   366                           ;main.c: 80: while (1)
   367  0008BE  D011               	goto	l1307
   368  0008C0                     l1299:
   369                           
   370                           ;main.c: 92: RxData = EUSART1_Read();
   371  0008C0  ECBD  F004         	call	_EUSART1_Read	;wreg free
   372  0008C4  6E3B               	movwf	main@RxData,c
   373                           
   374                           ;main.c: 103: PIE1bits.TX1IE=0;
   375  0008C6  989D               	bcf	3997,4,c	;volatile
   376                           
   377                           ;main.c: 104: EUSART1_Write(RxData);
   378  0008C8  503B               	movf	main@RxData,w,c
   379  0008CA  EC9D  F004         	call	_EUSART1_Write
   380                           
   381                           ;main.c: 105: printf("\r\n");
   382  0008CE  0E01               	movlw	low STR_1
   383  0008D0  6E36               	movwf	printf@f,c
   384  0008D2  0E06               	movlw	high STR_1
   385  0008D4  6E37               	movwf	printf@f+1,c
   386  0008D6  EC25  F005         	call	_printf	;wreg free
   387                           
   388                           ;main.c: 109: relayControl(RxData);
   389  0008DA  503B               	movf	main@RxData,w,c
   390  0008DC  EC03  F003         	call	_relayControl
   391  0008E0  D000               	goto	l1307
   392  0008E2                     l1307:
   393  0008E2  5021               	movf	_eusart1RxCount,w,c	;volatile
   394  0008E4  B4D8               	btfsc	status,2,c
   395  0008E6  D7FD               	goto	l1307
   396  0008E8  D7EB               	goto	l1299
   397                           
   398                           ;main.c: 110: };
   399  0008EA  D7FB               	goto	l1307
   400  0008EC  EF4D  F000         	goto	start
   401  0008F0                     __end_of_main:
   402                           	opt stack 0
   403                           tblptru	equ	0xFF8
   404                           intcon	equ	0xFF2
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           status	equ	0xFD8
   408                           
   409 ;; *************** function _relayControl *****************
   410 ;; Defined at:
   411 ;;		line 126 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;  data            1    wreg     unsigned char 
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  data            1   16[COMRAM] unsigned char 
   416 ;;  count           2   17[COMRAM] int 
   417 ;; Return value:  Size  Location     Type
   418 ;;		None               void
   419 ;; Registers used:
   420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   426 ;;      Params:         0       0       0       0       0       0       0
   427 ;;      Locals:         3       0       0       0       0       0       0
   428 ;;      Temps:          1       0       0       0       0       0       0
   429 ;;      Totals:         4       0       0       0       0       0       0
   430 ;;Total ram usage:        4 bytes
   431 ;; Hardware stack levels used:    1
   432 ;; Hardware stack levels required when called:    3
   433 ;; This function calls:
   434 ;;		_EUSART1_Write
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text1
   441  000606                     __ptext1:
   442                           	opt stack 0
   443  000606                     _relayControl:
   444                           	opt stack 27
   445                           
   446                           ;incstack = 0
   447                           ;relayControl@data stored from wreg
   448  000606  6E36               	movwf	relayControl@data,c
   449                           
   450                           ;main.c: 127: switch (data){
   451  000608  D0A7               	goto	l1115
   452  00060A                     l1095:
   453                           
   454                           ;main.c: 129: EUSART1_Write(TFNum);
   455  00060A  503C               	movf	_TFNum,w,c
   456  00060C  EC9D  F004         	call	_EUSART1_Write
   457                           
   458                           ;main.c: 130: break;
   459  000610  0012               	return	
   460  000612                     l1097:
   461                           
   462                           ;main.c: 132: for (int count=0; count<16; count++){
   463  000612  0E00               	movlw	0
   464  000614  6E38               	movwf	relayControl@count+1,c
   465  000616  0E00               	movlw	0
   466  000618  6E37               	movwf	relayControl@count,c
   467  00061A  BE38               	btfsc	relayControl@count+1,7,c
   468  00061C  D008               	goto	l1103
   469  00061E  5038               	movf	relayControl@count+1,w,c
   470  000620  E105               	bnz	u110
   471  000622  0E10               	movlw	16
   472  000624  5C37               	subwf	relayControl@count,w,c
   473  000626  B0D8               	btfsc	status,0,c
   474  000628  0012               	return	
   475  00062A  D001               	goto	l1103
   476  00062C                     u110:
   477  00062C  0012               	return	
   478  00062E                     l1103:
   479                           
   480                           ;main.c: 133: EUSART1_Write(site0_IL[count]);
   481  00062E  0E01               	movlw	low _site0_IL
   482  000630  2437               	addwf	relayControl@count,w,c
   483  000632  6ED9               	movwf	fsr2l,c
   484  000634  0E00               	movlw	high _site0_IL
   485  000636  2038               	addwfc	relayControl@count+1,w,c
   486  000638  6EDA               	movwf	fsr2h,c
   487  00063A  50DF               	movf	indf2,w,c
   488  00063C  EC9D  F004         	call	_EUSART1_Write
   489                           
   490                           ;main.c: 134: _delay((unsigned long)((25)*(8000000/4000.0)));
   491  000640  0E41               	movlw	65
   492  000642  6E35               	movwf	??_relayControl& (0+255),c
   493  000644  0EEE               	movlw	238
   494  000646                     u237:
   495  000646  2EE8               	decfsz	wreg,f,c
   496  000648  D7FE               	goto	u237
   497  00064A  2E35               	decfsz	??_relayControl& (0+255),f,c
   498  00064C  D7FC               	goto	u237
   499  00064E  D000               	nop2	
   500  000650  4A37               	infsnz	relayControl@count,f,c
   501  000652  2A38               	incf	relayControl@count+1,f,c
   502  000654  BE38               	btfsc	relayControl@count+1,7,c
   503  000656  D7EB               	goto	l1103
   504  000658  5038               	movf	relayControl@count+1,w,c
   505  00065A  E101               	bnz	u120
   506  00065C  D7E2               	goto	L1
   507  00065E                     u120:
   508                           
   509                           ;main.c: 135: }
   510                           ;main.c: 136: break;
   511  00065E  0012               	return	
   512  000660                     l239:
   513  000660  908C               	bcf	3980,0,c	;volatile
   514                           
   515                           ;main.c: 139: break;
   516  000662  0012               	return	
   517  000664                     l242:
   518  000664  808C               	bsf	3980,0,c	;volatile
   519                           
   520                           ;main.c: 142: break;
   521  000666  0012               	return	
   522  000668                     l245:
   523  000668  9089               	bcf	3977,0,c	;volatile
   524  00066A  D000               	goto	l247
   525  00066C                     l247:
   526  00066C  9289               	bcf	3977,1,c	;volatile
   527  00066E  D000               	goto	l249
   528  000670                     l249:
   529  000670  9489               	bcf	3977,2,c	;volatile
   530  000672  D000               	goto	l251
   531  000674                     l251:
   532  000674  9689               	bcf	3977,3,c	;volatile
   533  000676  D000               	goto	l253
   534  000678                     l253:
   535  000678  9889               	bcf	3977,4,c	;volatile
   536  00067A  D000               	goto	l255
   537  00067C                     l255:
   538  00067C  9A89               	bcf	3977,5,c	;volatile
   539  00067E  D000               	goto	l257
   540  000680                     l257:
   541  000680  908D               	bcf	3981,0,c	;volatile
   542  000682  D000               	goto	l259
   543  000684                     l259:
   544  000684  928D               	bcf	3981,1,c	;volatile
   545  000686  D000               	goto	l261
   546  000688                     l261:
   547  000688  948D               	bcf	3981,2,c	;volatile
   548  00068A  D000               	goto	l263
   549  00068C                     l263:
   550  00068C  9C89               	bcf	3977,6,c	;volatile
   551  00068E  D000               	goto	l265
   552  000690                     l265:
   553  000690  908B               	bcf	3979,0,c	;volatile
   554  000692  D000               	goto	l267
   555  000694                     l267:
   556  000694  928B               	bcf	3979,1,c	;volatile
   557  000696  D000               	goto	l269
   558  000698                     l269:
   559  000698  948B               	bcf	3979,2,c	;volatile
   560  00069A  D000               	goto	l271
   561  00069C                     l271:
   562  00069C  908C               	bcf	3980,0,c	;volatile
   563  00069E  D000               	goto	l273
   564  0006A0                     l273:
   565  0006A0  928C               	bcf	3980,1,c	;volatile
   566                           
   567                           ;main.c: 160: break;
   568  0006A2  0012               	return	
   569  0006A4                     l276:
   570  0006A4  9089               	bcf	3977,0,c	;volatile
   571                           
   572                           ;main.c: 163: break;
   573  0006A6  0012               	return	
   574  0006A8                     l279:
   575  0006A8  8089               	bsf	3977,0,c	;volatile
   576                           
   577                           ;main.c: 166: break;
   578  0006AA  0012               	return	
   579  0006AC                     l282:
   580  0006AC  9289               	bcf	3977,1,c	;volatile
   581                           
   582                           ;main.c: 169: break;
   583  0006AE  0012               	return	
   584  0006B0                     l285:
   585  0006B0  8289               	bsf	3977,1,c	;volatile
   586                           
   587                           ;main.c: 172: break;
   588  0006B2  0012               	return	
   589  0006B4                     l288:
   590  0006B4  9489               	bcf	3977,2,c	;volatile
   591                           
   592                           ;main.c: 175: break;
   593  0006B6  0012               	return	
   594  0006B8                     l291:
   595  0006B8  8489               	bsf	3977,2,c	;volatile
   596                           
   597                           ;main.c: 178: break;
   598  0006BA  0012               	return	
   599  0006BC                     l294:
   600  0006BC  9689               	bcf	3977,3,c	;volatile
   601                           
   602                           ;main.c: 181: break;
   603  0006BE  0012               	return	
   604  0006C0                     l297:
   605  0006C0  8689               	bsf	3977,3,c	;volatile
   606                           
   607                           ;main.c: 184: break;
   608  0006C2  0012               	return	
   609  0006C4                     l300:
   610  0006C4  9889               	bcf	3977,4,c	;volatile
   611                           
   612                           ;main.c: 187: break;
   613  0006C6  0012               	return	
   614  0006C8                     l303:
   615  0006C8  8889               	bsf	3977,4,c	;volatile
   616                           
   617                           ;main.c: 190: break;
   618  0006CA  0012               	return	
   619  0006CC                     l306:
   620  0006CC  9A89               	bcf	3977,5,c	;volatile
   621                           
   622                           ;main.c: 193: break;
   623  0006CE  0012               	return	
   624  0006D0                     l309:
   625  0006D0  8A89               	bsf	3977,5,c	;volatile
   626                           
   627                           ;main.c: 196: break;
   628  0006D2  0012               	return	
   629  0006D4                     l312:
   630  0006D4  908D               	bcf	3981,0,c	;volatile
   631                           
   632                           ;main.c: 200: break;
   633  0006D6  0012               	return	
   634  0006D8                     l315:
   635  0006D8  808D               	bsf	3981,0,c	;volatile
   636                           
   637                           ;main.c: 203: break;
   638  0006DA  0012               	return	
   639  0006DC                     l318:
   640  0006DC  928D               	bcf	3981,1,c	;volatile
   641                           
   642                           ;main.c: 206: break;
   643  0006DE  0012               	return	
   644  0006E0                     l321:
   645  0006E0  828D               	bsf	3981,1,c	;volatile
   646                           
   647                           ;main.c: 209: break;
   648  0006E2  0012               	return	
   649  0006E4                     l324:
   650  0006E4  948D               	bcf	3981,2,c	;volatile
   651                           
   652                           ;main.c: 212: break;
   653  0006E6  0012               	return	
   654  0006E8                     l327:
   655  0006E8  848D               	bsf	3981,2,c	;volatile
   656                           
   657                           ;main.c: 215: break;
   658  0006EA  0012               	return	
   659  0006EC                     l330:
   660  0006EC  9C89               	bcf	3977,6,c	;volatile
   661                           
   662                           ;main.c: 218: break;
   663  0006EE  0012               	return	
   664  0006F0                     l333:
   665  0006F0  8C89               	bsf	3977,6,c	;volatile
   666                           
   667                           ;main.c: 221: break;
   668  0006F2  0012               	return	
   669  0006F4                     l336:
   670  0006F4  908B               	bcf	3979,0,c	;volatile
   671                           
   672                           ;main.c: 224: break;
   673  0006F6  0012               	return	
   674  0006F8                     l339:
   675  0006F8  808B               	bsf	3979,0,c	;volatile
   676                           
   677                           ;main.c: 227: break;
   678  0006FA  0012               	return	
   679  0006FC                     l342:
   680  0006FC  928B               	bcf	3979,1,c	;volatile
   681                           
   682                           ;main.c: 230: break;
   683  0006FE  0012               	return	
   684  000700                     l345:
   685  000700  828B               	bsf	3979,1,c	;volatile
   686                           
   687                           ;main.c: 233: break;
   688  000702  0012               	return	
   689  000704                     l348:
   690  000704  948B               	bcf	3979,2,c	;volatile
   691                           
   692                           ;main.c: 236: break;
   693  000706  0012               	return	
   694  000708                     l351:
   695  000708  848B               	bsf	3979,2,c	;volatile
   696                           
   697                           ;main.c: 239: break;
   698  00070A  0012               	return	
   699  00070C                     l354:
   700  00070C  908C               	bcf	3980,0,c	;volatile
   701                           
   702                           ;main.c: 242: break;
   703  00070E  0012               	return	
   704  000710                     l357:
   705  000710  808C               	bsf	3980,0,c	;volatile
   706                           
   707                           ;main.c: 245: break;
   708  000712  0012               	return	
   709  000714                     l360:
   710  000714  928C               	bcf	3980,1,c	;volatile
   711                           
   712                           ;main.c: 248: break;
   713  000716  0012               	return	
   714  000718                     l363:
   715  000718  828C               	bsf	3980,1,c	;volatile
   716                           
   717                           ;main.c: 251: break;
   718  00071A  0012               	return	
   719  00071C                     l366:
   720  00071C  9089               	bcf	3977,0,c	;volatile
   721  00071E  D000               	goto	l368
   722  000720                     l368:
   723  000720  9289               	bcf	3977,1,c	;volatile
   724  000722  D000               	goto	l370
   725  000724                     l370:
   726  000724  9489               	bcf	3977,2,c	;volatile
   727  000726  D000               	goto	l372
   728  000728                     l372:
   729  000728  9689               	bcf	3977,3,c	;volatile
   730  00072A  D000               	goto	l374
   731  00072C                     l374:
   732  00072C  9889               	bcf	3977,4,c	;volatile
   733  00072E  D000               	goto	l376
   734  000730                     l376:
   735  000730  9A89               	bcf	3977,5,c	;volatile
   736  000732  D000               	goto	l378
   737  000734                     l378:
   738  000734  908D               	bcf	3981,0,c	;volatile
   739  000736  D000               	goto	l380
   740  000738                     l380:
   741  000738  928D               	bcf	3981,1,c	;volatile
   742  00073A  D000               	goto	l382
   743  00073C                     l382:
   744  00073C  948D               	bcf	3981,2,c	;volatile
   745  00073E  D000               	goto	l384
   746  000740                     l384:
   747  000740  9C89               	bcf	3977,6,c	;volatile
   748  000742  D000               	goto	l386
   749  000744                     l386:
   750  000744  908B               	bcf	3979,0,c	;volatile
   751  000746  D000               	goto	l388
   752  000748                     l388:
   753  000748  908C               	bcf	3980,0,c	;volatile
   754  00074A  D000               	goto	l390
   755  00074C                     l390:
   756  00074C  928C               	bcf	3980,1,c	;volatile
   757                           
   758                           ;main.c: 266: break;
   759  00074E  0012               	return	
   760  000750                     l1111:
   761                           
   762                           ;main.c: 268: EUSART1_Write('U');
   763  000750  0E55               	movlw	85
   764  000752  EC9D  F004         	call	_EUSART1_Write
   765                           
   766                           ;main.c: 270: }
   767                           
   768                           ;main.c: 269: break;
   769  000756  0012               	return	
   770  000758                     l1115:
   771  000758  5036               	movf	relayControl@data,w,c
   772                           
   773                           ; Switch size 1, requested type "space"
   774                           ; Number of cases is 36, Range of values is 2 to 120
   775                           ; switch strategies available:
   776                           ; Name         Instructions Cycles
   777                           ; simple_byte          109    55 (average)
   778                           ;	Chosen strategy is simple_byte
   779  00075A  0A02               	xorlw	2	; case 2
   780  00075C  B4D8               	btfsc	status,2,c
   781  00075E  D7A2               	goto	l276
   782  000760  0A06               	xorlw	6	; case 4
   783  000762  B4D8               	btfsc	status,2,c
   784  000764  D7A3               	goto	l282
   785  000766  0A02               	xorlw	2	; case 6
   786  000768  B4D8               	btfsc	status,2,c
   787  00076A  D7A4               	goto	l288
   788  00076C  0A0E               	xorlw	14	; case 8
   789  00076E  B4D8               	btfsc	status,2,c
   790  000770  D7A5               	goto	l294
   791  000772  0A02               	xorlw	2	; case 10
   792  000774  B4D8               	btfsc	status,2,c
   793  000776  D7A6               	goto	l300
   794  000778  0A06               	xorlw	6	; case 12
   795  00077A  B4D8               	btfsc	status,2,c
   796  00077C  D7A7               	goto	l306
   797  00077E  0A02               	xorlw	2	; case 14
   798  000780  B4D8               	btfsc	status,2,c
   799  000782  D7A8               	goto	l312
   800  000784  0A1E               	xorlw	30	; case 16
   801  000786  B4D8               	btfsc	status,2,c
   802  000788  D7A9               	goto	l318
   803  00078A  0A02               	xorlw	2	; case 18
   804  00078C  B4D8               	btfsc	status,2,c
   805  00078E  D7AA               	goto	l324
   806  000790  0A06               	xorlw	6	; case 20
   807  000792  B4D8               	btfsc	status,2,c
   808  000794  D7AB               	goto	l330
   809  000796  0A02               	xorlw	2	; case 22
   810  000798  B4D8               	btfsc	status,2,c
   811  00079A  D7AC               	goto	l336
   812  00079C  0A0E               	xorlw	14	; case 24
   813  00079E  B4D8               	btfsc	status,2,c
   814  0007A0  D7AD               	goto	l342
   815  0007A2  0A02               	xorlw	2	; case 26
   816  0007A4  B4D8               	btfsc	status,2,c
   817  0007A6  D7AE               	goto	l348
   818  0007A8  0A06               	xorlw	6	; case 28
   819  0007AA  B4D8               	btfsc	status,2,c
   820  0007AC  D7AF               	goto	l354
   821  0007AE  0A02               	xorlw	2	; case 30
   822  0007B0  B4D8               	btfsc	status,2,c
   823  0007B2  D7B0               	goto	l360
   824  0007B4  0A3C               	xorlw	60	; case 34
   825  0007B6  B4D8               	btfsc	status,2,c
   826  0007B8  D777               	goto	l279
   827  0007BA  0A06               	xorlw	6	; case 36
   828  0007BC  B4D8               	btfsc	status,2,c
   829  0007BE  D778               	goto	l285
   830  0007C0  0A02               	xorlw	2	; case 38
   831  0007C2  B4D8               	btfsc	status,2,c
   832  0007C4  D779               	goto	l291
   833  0007C6  0A0E               	xorlw	14	; case 40
   834  0007C8  B4D8               	btfsc	status,2,c
   835  0007CA  D77A               	goto	l297
   836  0007CC  0A02               	xorlw	2	; case 42
   837  0007CE  B4D8               	btfsc	status,2,c
   838  0007D0  D77B               	goto	l303
   839  0007D2  0A06               	xorlw	6	; case 44
   840  0007D4  B4D8               	btfsc	status,2,c
   841  0007D6  D77C               	goto	l309
   842  0007D8  0A02               	xorlw	2	; case 46
   843  0007DA  B4D8               	btfsc	status,2,c
   844  0007DC  D77D               	goto	l315
   845  0007DE  0A1E               	xorlw	30	; case 48
   846  0007E0  B4D8               	btfsc	status,2,c
   847  0007E2  D77E               	goto	l321
   848  0007E4  0A02               	xorlw	2	; case 50
   849  0007E6  B4D8               	btfsc	status,2,c
   850  0007E8  D77F               	goto	l327
   851  0007EA  0A06               	xorlw	6	; case 52
   852  0007EC  B4D8               	btfsc	status,2,c
   853  0007EE  D780               	goto	l333
   854  0007F0  0A02               	xorlw	2	; case 54
   855  0007F2  B4D8               	btfsc	status,2,c
   856  0007F4  D781               	goto	l339
   857  0007F6  0A0E               	xorlw	14	; case 56
   858  0007F8  B4D8               	btfsc	status,2,c
   859  0007FA  D782               	goto	l345
   860  0007FC  0A02               	xorlw	2	; case 58
   861  0007FE  B4D8               	btfsc	status,2,c
   862  000800  D783               	goto	l351
   863  000802  0A06               	xorlw	6	; case 60
   864  000804  B4D8               	btfsc	status,2,c
   865  000806  D784               	goto	l357
   866  000808  0A02               	xorlw	2	; case 62
   867  00080A  B4D8               	btfsc	status,2,c
   868  00080C  D785               	goto	l363
   869  00080E  0A77               	xorlw	119	; case 73
   870  000810  B4D8               	btfsc	status,2,c
   871  000812  D6FF               	goto	l1097
   872  000814  0A1D               	xorlw	29	; case 84
   873  000816  B4D8               	btfsc	status,2,c
   874  000818  D6F8               	goto	l1095
   875  00081A  0A0C               	xorlw	12	; case 88
   876  00081C  B4D8               	btfsc	status,2,c
   877  00081E  D724               	goto	l245
   878  000820  0A39               	xorlw	57	; case 97
   879  000822  B4D8               	btfsc	status,2,c
   880  000824  D71D               	goto	l239
   881  000826  0A03               	xorlw	3	; case 98
   882  000828  B4D8               	btfsc	status,2,c
   883  00082A  D71C               	goto	l242
   884  00082C  0A1A               	xorlw	26	; case 120
   885  00082E  B4D8               	btfsc	status,2,c
   886  000830  D775               	goto	l366
   887  000832  D78E               	goto	l1111
   888  000834  0012               	return		;funcret
   889  000836                     __end_of_relayControl:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           intcon	equ	0xFF2
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           indf2	equ	0xFDF
   896                           fsr2h	equ	0xFDA
   897                           fsr2l	equ	0xFD9
   898                           status	equ	0xFD8
   899                           
   900 ;; *************** function _printf *****************
   901 ;; Defined at:
   902 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  f               2   16[COMRAM] PTR const unsigned char 
   905 ;;		 -> STR_1(3), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  tmpval          4    0        struct .
   908 ;;  cp              3    0        PTR const unsigned char 
   909 ;;  ap              2   18[COMRAM] PTR void [1]
   910 ;;		 -> ?_printf(2), 
   911 ;;  len             2    0        unsigned int 
   912 ;;  val             2    0        unsigned int 
   913 ;;  c               1   20[COMRAM] char 
   914 ;;  flag            1    0        unsigned char 
   915 ;;  prec            1    0        char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  2   16[COMRAM] int 
   918 ;; Registers used:
   919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   925 ;;      Params:         2       0       0       0       0       0       0
   926 ;;      Locals:         3       0       0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0
   928 ;;      Totals:         5       0       0       0       0       0       0
   929 ;;Total ram usage:        5 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; Hardware stack levels required when called:    4
   932 ;; This function calls:
   933 ;;		_putch
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text2
   940  000A4A                     __ptext2:
   941                           	opt stack 0
   942  000A4A                     _printf:
   943                           	opt stack 26
   944                           
   945                           ;doprnt.c: 466: va_list ap;
   946                           ;doprnt.c: 499: signed char c;
   947                           ;doprnt.c: 506: signed char prec;
   948                           ;doprnt.c: 508: unsigned char flag;
   949                           ;doprnt.c: 523: union {
   950                           ;doprnt.c: 524: unsigned long vd;
   951                           ;doprnt.c: 525: double integ;
   952                           ;doprnt.c: 526: } tmpval;
   953                           ;doprnt.c: 528: unsigned int val;
   954                           ;doprnt.c: 529: unsigned len;
   955                           ;doprnt.c: 530: const char * cp;
   956                           ;doprnt.c: 533: *ap = __va_start();
   957                           
   958                           ;incstack = 0
   959  000A4A  0E38               	movlw	low (?_printf+2)
   960  000A4C  6E38               	movwf	printf@ap,c
   961  000A4E  0E00               	movlw	high (?_printf+2)
   962  000A50  6E39               	movwf	printf@ap+1,c
   963                           
   964                           ;doprnt.c: 536: while(c = *f++) {
   965  000A52  D004               	goto	l1227
   966  000A54                     l1225:
   967                           
   968                           ;doprnt.c: 540: {
   969                           ;doprnt.c: 541: (putch(c) );
   970  000A54  503A               	movf	printf@c,w,c
   971  000A56  EC56  F005         	call	_putch
   972                           
   973                           ;doprnt.c: 542: continue;
   974  000A5A  D000               	goto	l1227
   975  000A5C                     l1227:
   976  000A5C  C036  FFF6         	movff	printf@f,tblptrl
   977  000A60  C037  FFF7         	movff	printf@f+1,tblptrh
   978  000A64  4A36               	infsnz	printf@f,f,c
   979  000A66  2A37               	incf	printf@f+1,f,c
   980  000A68                     	if	0	;tblptru may be non-zero
   981  000A68                     	endif
   982  000A68                     	if	0	;tblptru may be non-zero
   983  000A68                     	endif
   984  000A68  0008               	tblrd		*
   985  000A6A  CFF5 F03A          	movff	tablat,printf@c
   986  000A6E  503A               	movf	printf@c,w,c
   987  000A70  A4D8               	btfss	status,2,c
   988  000A72  D7F0               	goto	l1225
   989                           
   990                           ;doprnt.c: 1469: }
   991                           ;doprnt.c: 1533: }
   992                           ;doprnt.c: 1540: return 0;
   993                           ;	Return value of _printf is never used
   994  000A74  0012               	return		;funcret
   995  000A76                     __end_of_printf:
   996                           	opt stack 0
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           intcon	equ	0xFF2
  1002                           postinc0	equ	0xFEE
  1003                           wreg	equ	0xFE8
  1004                           indf2	equ	0xFDF
  1005                           fsr2h	equ	0xFDA
  1006                           fsr2l	equ	0xFD9
  1007                           status	equ	0xFD8
  1008                           
  1009 ;; *************** function _putch *****************
  1010 ;; Defined at:
  1011 ;;		line 160 in file "mcc_generated_files/eusart1.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  txData          1    wreg     unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  txData          1   15[COMRAM] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;		None               void
  1018 ;; Registers used:
  1019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1025 ;;      Params:         0       0       0       0       0       0       0
  1026 ;;      Locals:         1       0       0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0
  1028 ;;      Totals:         1       0       0       0       0       0       0
  1029 ;;Total ram usage:        1 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    3
  1032 ;; This function calls:
  1033 ;;		_EUSART1_Write
  1034 ;; This function is called by:
  1035 ;;		_printf
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text3
  1040  000AAC                     __ptext3:
  1041                           	opt stack 0
  1042  000AAC                     _putch:
  1043                           	opt stack 26
  1044                           
  1045                           ;incstack = 0
  1046                           ;putch@txData stored from wreg
  1047  000AAC  6E35               	movwf	putch@txData,c
  1048                           
  1049                           ;eusart1.c: 162: EUSART1_Write(txData);
  1050  000AAE  5035               	movf	putch@txData,w,c
  1051  000AB0  EC9D  F004         	call	_EUSART1_Write
  1052  000AB4  0012               	return		;funcret
  1053  000AB6                     __end_of_putch:
  1054                           	opt stack 0
  1055                           tblptru	equ	0xFF8
  1056                           tblptrh	equ	0xFF7
  1057                           tblptrl	equ	0xFF6
  1058                           tablat	equ	0xFF5
  1059                           intcon	equ	0xFF2
  1060                           postinc0	equ	0xFEE
  1061                           wreg	equ	0xFE8
  1062                           indf2	equ	0xFDF
  1063                           fsr2h	equ	0xFDA
  1064                           fsr2l	equ	0xFD9
  1065                           status	equ	0xFD8
  1066                           
  1067 ;; *************** function _EUSART1_Write *****************
  1068 ;; Defined at:
  1069 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  txData          1    wreg     unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  txData          1   14[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;		None               void
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1083 ;;      Params:         0       0       0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0
  1086 ;;      Totals:         1       0       0       0       0       0       0
  1087 ;;Total ram usage:        1 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    2
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_putch
  1094 ;;		_main
  1095 ;;		_relayControl
  1096 ;;		_sendString
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text4
  1101  00093A                     __ptext4:
  1102                           	opt stack 0
  1103  00093A                     _EUSART1_Write:
  1104                           	opt stack 27
  1105                           
  1106                           ;incstack = 0
  1107                           ;EUSART1_Write@txData stored from wreg
  1108  00093A  6E34               	movwf	EUSART1_Write@txData,c
  1109                           
  1110                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
  1111  00093C  D000               	goto	l995
  1112  00093E                     l995:
  1113  00093E  503D               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1114  000940  B4D8               	btfsc	status,2,c
  1115  000942  D7FD               	goto	l995
  1116                           
  1117                           ;eusart1.c: 136: }
  1118                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
  1119  000944  B89D               	btfsc	3997,4,c	;volatile
  1120  000946  D003               	goto	l70
  1121                           
  1122                           ;eusart1.c: 139: {
  1123                           ;eusart1.c: 140: TXREG1 = txData;
  1124  000948  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1125                           
  1126                           ;eusart1.c: 141: }
  1127  00094C  D014               	goto	l1009
  1128  00094E                     l70:
  1129                           
  1130                           ;eusart1.c: 142: else
  1131                           ;eusart1.c: 143: {
  1132                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
  1133  00094E  989D               	bcf	3997,4,c	;volatile
  1134                           
  1135                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
  1136  000950  5024               	movf	_eusart1TxHead,w,c
  1137  000952  0D01               	mullw	1
  1138  000954  0E19               	movlw	low _eusart1TxBuffer
  1139  000956  24F3               	addwf	prodl,w,c
  1140  000958  6ED9               	movwf	fsr2l,c
  1141  00095A  0E00               	movlw	high _eusart1TxBuffer
  1142  00095C  20F4               	addwfc	prodh,w,c
  1143  00095E  6EDA               	movwf	fsr2h,c
  1144  000960  C034  FFDF         	movff	EUSART1_Write@txData,indf2
  1145  000964  2A24               	incf	_eusart1TxHead,f,c
  1146                           
  1147                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1148  000966  0E07               	movlw	7
  1149  000968  6424               	cpfsgt	_eusart1TxHead,c
  1150  00096A  D003               	goto	l1007
  1151                           
  1152                           ;eusart1.c: 147: {
  1153                           ;eusart1.c: 148: eusart1TxHead = 0;
  1154  00096C  0E00               	movlw	0
  1155  00096E  6E24               	movwf	_eusart1TxHead,c
  1156  000970  D000               	goto	l1007
  1157  000972                     l1007:
  1158                           
  1159                           ;eusart1.c: 149: }
  1160                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  1161  000972  063D               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1162  000974  D000               	goto	l1009
  1163  000976                     l1009:
  1164                           
  1165                           ;eusart1.c: 151: }
  1166                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
  1167  000976  889D               	bsf	3997,4,c	;volatile
  1168  000978  0012               	return		;funcret
  1169  00097A                     __end_of_EUSART1_Write:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           postinc0	equ	0xFEE
  1179                           wreg	equ	0xFE8
  1180                           indf2	equ	0xFDF
  1181                           fsr2h	equ	0xFDA
  1182                           fsr2l	equ	0xFD9
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _SYSTEM_Initialize *****************
  1186 ;; Defined at:
  1187 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;		None               void
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1201 ;;      Params:         0       0       0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0
  1204 ;;      Totals:         0       0       0       0       0       0       0
  1205 ;;Total ram usage:        0 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    3
  1208 ;; This function calls:
  1209 ;;		_EUSART1_Initialize
  1210 ;;		_INTERRUPT_Initialize
  1211 ;;		_OSCILLATOR_Initialize
  1212 ;;		_PIN_MANAGER_Initialize
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text5
  1219  000A8C                     __ptext5:
  1220                           	opt stack 0
  1221  000A8C                     _SYSTEM_Initialize:
  1222                           	opt stack 27
  1223                           
  1224                           ;mcc.c: 114: INTERRUPT_Initialize();
  1225                           
  1226                           ;incstack = 0
  1227  000A8C  EC5B  F005         	call	_INTERRUPT_Initialize	;wreg free
  1228                           
  1229                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1230  000A90  EC78  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1231                           
  1232                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1233  000A94  EC4F  F005         	call	_OSCILLATOR_Initialize	;wreg free
  1234                           
  1235                           ;mcc.c: 117: EUSART1_Initialize();
  1236  000A98  ECDA  F004         	call	_EUSART1_Initialize	;wreg free
  1237  000A9C  0012               	return		;funcret
  1238  000A9E                     __end_of_SYSTEM_Initialize:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           prodh	equ	0xFF4
  1245                           prodl	equ	0xFF3
  1246                           intcon	equ	0xFF2
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           indf2	equ	0xFDF
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function _PIN_MANAGER_Initialize *****************
  1255 ;; Defined at:
  1256 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;		None               void
  1263 ;; Registers used:
  1264 ;;		wreg, status,2
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1270 ;;      Params:         0       0       0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    2
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_SYSTEM_Initialize
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text6
  1285  0008F0                     __ptext6:
  1286                           	opt stack 0
  1287  0008F0                     _PIN_MANAGER_Initialize:
  1288                           	opt stack 27
  1289                           
  1290                           ;pin_manager.c: 56: LATE = 0x00;
  1291                           
  1292                           ;incstack = 0
  1293  0008F0  0E00               	movlw	0
  1294  0008F2  6E8D               	movwf	3981,c	;volatile
  1295                           
  1296                           ;pin_manager.c: 57: LATD = 0x00;
  1297  0008F4  0E00               	movlw	0
  1298  0008F6  6E8C               	movwf	3980,c	;volatile
  1299                           
  1300                           ;pin_manager.c: 58: LATA = 0x00;
  1301  0008F8  0E00               	movlw	0
  1302  0008FA  6E89               	movwf	3977,c	;volatile
  1303                           
  1304                           ;pin_manager.c: 59: LATB = 0x00;
  1305  0008FC  0E00               	movlw	0
  1306  0008FE  6E8A               	movwf	3978,c	;volatile
  1307                           
  1308                           ;pin_manager.c: 60: LATC = 0x00;
  1309  000900  0E00               	movlw	0
  1310  000902  6E8B               	movwf	3979,c	;volatile
  1311                           
  1312                           ;pin_manager.c: 65: TRISE = 0x00;
  1313  000904  0E00               	movlw	0
  1314  000906  6E96               	movwf	3990,c	;volatile
  1315                           
  1316                           ;pin_manager.c: 66: TRISA = 0x80;
  1317  000908  0E80               	movlw	128
  1318  00090A  6E92               	movwf	3986,c	;volatile
  1319                           
  1320                           ;pin_manager.c: 67: TRISB = 0xFF;
  1321  00090C  6893               	setf	3987,c	;volatile
  1322                           
  1323                           ;pin_manager.c: 68: TRISC = 0xB8;
  1324  00090E  0EB8               	movlw	184
  1325  000910  6E94               	movwf	3988,c	;volatile
  1326                           
  1327                           ;pin_manager.c: 69: TRISD = 0xFC;
  1328  000912  0EFC               	movlw	252
  1329  000914  6E95               	movwf	3989,c	;volatile
  1330                           
  1331                           ;pin_manager.c: 74: ANSELC = 0x38;
  1332  000916  0E38               	movlw	56
  1333  000918  010F               	movlb	15	; () banked
  1334  00091A  6F3A               	movwf	58,b	;volatile
  1335                           
  1336                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1337  00091C  0E3F               	movlw	63
  1338  00091E  010F               	movlb	15	; () banked
  1339  000920  6F39               	movwf	57,b	;volatile
  1340                           
  1341                           ;pin_manager.c: 76: ANSELD = 0x00;
  1342  000922  0E00               	movlw	0
  1343  000924  010F               	movlb	15	; () banked
  1344  000926  6F3B               	movwf	59,b	;volatile
  1345                           
  1346                           ;pin_manager.c: 77: ANSELE = 0x00;
  1347  000928  0E00               	movlw	0
  1348  00092A  010F               	movlb	15	; () banked
  1349  00092C  6F3C               	movwf	60,b	;volatile
  1350                           
  1351                           ;pin_manager.c: 78: ANSELA = 0x00;
  1352  00092E  0E00               	movlw	0
  1353  000930  010F               	movlb	15	; () banked
  1354  000932  6F38               	movwf	56,b	;volatile
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;pin_manager.c: 83: WPUB = 0xFF;
  1358  000934  6861               	setf	3937,c	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1362  000936  9EF1               	bcf	intcon2,7,c	;volatile
  1363                           
  1364                           ; BSR set to: 15
  1365  000938  0012               	return		;funcret
  1366  00093A                     __end_of_PIN_MANAGER_Initialize:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           prodh	equ	0xFF4
  1373                           prodl	equ	0xFF3
  1374                           intcon	equ	0xFF2
  1375                           intcon2	equ	0xFF1
  1376                           postinc0	equ	0xFEE
  1377                           wreg	equ	0xFE8
  1378                           indf2	equ	0xFDF
  1379                           fsr2h	equ	0xFDA
  1380                           fsr2l	equ	0xFD9
  1381                           status	equ	0xFD8
  1382                           
  1383 ;; *************** function _OSCILLATOR_Initialize *****************
  1384 ;; Defined at:
  1385 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, status,2
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1399 ;;      Params:         0       0       0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    2
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_SYSTEM_Initialize
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text7
  1414  000A9E                     __ptext7:
  1415                           	opt stack 0
  1416  000A9E                     _OSCILLATOR_Initialize:
  1417                           	opt stack 27
  1418                           
  1419                           ;mcc.c: 123: OSCCON = 0x60;
  1420                           
  1421                           ; BSR set to: 15
  1422                           ;incstack = 0
  1423  000A9E  0E60               	movlw	96
  1424  000AA0  6ED3               	movwf	4051,c	;volatile
  1425                           
  1426                           ;mcc.c: 125: OSCCON2 = 0x04;
  1427  000AA2  0E04               	movlw	4
  1428  000AA4  6ED2               	movwf	4050,c	;volatile
  1429                           
  1430                           ;mcc.c: 127: OSCTUNE = 0x00;
  1431  000AA6  0E00               	movlw	0
  1432  000AA8  6E9B               	movwf	3995,c	;volatile
  1433  000AAA  0012               	return		;funcret
  1434  000AAC                     __end_of_OSCILLATOR_Initialize:
  1435                           	opt stack 0
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           prodh	equ	0xFF4
  1441                           prodl	equ	0xFF3
  1442                           intcon	equ	0xFF2
  1443                           intcon2	equ	0xFF1
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           indf2	equ	0xFDF
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _INTERRUPT_Initialize *****************
  1452 ;; Defined at:
  1453 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;		None               void
  1460 ;; Registers used:
  1461 ;;		None
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1467 ;;      Params:         0       0       0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    2
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_SYSTEM_Initialize
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text8
  1482  000AB6                     __ptext8:
  1483                           	opt stack 0
  1484  000AB6                     _INTERRUPT_Initialize:
  1485                           	opt stack 27
  1486                           
  1487                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1488                           
  1489                           ;incstack = 0
  1490  000AB6  9ED0               	bcf	4048,7,c	;volatile
  1491  000AB8  0012               	return		;funcret
  1492  000ABA                     __end_of_INTERRUPT_Initialize:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           intcon	equ	0xFF2
  1501                           intcon2	equ	0xFF1
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           indf2	equ	0xFDF
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _EUSART1_Initialize *****************
  1510 ;; Defined at:
  1511 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;		None               void
  1518 ;; Registers used:
  1519 ;;		wreg, status,2
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1525 ;;      Params:         0       0       0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    2
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_SYSTEM_Initialize
  1536 ;;		_sendString
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541  0009B4                     __ptext9:
  1542                           	opt stack 0
  1543  0009B4                     _EUSART1_Initialize:
  1544                           	opt stack 27
  1545                           
  1546                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1547                           
  1548                           ;incstack = 0
  1549  0009B4  9A9D               	bcf	3997,5,c	;volatile
  1550                           
  1551                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1552  0009B6  989D               	bcf	3997,4,c	;volatile
  1553                           
  1554                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1555  0009B8  0E08               	movlw	8
  1556  0009BA  6EB8               	movwf	4024,c	;volatile
  1557                           
  1558                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1559  0009BC  0E90               	movlw	144
  1560  0009BE  6EAB               	movwf	4011,c	;volatile
  1561                           
  1562                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1563  0009C0  0E24               	movlw	36
  1564  0009C2  6EAC               	movwf	4012,c	;volatile
  1565                           
  1566                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1567  0009C4  0ECF               	movlw	207
  1568  0009C6  6EAF               	movwf	4015,c	;volatile
  1569                           
  1570                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1571  0009C8  0E00               	movlw	0
  1572  0009CA  6EB0               	movwf	4016,c	;volatile
  1573                           
  1574                           ;eusart1.c: 100: eusart1TxHead = 0;
  1575  0009CC  0E00               	movlw	0
  1576  0009CE  6E24               	movwf	_eusart1TxHead,c
  1577                           
  1578                           ;eusart1.c: 101: eusart1TxTail = 0;
  1579  0009D0  0E00               	movlw	0
  1580  0009D2  6E25               	movwf	_eusart1TxTail,c
  1581                           
  1582                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1583  0009D4  0E08               	movlw	8
  1584  0009D6  6E3D               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1585                           
  1586                           ;eusart1.c: 104: eusart1RxHead = 0;
  1587  0009D8  0E00               	movlw	0
  1588  0009DA  6E22               	movwf	_eusart1RxHead,c
  1589                           
  1590                           ;eusart1.c: 105: eusart1RxTail = 0;
  1591  0009DC  0E00               	movlw	0
  1592  0009DE  6E23               	movwf	_eusart1RxTail,c
  1593                           
  1594                           ;eusart1.c: 106: eusart1RxCount = 0;
  1595  0009E0  0E00               	movlw	0
  1596  0009E2  6E21               	movwf	_eusart1RxCount,c	;volatile
  1597                           
  1598                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1599  0009E4  8A9D               	bsf	3997,5,c	;volatile
  1600  0009E6  0012               	return		;funcret
  1601  0009E8                     __end_of_EUSART1_Initialize:
  1602                           	opt stack 0
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           prodh	equ	0xFF4
  1608                           prodl	equ	0xFF3
  1609                           intcon	equ	0xFF2
  1610                           intcon2	equ	0xFF1
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           indf2	equ	0xFDF
  1614                           fsr2h	equ	0xFDA
  1615                           fsr2l	equ	0xFD9
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _EUSART1_Read *****************
  1619 ;; Defined at:
  1620 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  readValue       1   14[COMRAM] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      unsigned char 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1634 ;;      Params:         0       0       0       0       0       0       0
  1635 ;;      Locals:         1       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0
  1637 ;;      Totals:         1       0       0       0       0       0       0
  1638 ;;Total ram usage:        1 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    2
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;;		_getch
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text10
  1650  00097A                     __ptext10:
  1651                           	opt stack 0
  1652  00097A                     _EUSART1_Read:
  1653                           	opt stack 28
  1654                           
  1655                           ;eusart1.c: 114: uint8_t readValue = 0;
  1656                           
  1657                           ;incstack = 0
  1658  00097A  0E00               	movlw	0
  1659  00097C  6E34               	movwf	EUSART1_Read@readValue,c
  1660                           
  1661                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1662  00097E  D000               	goto	l1041
  1663  000980                     l1041:
  1664  000980  5021               	movf	_eusart1RxCount,w,c	;volatile
  1665  000982  B4D8               	btfsc	status,2,c
  1666  000984  D7FD               	goto	l1041
  1667                           
  1668                           ;eusart1.c: 118: }
  1669                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1670  000986  5023               	movf	_eusart1RxTail,w,c
  1671  000988  0D01               	mullw	1
  1672  00098A  0E11               	movlw	low _eusart1RxBuffer
  1673  00098C  24F3               	addwf	prodl,w,c
  1674  00098E  6ED9               	movwf	fsr2l,c
  1675  000990  0E00               	movlw	high _eusart1RxBuffer
  1676  000992  20F4               	addwfc	prodh,w,c
  1677  000994  6EDA               	movwf	fsr2h,c
  1678  000996  50DF               	movf	indf2,w,c
  1679  000998  6E34               	movwf	EUSART1_Read@readValue,c
  1680  00099A  2A23               	incf	_eusart1RxTail,f,c
  1681                           
  1682                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1683  00099C  0E07               	movlw	7
  1684  00099E  6423               	cpfsgt	_eusart1RxTail,c
  1685  0009A0  D003               	goto	l1051
  1686                           
  1687                           ;eusart1.c: 122: {
  1688                           ;eusart1.c: 123: eusart1RxTail = 0;
  1689  0009A2  0E00               	movlw	0
  1690  0009A4  6E23               	movwf	_eusart1RxTail,c
  1691  0009A6  D000               	goto	l1051
  1692  0009A8                     l1051:
  1693                           
  1694                           ;eusart1.c: 124: }
  1695                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1696  0009A8  9A9D               	bcf	3997,5,c	;volatile
  1697                           
  1698                           ;eusart1.c: 126: eusart1RxCount--;
  1699  0009AA  0621               	decf	_eusart1RxCount,f,c	;volatile
  1700                           
  1701                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1702  0009AC  8A9D               	bsf	3997,5,c	;volatile
  1703                           
  1704                           ;eusart1.c: 129: return readValue;
  1705  0009AE  5034               	movf	EUSART1_Read@readValue,w,c
  1706  0009B0  0012               	return	
  1707  0009B2  0012               	return		;funcret
  1708  0009B4                     __end_of_EUSART1_Read:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           prodh	equ	0xFF4
  1715                           prodl	equ	0xFF3
  1716                           intcon	equ	0xFF2
  1717                           intcon2	equ	0xFF1
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           indf2	equ	0xFDF
  1721                           fsr2h	equ	0xFDA
  1722                           fsr2l	equ	0xFD9
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _INTERRUPT_InterruptManager *****************
  1726 ;; Defined at:
  1727 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;		None               void
  1734 ;; Registers used:
  1735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1741 ;;      Params:         0       0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0
  1743 ;;      Temps:         14       0       0       0       0       0       0
  1744 ;;      Totals:        14       0       0       0       0       0       0
  1745 ;;Total ram usage:       14 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		_EUSART1_Receive_ISR
  1750 ;;		_EUSART1_Transmit_ISR
  1751 ;; This function is called by:
  1752 ;;		Interrupt level 2
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	intcode
  1757  000008                     __pintcode:
  1758                           	opt stack 0
  1759  000008                     _INTERRUPT_InterruptManager:
  1760                           	opt stack 26
  1761                           
  1762                           ;incstack = 0
  1763  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1764  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1765  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1766  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1767  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1768  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1769  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1770  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1771  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1772  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1773  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1774  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1775  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1776  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1777                           
  1778                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1779  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1780  000042  A89D               	btfss	3997,4,c	;volatile
  1781  000044  D005               	goto	i2l148
  1782  000046  A89E               	btfss	3998,4,c	;volatile
  1783  000048  D003               	goto	i2l148
  1784                           
  1785                           ;interrupt_manager.c: 61: {
  1786                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1787  00004A  ECF4  F004         	call	_EUSART1_Transmit_ISR	;wreg free
  1788                           
  1789                           ;interrupt_manager.c: 63: }
  1790  00004E  D008               	goto	i2l152
  1791  000050                     i2l148:
  1792                           
  1793                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1794  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1795  000052  AA9D               	btfss	3997,5,c	;volatile
  1796  000054  D005               	goto	i2l152
  1797  000056  AA9E               	btfss	3998,5,c	;volatile
  1798  000058  D003               	goto	i2l152
  1799                           
  1800                           ;interrupt_manager.c: 65: {
  1801                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1802  00005A  EC0D  F005         	call	_EUSART1_Receive_ISR	;wreg free
  1803                           
  1804                           ;interrupt_manager.c: 68: else
  1805                           ;interrupt_manager.c: 69: {
  1806                           
  1807                           ;interrupt_manager.c: 67: }
  1808  00005E  D000               	goto	i2l152
  1809  000060                     i2l152:
  1810  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1811  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1812  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1813  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1814  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1815  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1816  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1817  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1818  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1819  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1820  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1821  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1822  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1823  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1824  000098  0011               	retfie		f
  1825  00009A                     __end_of_INTERRUPT_InterruptManager:
  1826                           	opt stack 0
  1827                           pclatu	equ	0xFFB
  1828                           pclath	equ	0xFFA
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           prodh	equ	0xFF4
  1834                           prodl	equ	0xFF3
  1835                           intcon	equ	0xFF2
  1836                           intcon2	equ	0xFF1
  1837                           postinc0	equ	0xFEE
  1838                           fsr0h	equ	0xFEA
  1839                           fsr0l	equ	0xFE9
  1840                           wreg	equ	0xFE8
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           fsr2h	equ	0xFDA
  1845                           fsr2l	equ	0xFD9
  1846                           status	equ	0xFD8
  1847                           
  1848 ;; *************** function _EUSART1_Transmit_ISR *****************
  1849 ;; Defined at:
  1850 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;		None               void
  1857 ;; Registers used:
  1858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1864 ;;      Params:         0       0       0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_INTERRUPT_InterruptManager
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text12
  1878  0009E8                     __ptext12:
  1879                           	opt stack 0
  1880  0009E8                     _EUSART1_Transmit_ISR:
  1881                           	opt stack 26
  1882                           
  1883                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1884                           
  1885                           ;incstack = 0
  1886  0009E8  0E08               	movlw	8
  1887  0009EA  603D               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1888  0009EC  D013               	goto	i2l82
  1889                           
  1890                           ;eusart1.c: 170: {
  1891                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1892  0009EE  5025               	movf	_eusart1TxTail,w,c
  1893  0009F0  0D01               	mullw	1
  1894  0009F2  0E19               	movlw	low _eusart1TxBuffer
  1895  0009F4  24F3               	addwf	prodl,w,c
  1896  0009F6  6ED9               	movwf	fsr2l,c
  1897  0009F8  0E00               	movlw	high _eusart1TxBuffer
  1898  0009FA  20F4               	addwfc	prodh,w,c
  1899  0009FC  6EDA               	movwf	fsr2h,c
  1900  0009FE  50DF               	movf	indf2,w,c
  1901  000A00  6EAD               	movwf	4013,c	;volatile
  1902  000A02  2A25               	incf	_eusart1TxTail,f,c
  1903                           
  1904                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1905  000A04  0E07               	movlw	7
  1906  000A06  6425               	cpfsgt	_eusart1TxTail,c
  1907  000A08  D003               	goto	i2l1071
  1908                           
  1909                           ;eusart1.c: 173: {
  1910                           ;eusart1.c: 174: eusart1TxTail = 0;
  1911  000A0A  0E00               	movlw	0
  1912  000A0C  6E25               	movwf	_eusart1TxTail,c
  1913  000A0E  D000               	goto	i2l1071
  1914  000A10                     i2l1071:
  1915                           
  1916                           ;eusart1.c: 175: }
  1917                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1918  000A10  2A3D               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1919                           
  1920                           ;eusart1.c: 177: }
  1921  000A12  0012               	return	
  1922  000A14                     i2l82:
  1923                           
  1924                           ;eusart1.c: 178: else
  1925                           ;eusart1.c: 179: {
  1926                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1927  000A14  989D               	bcf	3997,4,c	;volatile
  1928  000A16  0012               	return	
  1929  000A18  0012               	return		;funcret
  1930  000A1A                     __end_of_EUSART1_Transmit_ISR:
  1931                           	opt stack 0
  1932                           pclatu	equ	0xFFB
  1933                           pclath	equ	0xFFA
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           prodh	equ	0xFF4
  1939                           prodl	equ	0xFF3
  1940                           intcon	equ	0xFF2
  1941                           intcon2	equ	0xFF1
  1942                           postinc0	equ	0xFEE
  1943                           fsr0h	equ	0xFEA
  1944                           fsr0l	equ	0xFE9
  1945                           wreg	equ	0xFE8
  1946                           fsr1h	equ	0xFE2
  1947                           fsr1l	equ	0xFE1
  1948                           indf2	equ	0xFDF
  1949                           fsr2h	equ	0xFDA
  1950                           fsr2l	equ	0xFD9
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _EUSART1_Receive_ISR *****************
  1954 ;; Defined at:
  1955 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;		None               void
  1962 ;; Registers used:
  1963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1969 ;;      Params:         0       0       0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_INTERRUPT_InterruptManager
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text13
  1983  000A1A                     __ptext13:
  1984                           	opt stack 0
  1985  000A1A                     _EUSART1_Receive_ISR:
  1986                           	opt stack 26
  1987                           
  1988                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1989                           
  1990                           ;incstack = 0
  1991  000A1A  A2AB               	btfss	4011,1,c	;volatile
  1992  000A1C  D003               	goto	i2l1077
  1993                           
  1994                           ;eusart1.c: 188: {
  1995                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1996  000A1E  98AB               	bcf	4011,4,c	;volatile
  1997                           
  1998                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1999  000A20  88AB               	bsf	4011,4,c	;volatile
  2000  000A22  D000               	goto	i2l1077
  2001  000A24                     i2l1077:
  2002                           
  2003                           ;eusart1.c: 193: }
  2004                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2005  000A24  5022               	movf	_eusart1RxHead,w,c
  2006  000A26  0D01               	mullw	1
  2007  000A28  0E11               	movlw	low _eusart1RxBuffer
  2008  000A2A  24F3               	addwf	prodl,w,c
  2009  000A2C  6ED9               	movwf	fsr2l,c
  2010  000A2E  0E00               	movlw	high _eusart1RxBuffer
  2011  000A30  20F4               	addwfc	prodh,w,c
  2012  000A32  6EDA               	movwf	fsr2h,c
  2013  000A34  CFAE FFDF          	movff	4014,indf2	;volatile
  2014  000A38  2A22               	incf	_eusart1RxHead,f,c
  2015                           
  2016                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2017  000A3A  0E07               	movlw	7
  2018  000A3C  6422               	cpfsgt	_eusart1RxHead,c
  2019  000A3E  D003               	goto	i2l1085
  2020                           
  2021                           ;eusart1.c: 198: {
  2022                           ;eusart1.c: 199: eusart1RxHead = 0;
  2023  000A40  0E00               	movlw	0
  2024  000A42  6E22               	movwf	_eusart1RxHead,c
  2025  000A44  D000               	goto	i2l1085
  2026  000A46                     i2l1085:
  2027                           
  2028                           ;eusart1.c: 200: }
  2029                           ;eusart1.c: 201: eusart1RxCount++;
  2030  000A46  2A21               	incf	_eusart1RxCount,f,c	;volatile
  2031  000A48  0012               	return		;funcret
  2032  000A4A                     __end_of_EUSART1_Receive_ISR:
  2033                           	opt stack 0
  2034                           pclatu	equ	0xFFB
  2035                           pclath	equ	0xFFA
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           prodh	equ	0xFF4
  2041                           prodl	equ	0xFF3
  2042                           intcon	equ	0xFF2
  2043                           intcon2	equ	0xFF1
  2044                           postinc0	equ	0xFEE
  2045                           fsr0h	equ	0xFEA
  2046                           fsr0l	equ	0xFE9
  2047                           wreg	equ	0xFE8
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           indf2	equ	0xFDF
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8
  2054                           pclatu	equ	0xFFB
  2055                           pclath	equ	0xFFA
  2056                           tblptru	equ	0xFF8
  2057                           tblptrh	equ	0xFF7
  2058                           tblptrl	equ	0xFF6
  2059                           tablat	equ	0xFF5
  2060                           prodh	equ	0xFF4
  2061                           prodl	equ	0xFF3
  2062                           intcon	equ	0xFF2
  2063                           intcon2	equ	0xFF1
  2064                           postinc0	equ	0xFEE
  2065                           fsr0h	equ	0xFEA
  2066                           fsr0l	equ	0xFE9
  2067                           wreg	equ	0xFE8
  2068                           fsr1h	equ	0xFE2
  2069                           fsr1l	equ	0xFE1
  2070                           indf2	equ	0xFDF
  2071                           fsr2h	equ	0xFDA
  2072                           fsr2l	equ	0xFD9
  2073                           status	equ	0xFD8
  2074                           
  2075                           	psect	rparam
  2076  0000                     pclatu	equ	0xFFB
  2077                           pclath	equ	0xFFA
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodh	equ	0xFF4
  2083                           prodl	equ	0xFF3
  2084                           intcon	equ	0xFF2
  2085                           intcon2	equ	0xFF1
  2086                           postinc0	equ	0xFEE
  2087                           fsr0h	equ	0xFEA
  2088                           fsr0l	equ	0xFE9
  2089                           wreg	equ	0xFE8
  2090                           fsr1h	equ	0xFE2
  2091                           fsr1l	equ	0xFE1
  2092                           indf2	equ	0xFDF
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _relayControl->_EUSART1_Write
    _printf->_putch
    _putch->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     324
                                             21 COMRAM     1     1      0
                       _EUSART1_Read
                      _EUSART1_Write
                  _SYSTEM_Initialize
                             _printf
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     144
                                             16 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      45
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _putch
       _EUSART1_Write
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      3D       1       64.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D       9        0.0%
DATA                 0      0      3D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri May 26 11:30:59 2017

           _eusart1TxBufferRemaining 003D                                   l70 094E  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l300 06C4  
                                l303 06C8                                  l312 06D4  
                                l321 06E0                                  l330 06EC  
                                l306 06CC                                  l242 0664  
                                l315 06D8                                  l251 0674  
                                l324 06E4                                  l333 06F0  
                                l309 06D0                                  l261 0688  
                                l253 0678                                  l245 0668  
                                l342 06FC                                  l318 06DC  
                                l351 0708                                  l327 06E8  
                                l271 069C                                  l263 068C  
                                l255 067C                                  l247 066C  
                                l239 0660                                  l360 0714  
                                l336 06F4                                  l345 0700  
                                l273 06A0                                  l265 0690  
                                l257 0680                                  l249 0670  
                                l370 0724                                  l354 070C  
                                l282 06AC                                  l363 0718  
                                l339 06F8                                  l291 06B8  
                                l267 0694                                  l259 0684  
                                l380 0738                                  l372 0728  
                                l348 0704                                  l276 06A4  
                                l357 0710                                  l285 06B0  
                                l269 0698                                  l390 074C  
                                l382 073C                                  l374 072C  
                                l366 071C                                  l294 06BC  
                                l279 06A8                                  l384 0740  
                                l376 0730                                  l368 0720  
                                l288 06B4                                  l297 06C0  
                                l386 0744                                  l378 0734  
                                l388 0748                                  l995 093E  
                       __CFG_CPB$OFF 000000                                  u110 062C  
                                u120 065E                                  u237 0646  
                       __CFG_CPD$OFF 000000                                  prod 000FF3  
                                wreg 000FE8                                 l1007 0972  
                               l1111 0750                                 l1103 062E  
                               l1041 0980                                 l1009 0976  
                               l1051 09A8                                 l1115 0758  
                               l1225 0A54                                 l1227 0A5C  
                               l1307 08E2                                 l1095 060A  
                               l1271 0888                                 l1097 0612  
                               l1281 089C                                 l1273 088C  
                               l1291 08B0                                 l1283 08A0  
                               l1275 0890                                 l1293 08B4  
                               l1285 08A4                                 l1277 0894  
                               l1269 0884                                 l1295 08B8  
                               l1287 08A8                                 l1279 0898  
                               l1297 08BC                                 l1289 08AC  
                               l1299 08C0                                 STR_1 0601  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l82 0A14  
                               _WPUB 000F61                        _EUSART1_Write 093A  
                               _main 0836                        ?_EUSART1_Read 0026  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 009A  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0AAC  
                              ?_main 0026                       __CFG_DEBUG$OFF 000000  
                              i2l152 0060                                i2l148 0050  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _TFNum 003C  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 09E8                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 0AAC  
                     ?_EUSART1_Write 0026                                tablat 000FF5  
                     ??_EUSART1_Read 0034                                status 000FD8  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 0A76           __end_of_EUSART1_Initialize 09E8  
                       __end_of_main 08F0          ?_INTERRUPT_InterruptManager 0026  
                             ??_main 003B                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0026                               _ANSELA 000F38  
                             ?_putch 0026                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               i2l1071 0A10  
                             i2l1085 0A46                               i2l1077 0A24  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                     __CFG_STVREN$ON 000000                               clear_0 0A7C  
                             _printf 0A4A                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      ??_EUSART1_Write 0034  
                    _eusart1RxBuffer 0011        __size_of_INTERRUPT_Initialize 0004  
                    _eusart1TxBuffer 0019                    _SYSTEM_Initialize 0A8C  
                         __accesstop 0060              __end_of__initialization 0A82  
                 ?_SYSTEM_Initialize 0026                        ___rparam_used 000001  
                     __pcstackCOMRAM 0026                  ??_SYSTEM_Initialize 0034  
                      __end_of_putch 0AB6                 __end_of_EUSART1_Read 09B4  
             ??_EUSART1_Transmit_ISR 0026          __end_of_EUSART1_Receive_ISR 0A4A  
                      ?_relayControl 0026            __end_of_SYSTEM_Initialize 0A9E  
                            ??_putch 0035                        _eusart1RxHead 0022  
                      _eusart1TxHead 0024                        _eusart1RxTail 0023  
                      _eusart1TxTail 0025                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 003C                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                              ?_printf 0036  
                            _OSCCON2 000FD2                       ??_relayControl 0035  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                         __psmallconst 0600  
                            __pcinit 0A76                              __ramtop 0600  
                            __ptext0 0836                              __ptext1 0606  
                            __ptext2 0A4A                              __ptext3 0AAC  
                            __ptext4 093A                              __ptext5 0A8C  
                            __ptext6 08F0                              __ptext7 0A9E  
                            __ptext8 0AB6                              __ptext9 09B4  
                    __size_of_printf 002C                _OSCILLATOR_Initialize 0A9E  
                 _EUSART1_Initialize 09B4             ??_PIN_MANAGER_Initialize 0034  
         __size_of_SYSTEM_Initialize 0012                 end_of_initialization 0A82  
                ?_EUSART1_Initialize 0026                        __Lmediumconst 0000  
                            printf@c 003A                              printf@f 0036  
                            postinc0 000FEE                __size_of_EUSART1_Read 003A  
               ??_EUSART1_Initialize 0034                  EUSART1_Write@txData 0034  
                         main@RxData 003B                         _EUSART1_Read 097A  
               __end_of_relayControl 0836         __end_of_INTERRUPT_Initialize 0ABA  
             ?_OSCILLATOR_Initialize 0026                       __end_of_printf 0A76  
                start_initialization 0A76      __size_of_PIN_MANAGER_Initialize 004A  
                        putch@txData 0035                __end_of_EUSART1_Write 097A  
                           ??_printf 0038                       _eusart1RxCount 0021  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                  relayControl@count 0037         __size_of_EUSART1_Receive_ISR 0030  
             _PIN_MANAGER_Initialize 08F0                            __pintcode 0008  
       ??_INTERRUPT_InterruptManager 0026                     __CFG_PRICLKEN$ON 000000  
                        __smallconst 0600                             _BAUDCON1 000FB8  
                     __size_of_putch 000A                 _INTERRUPT_Initialize 0AB6  
                           _LATAbits 000F89                             _LATCbits 000F8B  
                           _LATDbits 000F8C                             _LATEbits 000F8D  
              __size_of_relayControl 0230                             _PIE1bits 000F9D  
__size_of_INTERRUPT_InterruptManager 0092                             _PIR1bits 000F9E  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                       _relayControl 0606                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0026                EUSART1_Read@readValue 0034  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0034          __size_of_EUSART1_Initialize 0034  
                   relayControl@data 0036                             __ptext10 097A  
                           __ptext12 09E8                             __ptext13 0A1A  
                      __size_of_main 00BA                             _site0_IL 0001  
 __end_of_INTERRUPT_InterruptManager 009A           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 0A1A                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 0034                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0026              ?_PIN_MANAGER_Initialize 0026  
                         _RCSTA1bits 000FAB         __end_of_EUSART1_Transmit_ISR 0A1A  
                           printf@ap 0038               __size_of_EUSART1_Write 0040  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0026  
     __end_of_PIN_MANAGER_Initialize 093A                    __CFG_FOSC$INTIO67 000000  
