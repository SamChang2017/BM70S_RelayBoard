

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Jul 24 17:43:30 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	nvCOMRAM
    25  00003A                     __pnvCOMRAM:
    26                           	opt stack 0
    27  00003A                     _TFNum:
    28                           	opt stack 0
    29  00003A                     	ds	1
    30  00003B                     _eusart1TxBufferRemaining:
    31                           	opt stack 0
    32  00003B                     	ds	1
    33  0000                     _ANSELA	set	3896
    34  0000                     _ANSELB	set	3897
    35  0000                     _ANSELC	set	3898
    36  0000                     _ANSELD	set	3899
    37  0000                     _ANSELE	set	3900
    38  0000                     _BAUDCON1	set	4024
    39  0000                     _INTCON2bits	set	4081
    40  0000                     _INTCONbits	set	4082
    41  0000                     _LATA	set	3977
    42  0000                     _LATAbits	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATBbits	set	3978
    45  0000                     _LATC	set	3979
    46  0000                     _LATCbits	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _LATDbits	set	3980
    49  0000                     _LATE	set	3981
    50  0000                     _LATEbits	set	3981
    51  0000                     _OSCCON	set	4051
    52  0000                     _OSCCON2	set	4050
    53  0000                     _OSCTUNE	set	3995
    54  0000                     _PIE1bits	set	3997
    55  0000                     _PIR1bits	set	3998
    56  0000                     _RCONbits	set	4048
    57  0000                     _RCREG1	set	4014
    58  0000                     _RCSTA1	set	4011
    59  0000                     _RCSTA1bits	set	4011
    60  0000                     _SPBRG1	set	4015
    61  0000                     _SPBRGH1	set	4016
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISE	set	3990
    67  0000                     _TXREG1	set	4013
    68  0000                     _TXSTA1	set	4012
    69  0000                     _WPUB	set	3937
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  0004FC                     __pcinit:
    75                           	opt stack 0
    76  0004FC                     start_initialization:
    77                           	opt stack 0
    78  0004FC                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (37 bytes)
    82  0004FC  EE00  F001         	lfsr	0,__pbssCOMRAM
    83  000500  0E25               	movlw	37
    84  000502                     clear_0:
    85  000502  6AEE               	clrf	postinc0,c
    86  000504  06E8               	decf	wreg,f,c
    87  000506  E1FD               	bnz	clear_0
    88  000508                     end_of_initialization:
    89                           	opt stack 0
    90  000508                     __end_of__initialization:
    91                           	opt stack 0
    92  000508  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  00050A  6EF8               	movwf	tblptru,c
    94  00050C  0100               	movlb	0
    95  00050E  EF7D  F001         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000001                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000001                     _site0_IL:
   104                           	opt stack 0
   105  000001                     	ds	16
   106  000011                     _eusart1RxBuffer:
   107                           	opt stack 0
   108  000011                     	ds	8
   109  000019                     _eusart1TxBuffer:
   110                           	opt stack 0
   111  000019                     	ds	8
   112  000021                     _eusart1RxCount:
   113                           	opt stack 0
   114  000021                     	ds	1
   115  000022                     _eusart1RxHead:
   116                           	opt stack 0
   117  000022                     	ds	1
   118  000023                     _eusart1RxTail:
   119                           	opt stack 0
   120  000023                     	ds	1
   121  000024                     _eusart1TxHead:
   122                           	opt stack 0
   123  000024                     	ds	1
   124  000025                     _eusart1TxTail:
   125                           	opt stack 0
   126  000025                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	cstackCOMRAM
   132  000026                     __pcstackCOMRAM:
   133                           	opt stack 0
   134  000026                     ??_INTERRUPT_InterruptManager:
   135  000026                     
   136                           ; 1 bytes @ 0x0
   137  000026                     	ds	14
   138  000034                     EUSART1_Read@readValue:
   139                           	opt stack 0
   140  000034                     EUSART1_Write@txData:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0xE
   144  000034                     	ds	1
   145  000035                     ??_relayControl:
   146                           
   147                           ; 0 bytes @ 0xF
   148  000035                     	ds	1
   149  000036                     relayControl@data:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x10
   153  000036                     	ds	1
   154  000037                     relayControl@count:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x11
   158  000037                     	ds	2
   159  000039                     main@RxData:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x13
   163  000039                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 26 in file "main.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;  RxData          1   19[COMRAM] unsigned char 
   178 ;; Return value:  Size  Location     Type
   179 ;;		None               void
   180 ;; Registers used:
   181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   187 ;;      Params:         0       0       0       0       0       0       0
   188 ;;      Locals:         1       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0
   190 ;;      Totals:         1       0       0       0       0       0       0
   191 ;;Total ram usage:        1 bytes
   192 ;; Hardware stack levels required when called:    4
   193 ;; This function calls:
   194 ;;		_EUSART1_Read
   195 ;;		_SYSTEM_Initialize
   196 ;;		_relayControl
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  0002FA                     __ptext0:
   204                           	opt stack 0
   205  0002FA                     _main:
   206                           	opt stack 27
   207                           
   208                           ;main.c: 29: SYSTEM_Initialize();
   209                           
   210                           ;incstack = 0
   211  0002FA  EC89  F002         	call	_SYSTEM_Initialize	;wreg free
   212                           
   213                           ;main.c: 31: (INTCONbits.GIE = 1);
   214  0002FE  8EF2               	bsf	intcon,7,c	;volatile
   215                           
   216                           ;main.c: 32: (INTCONbits.PEIE = 1);
   217  000300  8CF2               	bsf	intcon,6,c	;volatile
   218                           
   219                           ;main.c: 34: char RxData;
   220                           ;main.c: 36: TFNum = '5';
   221  000302  0E35               	movlw	53
   222  000304  6E3A               	movwf	_TFNum,c
   223                           
   224                           ;main.c: 37: site0_IL[0] = '3';
   225  000306  0E33               	movlw	51
   226  000308  6E01               	movwf	_site0_IL,c
   227                           
   228                           ;main.c: 38: site0_IL[1] = '.';
   229  00030A  0E2E               	movlw	46
   230  00030C  6E02               	movwf	_site0_IL+1,c
   231                           
   232                           ;main.c: 39: site0_IL[2] = '9';
   233  00030E  0E39               	movlw	57
   234  000310  6E03               	movwf	_site0_IL+2,c
   235                           
   236                           ;main.c: 40: site0_IL[3] = '4';
   237  000312  0E34               	movlw	52
   238  000314  6E04               	movwf	_site0_IL+3,c
   239                           
   240                           ;main.c: 42: site0_IL[4] = '3';
   241  000316  0E33               	movlw	51
   242  000318  6E05               	movwf	_site0_IL+4,c
   243                           
   244                           ;main.c: 43: site0_IL[5] = '7';
   245  00031A  0E37               	movlw	55
   246  00031C  6E06               	movwf	_site0_IL+5,c
   247                           
   248                           ;main.c: 44: site0_IL[6] = '.';
   249  00031E  0E2E               	movlw	46
   250  000320  6E07               	movwf	_site0_IL+6,c
   251                           
   252                           ;main.c: 45: site0_IL[7] = '9';
   253  000322  0E39               	movlw	57
   254  000324  6E08               	movwf	_site0_IL+7,c
   255                           
   256                           ;main.c: 47: site0_IL[8] = '1';
   257  000326  0E31               	movlw	49
   258  000328  6E09               	movwf	_site0_IL+8,c
   259                           
   260                           ;main.c: 48: site0_IL[9] = '5';
   261  00032A  0E35               	movlw	53
   262  00032C  6E0A               	movwf	_site0_IL+9,c
   263                           
   264                           ;main.c: 49: site0_IL[10] = '.';
   265  00032E  0E2E               	movlw	46
   266  000330  6E0B               	movwf	_site0_IL+10,c
   267                           
   268                           ;main.c: 50: site0_IL[11] = '4';
   269  000332  0E34               	movlw	52
   270  000334  6E0C               	movwf	_site0_IL+11,c
   271                           
   272                           ;main.c: 52: site0_IL[12] = '5';
   273  000336  0E35               	movlw	53
   274  000338  6E0D               	movwf	_site0_IL+12,c
   275                           
   276                           ;main.c: 53: site0_IL[13] = '.';
   277  00033A  0E2E               	movlw	46
   278  00033C  6E0E               	movwf	_site0_IL+13,c
   279                           
   280                           ;main.c: 54: site0_IL[14] = '8';
   281  00033E  0E38               	movlw	56
   282  000340  6E0F               	movwf	_site0_IL+14,c
   283                           
   284                           ;main.c: 55: site0_IL[15] = '7';
   285  000342  0E37               	movlw	55
   286  000344  6E10               	movwf	_site0_IL+15,c
   287  000346  D000               	goto	l1165
   288  000348                     l1165:
   289  000348  9089               	bcf	3977,0,c	;volatile
   290  00034A  D000               	goto	l1167
   291  00034C                     l1167:
   292  00034C  9289               	bcf	3977,1,c	;volatile
   293  00034E  D000               	goto	l1169
   294  000350                     l1169:
   295  000350  9489               	bcf	3977,2,c	;volatile
   296  000352  D000               	goto	l1171
   297  000354                     l1171:
   298  000354  9689               	bcf	3977,3,c	;volatile
   299  000356  D000               	goto	l1173
   300  000358                     l1173:
   301  000358  9889               	bcf	3977,4,c	;volatile
   302  00035A  D000               	goto	l1175
   303  00035C                     l1175:
   304  00035C  9A89               	bcf	3977,5,c	;volatile
   305  00035E  D000               	goto	l1177
   306  000360                     l1177:
   307  000360  908D               	bcf	3981,0,c	;volatile
   308  000362  D000               	goto	l1179
   309  000364                     l1179:
   310  000364  928D               	bcf	3981,1,c	;volatile
   311  000366  D000               	goto	l1181
   312  000368                     l1181:
   313  000368  948D               	bcf	3981,2,c	;volatile
   314  00036A  D000               	goto	l1183
   315  00036C                     l1183:
   316  00036C  9C89               	bcf	3977,6,c	;volatile
   317  00036E  D000               	goto	l1185
   318  000370                     l1185:
   319  000370  908B               	bcf	3979,0,c	;volatile
   320  000372  D000               	goto	l1187
   321  000374                     l1187:
   322  000374  928B               	bcf	3979,1,c	;volatile
   323  000376  D000               	goto	l1189
   324  000378                     l1189:
   325  000378  948B               	bcf	3979,2,c	;volatile
   326  00037A  D000               	goto	l1191
   327  00037C                     l1191:
   328  00037C  908C               	bcf	3980,0,c	;volatile
   329  00037E  D000               	goto	l1193
   330  000380                     l1193:
   331  000380  928C               	bcf	3980,1,c	;volatile
   332                           
   333                           ;main.c: 75: {
   334                           ;main.c: 84: while((eusart1RxCount)){
   335                           
   336                           ;main.c: 74: while (1)
   337  000382  D007               	goto	l1197
   338  000384                     l1195:
   339                           
   340                           ;main.c: 86: RxData = EUSART1_Read();
   341  000384  EC16  F002         	call	_EUSART1_Read	;wreg free
   342  000388  6E39               	movwf	main@RxData,c
   343                           
   344                           ;main.c: 103: relayControl(RxData);
   345  00038A  5039               	movf	main@RxData,w,c
   346  00038C  EC4F  F000         	call	_relayControl
   347  000390  D000               	goto	l1197
   348  000392                     l1197:
   349  000392  5021               	movf	_eusart1RxCount,w,c	;volatile
   350  000394  B4D8               	btfsc	status,2,c
   351  000396  D7FD               	goto	l1197
   352  000398  D7F5               	goto	l1195
   353                           
   354                           ;main.c: 104: };
   355  00039A  D7FB               	goto	l1197
   356  00039C  EF4D  F000         	goto	start
   357  0003A0                     __end_of_main:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           intcon	equ	0xFF2
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           status	equ	0xFD8
   364                           
   365 ;; *************** function _relayControl *****************
   366 ;; Defined at:
   367 ;;		line 120 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  data            1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  data            1   16[COMRAM] unsigned char 
   372 ;;  count           2   17[COMRAM] int 
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         3       0       0       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		_EUSART1_Write
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  00009E                     __ptext1:
   398                           	opt stack 0
   399  00009E                     _relayControl:
   400                           	opt stack 27
   401                           
   402                           ;incstack = 0
   403                           ;relayControl@data stored from wreg
   404  00009E  6E36               	movwf	relayControl@data,c
   405                           
   406                           ;main.c: 121: switch (data){
   407  0000A0  D0B7               	goto	l1103
   408  0000A2                     l1083:
   409                           
   410                           ;main.c: 123: EUSART1_Write(TFNum);
   411  0000A2  503A               	movf	_TFNum,w,c
   412  0000A4  ECF6  F001         	call	_EUSART1_Write
   413                           
   414                           ;main.c: 124: break;
   415  0000A8  0012               	return	
   416  0000AA                     l1085:
   417                           
   418                           ;main.c: 126: for (int count=0; count<16; count++){
   419  0000AA  0E00               	movlw	0
   420  0000AC  6E38               	movwf	relayControl@count+1,c
   421  0000AE  0E00               	movlw	0
   422  0000B0  6E37               	movwf	relayControl@count,c
   423  0000B2  BE38               	btfsc	relayControl@count+1,7,c
   424  0000B4  D008               	goto	l1091
   425  0000B6  5038               	movf	relayControl@count+1,w,c
   426  0000B8  E105               	bnz	u100
   427  0000BA  0E10               	movlw	16
   428  0000BC  5C37               	subwf	relayControl@count,w,c
   429  0000BE  B0D8               	btfsc	status,0,c
   430  0000C0  0012               	return	
   431  0000C2  D001               	goto	l1091
   432  0000C4                     u100:
   433  0000C4  0012               	return	
   434  0000C6                     l1091:
   435                           
   436                           ;main.c: 127: EUSART1_Write(site0_IL[count]);
   437  0000C6  0E01               	movlw	low _site0_IL
   438  0000C8  2437               	addwf	relayControl@count,w,c
   439  0000CA  6ED9               	movwf	fsr2l,c
   440  0000CC  0E00               	movlw	high _site0_IL
   441  0000CE  2038               	addwfc	relayControl@count+1,w,c
   442  0000D0  6EDA               	movwf	fsr2h,c
   443  0000D2  50DF               	movf	indf2,w,c
   444  0000D4  ECF6  F001         	call	_EUSART1_Write
   445                           
   446                           ;main.c: 128: _delay((unsigned long)((25)*(8000000/4000.0)));
   447  0000D8  0E41               	movlw	65
   448  0000DA  6E35               	movwf	??_relayControl& (0+255),c
   449  0000DC  0EEE               	movlw	238
   450  0000DE                     u207:
   451  0000DE  2EE8               	decfsz	wreg,f,c
   452  0000E0  D7FE               	goto	u207
   453  0000E2  2E35               	decfsz	??_relayControl& (0+255),f,c
   454  0000E4  D7FC               	goto	u207
   455  0000E6  D000               	nop2	
   456  0000E8  4A37               	infsnz	relayControl@count,f,c
   457  0000EA  2A38               	incf	relayControl@count+1,f,c
   458  0000EC  BE38               	btfsc	relayControl@count+1,7,c
   459  0000EE  D7EB               	goto	l1091
   460  0000F0  5038               	movf	relayControl@count+1,w,c
   461  0000F2  E101               	bnz	u110
   462  0000F4  D7E2               	goto	L1
   463  0000F6                     u110:
   464                           
   465                           ;main.c: 129: }
   466                           ;main.c: 130: break;
   467  0000F6  0012               	return	
   468  0000F8                     l237:
   469  0000F8  908C               	bcf	3980,0,c	;volatile
   470                           
   471                           ;main.c: 133: break;
   472  0000FA  0012               	return	
   473  0000FC                     l240:
   474  0000FC  808C               	bsf	3980,0,c	;volatile
   475                           
   476                           ;main.c: 136: break;
   477  0000FE  0012               	return	
   478  000100                     l243:
   479  000100  9089               	bcf	3977,0,c	;volatile
   480  000102  D000               	goto	l245
   481  000104                     l245:
   482  000104  9289               	bcf	3977,1,c	;volatile
   483  000106  D000               	goto	l247
   484  000108                     l247:
   485  000108  9489               	bcf	3977,2,c	;volatile
   486  00010A  D000               	goto	l249
   487  00010C                     l249:
   488  00010C  9689               	bcf	3977,3,c	;volatile
   489  00010E  D000               	goto	l251
   490  000110                     l251:
   491  000110  9889               	bcf	3977,4,c	;volatile
   492  000112  D000               	goto	l253
   493  000114                     l253:
   494  000114  9A89               	bcf	3977,5,c	;volatile
   495  000116  D000               	goto	l255
   496  000118                     l255:
   497  000118  908D               	bcf	3981,0,c	;volatile
   498  00011A  D000               	goto	l257
   499  00011C                     l257:
   500  00011C  928D               	bcf	3981,1,c	;volatile
   501  00011E  D000               	goto	l259
   502  000120                     l259:
   503  000120  948D               	bcf	3981,2,c	;volatile
   504  000122  D000               	goto	l261
   505  000124                     l261:
   506  000124  9C89               	bcf	3977,6,c	;volatile
   507  000126  D000               	goto	l263
   508  000128                     l263:
   509  000128  908B               	bcf	3979,0,c	;volatile
   510  00012A  D000               	goto	l265
   511  00012C                     l265:
   512  00012C  928B               	bcf	3979,1,c	;volatile
   513  00012E  D000               	goto	l267
   514  000130                     l267:
   515  000130  948B               	bcf	3979,2,c	;volatile
   516  000132  D000               	goto	l269
   517  000134                     l269:
   518  000134  908C               	bcf	3980,0,c	;volatile
   519  000136  D000               	goto	l271
   520  000138                     l271:
   521  000138  928C               	bcf	3980,1,c	;volatile
   522  00013A  D000               	goto	l273
   523  00013C                     l273:
   524  00013C  9C8A               	bcf	3978,6,c	;volatile
   525  00013E  D000               	goto	l275
   526  000140                     l275:
   527  000140  9E8A               	bcf	3978,7,c	;volatile
   528                           
   529                           ;main.c: 156: break;
   530  000142  0012               	return	
   531  000144                     l278:
   532  000144  9089               	bcf	3977,0,c	;volatile
   533                           
   534                           ;main.c: 159: break;
   535  000146  0012               	return	
   536  000148                     l281:
   537  000148  8089               	bsf	3977,0,c	;volatile
   538                           
   539                           ;main.c: 162: break;
   540  00014A  0012               	return	
   541  00014C                     l284:
   542  00014C  9289               	bcf	3977,1,c	;volatile
   543                           
   544                           ;main.c: 167: break;
   545  00014E  0012               	return	
   546  000150                     l287:
   547  000150  8289               	bsf	3977,1,c	;volatile
   548                           
   549                           ;main.c: 170: break;
   550  000152  0012               	return	
   551  000154                     l290:
   552  000154  9C8A               	bcf	3978,6,c	;volatile
   553                           
   554                           ;main.c: 173: break;
   555  000156  0012               	return	
   556  000158                     l293:
   557  000158  8C8A               	bsf	3978,6,c	;volatile
   558                           
   559                           ;main.c: 176: break;
   560  00015A  0012               	return	
   561  00015C                     l296:
   562  00015C  9489               	bcf	3977,2,c	;volatile
   563                           
   564                           ;main.c: 180: break;
   565  00015E  0012               	return	
   566  000160                     l299:
   567  000160  8489               	bsf	3977,2,c	;volatile
   568                           
   569                           ;main.c: 183: break;
   570  000162  0012               	return	
   571  000164                     l302:
   572  000164  9689               	bcf	3977,3,c	;volatile
   573                           
   574                           ;main.c: 186: break;
   575  000166  0012               	return	
   576  000168                     l305:
   577  000168  8689               	bsf	3977,3,c	;volatile
   578                           
   579                           ;main.c: 189: break;
   580  00016A  0012               	return	
   581  00016C                     l308:
   582  00016C  9889               	bcf	3977,4,c	;volatile
   583                           
   584                           ;main.c: 192: break;
   585  00016E  0012               	return	
   586  000170                     l311:
   587  000170  8889               	bsf	3977,4,c	;volatile
   588                           
   589                           ;main.c: 195: break;
   590  000172  0012               	return	
   591  000174                     l314:
   592  000174  9A89               	bcf	3977,5,c	;volatile
   593                           
   594                           ;main.c: 198: break;
   595  000176  0012               	return	
   596  000178                     l317:
   597  000178  8A89               	bsf	3977,5,c	;volatile
   598                           
   599                           ;main.c: 201: break;
   600  00017A  0012               	return	
   601  00017C                     l320:
   602  00017C  908D               	bcf	3981,0,c	;volatile
   603                           
   604                           ;main.c: 205: break;
   605  00017E  0012               	return	
   606  000180                     l323:
   607  000180  808D               	bsf	3981,0,c	;volatile
   608                           
   609                           ;main.c: 208: break;
   610  000182  0012               	return	
   611  000184                     l326:
   612  000184  928D               	bcf	3981,1,c	;volatile
   613                           
   614                           ;main.c: 211: break;
   615  000186  0012               	return	
   616  000188                     l329:
   617  000188  828D               	bsf	3981,1,c	;volatile
   618                           
   619                           ;main.c: 214: break;
   620  00018A  0012               	return	
   621  00018C                     l332:
   622  00018C  948D               	bcf	3981,2,c	;volatile
   623                           
   624                           ;main.c: 217: break;
   625  00018E  0012               	return	
   626  000190                     l335:
   627  000190  848D               	bsf	3981,2,c	;volatile
   628                           
   629                           ;main.c: 220: break;
   630  000192  0012               	return	
   631  000194                     l338:
   632  000194  9C89               	bcf	3977,6,c	;volatile
   633                           
   634                           ;main.c: 223: break;
   635  000196  0012               	return	
   636  000198                     l341:
   637  000198  8C89               	bsf	3977,6,c	;volatile
   638                           
   639                           ;main.c: 226: break;
   640  00019A  0012               	return	
   641  00019C                     l344:
   642  00019C  908B               	bcf	3979,0,c	;volatile
   643                           
   644                           ;main.c: 229: break;
   645  00019E  0012               	return	
   646  0001A0                     l347:
   647  0001A0  808B               	bsf	3979,0,c	;volatile
   648                           
   649                           ;main.c: 232: break;
   650  0001A2  0012               	return	
   651  0001A4                     l350:
   652  0001A4  928B               	bcf	3979,1,c	;volatile
   653                           
   654                           ;main.c: 235: break;
   655  0001A6  0012               	return	
   656  0001A8                     l353:
   657  0001A8  828B               	bsf	3979,1,c	;volatile
   658                           
   659                           ;main.c: 238: break;
   660  0001AA  0012               	return	
   661  0001AC                     l356:
   662  0001AC  948B               	bcf	3979,2,c	;volatile
   663                           
   664                           ;main.c: 241: break;
   665  0001AE  0012               	return	
   666  0001B0                     l359:
   667  0001B0  848B               	bsf	3979,2,c	;volatile
   668                           
   669                           ;main.c: 244: break;
   670  0001B2  0012               	return	
   671  0001B4                     l362:
   672  0001B4  908C               	bcf	3980,0,c	;volatile
   673                           
   674                           ;main.c: 247: break;
   675  0001B6  0012               	return	
   676  0001B8                     l365:
   677  0001B8  808C               	bsf	3980,0,c	;volatile
   678                           
   679                           ;main.c: 250: break;
   680  0001BA  0012               	return	
   681  0001BC                     l368:
   682  0001BC  9E8A               	bcf	3978,7,c	;volatile
   683                           
   684                           ;main.c: 253: break;
   685  0001BE  0012               	return	
   686  0001C0                     l371:
   687  0001C0  8E8A               	bsf	3978,7,c	;volatile
   688                           
   689                           ;main.c: 256: break;
   690  0001C2  0012               	return	
   691  0001C4                     l374:
   692  0001C4  9089               	bcf	3977,0,c	;volatile
   693  0001C6  D000               	goto	l376
   694  0001C8                     l376:
   695  0001C8  9289               	bcf	3977,1,c	;volatile
   696  0001CA  D000               	goto	l378
   697  0001CC                     l378:
   698  0001CC  9489               	bcf	3977,2,c	;volatile
   699  0001CE  D000               	goto	l380
   700  0001D0                     l380:
   701  0001D0  9689               	bcf	3977,3,c	;volatile
   702  0001D2  D000               	goto	l382
   703  0001D4                     l382:
   704  0001D4  9889               	bcf	3977,4,c	;volatile
   705  0001D6  D000               	goto	l384
   706  0001D8                     l384:
   707  0001D8  9A89               	bcf	3977,5,c	;volatile
   708  0001DA  D000               	goto	l386
   709  0001DC                     l386:
   710  0001DC  908D               	bcf	3981,0,c	;volatile
   711  0001DE  D000               	goto	l388
   712  0001E0                     l388:
   713  0001E0  928D               	bcf	3981,1,c	;volatile
   714  0001E2  D000               	goto	l390
   715  0001E4                     l390:
   716  0001E4  948D               	bcf	3981,2,c	;volatile
   717  0001E6  D000               	goto	l392
   718  0001E8                     l392:
   719  0001E8  9C89               	bcf	3977,6,c	;volatile
   720  0001EA  D000               	goto	l394
   721  0001EC                     l394:
   722  0001EC  908B               	bcf	3979,0,c	;volatile
   723  0001EE  D000               	goto	l396
   724  0001F0                     l396:
   725  0001F0  928B               	bcf	3979,1,c	;volatile
   726  0001F2  D000               	goto	l398
   727  0001F4                     l398:
   728  0001F4  948B               	bcf	3979,2,c	;volatile
   729  0001F6  D000               	goto	l400
   730  0001F8                     l400:
   731  0001F8  908C               	bcf	3980,0,c	;volatile
   732  0001FA  D000               	goto	l402
   733  0001FC                     l402:
   734  0001FC  928C               	bcf	3980,1,c	;volatile
   735  0001FE  D000               	goto	l404
   736  000200                     l404:
   737  000200  9C8A               	bcf	3978,6,c	;volatile
   738  000202  D000               	goto	l406
   739  000204                     l406:
   740  000204  9E8A               	bcf	3978,7,c	;volatile
   741                           
   742                           ;main.c: 275: break;
   743  000206  0012               	return	
   744  000208                     l1099:
   745                           
   746                           ;main.c: 277: EUSART1_Write('U');
   747  000208  0E55               	movlw	85
   748  00020A  ECF6  F001         	call	_EUSART1_Write
   749                           
   750                           ;main.c: 279: }
   751                           
   752                           ;main.c: 278: break;
   753  00020E  0012               	return	
   754  000210                     l1103:
   755  000210  5036               	movf	relayControl@data,w,c
   756                           
   757                           ; Switch size 1, requested type "space"
   758                           ; Number of cases is 38, Range of values is 2 to 120
   759                           ; switch strategies available:
   760                           ; Name         Instructions Cycles
   761                           ; simple_byte          115    58 (average)
   762                           ;	Chosen strategy is simple_byte
   763  000212  0A02               	xorlw	2	; case 2
   764  000214  B4D8               	btfsc	status,2,c
   765  000216  D796               	goto	l278
   766  000218  0A06               	xorlw	6	; case 4
   767  00021A  B4D8               	btfsc	status,2,c
   768  00021C  D797               	goto	l284
   769  00021E  0A01               	xorlw	1	; case 5
   770  000220  B4D8               	btfsc	status,2,c
   771  000222  D798               	goto	l290
   772  000224  0A03               	xorlw	3	; case 6
   773  000226  B4D8               	btfsc	status,2,c
   774  000228  D799               	goto	l296
   775  00022A  0A0E               	xorlw	14	; case 8
   776  00022C  B4D8               	btfsc	status,2,c
   777  00022E  D79A               	goto	l302
   778  000230  0A02               	xorlw	2	; case 10
   779  000232  B4D8               	btfsc	status,2,c
   780  000234  D79B               	goto	l308
   781  000236  0A06               	xorlw	6	; case 12
   782  000238  B4D8               	btfsc	status,2,c
   783  00023A  D79C               	goto	l314
   784  00023C  0A02               	xorlw	2	; case 14
   785  00023E  B4D8               	btfsc	status,2,c
   786  000240  D79D               	goto	l320
   787  000242  0A1E               	xorlw	30	; case 16
   788  000244  B4D8               	btfsc	status,2,c
   789  000246  D79E               	goto	l326
   790  000248  0A02               	xorlw	2	; case 18
   791  00024A  B4D8               	btfsc	status,2,c
   792  00024C  D79F               	goto	l332
   793  00024E  0A06               	xorlw	6	; case 20
   794  000250  B4D8               	btfsc	status,2,c
   795  000252  D7A0               	goto	l338
   796  000254  0A02               	xorlw	2	; case 22
   797  000256  B4D8               	btfsc	status,2,c
   798  000258  D7A1               	goto	l344
   799  00025A  0A0E               	xorlw	14	; case 24
   800  00025C  B4D8               	btfsc	status,2,c
   801  00025E  D7A2               	goto	l350
   802  000260  0A02               	xorlw	2	; case 26
   803  000262  B4D8               	btfsc	status,2,c
   804  000264  D7A3               	goto	l356
   805  000266  0A06               	xorlw	6	; case 28
   806  000268  B4D8               	btfsc	status,2,c
   807  00026A  D7A4               	goto	l362
   808  00026C  0A02               	xorlw	2	; case 30
   809  00026E  B4D8               	btfsc	status,2,c
   810  000270  D7A5               	goto	l368
   811  000272  0A3C               	xorlw	60	; case 34
   812  000274  B4D8               	btfsc	status,2,c
   813  000276  D768               	goto	l281
   814  000278  0A06               	xorlw	6	; case 36
   815  00027A  B4D8               	btfsc	status,2,c
   816  00027C  D769               	goto	l287
   817  00027E  0A01               	xorlw	1	; case 37
   818  000280  B4D8               	btfsc	status,2,c
   819  000282  D76A               	goto	l293
   820  000284  0A03               	xorlw	3	; case 38
   821  000286  B4D8               	btfsc	status,2,c
   822  000288  D76B               	goto	l299
   823  00028A  0A0E               	xorlw	14	; case 40
   824  00028C  B4D8               	btfsc	status,2,c
   825  00028E  D76C               	goto	l305
   826  000290  0A02               	xorlw	2	; case 42
   827  000292  B4D8               	btfsc	status,2,c
   828  000294  D76D               	goto	l311
   829  000296  0A06               	xorlw	6	; case 44
   830  000298  B4D8               	btfsc	status,2,c
   831  00029A  D76E               	goto	l317
   832  00029C  0A02               	xorlw	2	; case 46
   833  00029E  B4D8               	btfsc	status,2,c
   834  0002A0  D76F               	goto	l323
   835  0002A2  0A1E               	xorlw	30	; case 48
   836  0002A4  B4D8               	btfsc	status,2,c
   837  0002A6  D770               	goto	l329
   838  0002A8  0A02               	xorlw	2	; case 50
   839  0002AA  B4D8               	btfsc	status,2,c
   840  0002AC  D771               	goto	l335
   841  0002AE  0A06               	xorlw	6	; case 52
   842  0002B0  B4D8               	btfsc	status,2,c
   843  0002B2  D772               	goto	l341
   844  0002B4  0A02               	xorlw	2	; case 54
   845  0002B6  B4D8               	btfsc	status,2,c
   846  0002B8  D773               	goto	l347
   847  0002BA  0A0E               	xorlw	14	; case 56
   848  0002BC  B4D8               	btfsc	status,2,c
   849  0002BE  D774               	goto	l353
   850  0002C0  0A02               	xorlw	2	; case 58
   851  0002C2  B4D8               	btfsc	status,2,c
   852  0002C4  D775               	goto	l359
   853  0002C6  0A06               	xorlw	6	; case 60
   854  0002C8  B4D8               	btfsc	status,2,c
   855  0002CA  D776               	goto	l365
   856  0002CC  0A02               	xorlw	2	; case 62
   857  0002CE  B4D8               	btfsc	status,2,c
   858  0002D0  D777               	goto	l371
   859  0002D2  0A77               	xorlw	119	; case 73
   860  0002D4  B4D8               	btfsc	status,2,c
   861  0002D6  D6E9               	goto	l1085
   862  0002D8  0A1D               	xorlw	29	; case 84
   863  0002DA  B4D8               	btfsc	status,2,c
   864  0002DC  D6E2               	goto	l1083
   865  0002DE  0A0C               	xorlw	12	; case 88
   866  0002E0  B4D8               	btfsc	status,2,c
   867  0002E2  D70E               	goto	l243
   868  0002E4  0A39               	xorlw	57	; case 97
   869  0002E6  B4D8               	btfsc	status,2,c
   870  0002E8  D707               	goto	l237
   871  0002EA  0A03               	xorlw	3	; case 98
   872  0002EC  B4D8               	btfsc	status,2,c
   873  0002EE  D706               	goto	l240
   874  0002F0  0A1A               	xorlw	26	; case 120
   875  0002F2  B4D8               	btfsc	status,2,c
   876  0002F4  D767               	goto	l374
   877  0002F6  D788               	goto	l1099
   878  0002F8  0012               	return		;funcret
   879  0002FA                     __end_of_relayControl:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           intcon	equ	0xFF2
   883                           postinc0	equ	0xFEE
   884                           wreg	equ	0xFE8
   885                           indf2	equ	0xFDF
   886                           fsr2h	equ	0xFDA
   887                           fsr2l	equ	0xFD9
   888                           status	equ	0xFD8
   889                           
   890 ;; *************** function _EUSART1_Write *****************
   891 ;; Defined at:
   892 ;;		line 132 in file "mcc_generated_files/eusart1.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  txData          1    wreg     unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  txData          1   14[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         0       0       0       0       0       0       0
   907 ;;      Locals:         1       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0
   909 ;;      Totals:         1       0       0       0       0       0       0
   910 ;;Total ram usage:        1 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    2
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_relayControl
   917 ;;		_putch
   918 ;;		_sendString
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text2
   923  0003EC                     __ptext2:
   924                           	opt stack 0
   925  0003EC                     _EUSART1_Write:
   926                           	opt stack 27
   927                           
   928                           ;incstack = 0
   929                           ;EUSART1_Write@txData stored from wreg
   930  0003EC  6E34               	movwf	EUSART1_Write@txData,c
   931                           
   932                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
   933  0003EE  D000               	goto	l1009
   934  0003F0                     l1009:
   935  0003F0  503B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   936  0003F2  B4D8               	btfsc	status,2,c
   937  0003F4  D7FD               	goto	l1009
   938                           
   939                           ;eusart1.c: 136: }
   940                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
   941  0003F6  B89D               	btfsc	3997,4,c	;volatile
   942  0003F8  D003               	goto	l70
   943                           
   944                           ;eusart1.c: 139: {
   945                           ;eusart1.c: 140: TXREG1 = txData;
   946  0003FA  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   947                           
   948                           ;eusart1.c: 141: }
   949  0003FE  D014               	goto	l1023
   950  000400                     l70:
   951                           
   952                           ;eusart1.c: 142: else
   953                           ;eusart1.c: 143: {
   954                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
   955  000400  989D               	bcf	3997,4,c	;volatile
   956                           
   957                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
   958  000402  5024               	movf	_eusart1TxHead,w,c
   959  000404  0D01               	mullw	1
   960  000406  0E19               	movlw	low _eusart1TxBuffer
   961  000408  24F3               	addwf	prodl,w,c
   962  00040A  6ED9               	movwf	fsr2l,c
   963  00040C  0E00               	movlw	high _eusart1TxBuffer
   964  00040E  20F4               	addwfc	prodh,w,c
   965  000410  6EDA               	movwf	fsr2h,c
   966  000412  C034  FFDF         	movff	EUSART1_Write@txData,indf2
   967  000416  2A24               	incf	_eusart1TxHead,f,c
   968                           
   969                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
   970  000418  0E07               	movlw	7
   971  00041A  6424               	cpfsgt	_eusart1TxHead,c
   972  00041C  D003               	goto	l1021
   973                           
   974                           ;eusart1.c: 147: {
   975                           ;eusart1.c: 148: eusart1TxHead = 0;
   976  00041E  0E00               	movlw	0
   977  000420  6E24               	movwf	_eusart1TxHead,c
   978  000422  D000               	goto	l1021
   979  000424                     l1021:
   980                           
   981                           ;eusart1.c: 149: }
   982                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
   983  000424  063B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
   984  000426  D000               	goto	l1023
   985  000428                     l1023:
   986                           
   987                           ;eusart1.c: 151: }
   988                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
   989  000428  889D               	bsf	3997,4,c	;volatile
   990  00042A  0012               	return		;funcret
   991  00042C                     __end_of_EUSART1_Write:
   992                           	opt stack 0
   993                           tblptru	equ	0xFF8
   994                           prodh	equ	0xFF4
   995                           prodl	equ	0xFF3
   996                           intcon	equ	0xFF2
   997                           postinc0	equ	0xFEE
   998                           wreg	equ	0xFE8
   999                           indf2	equ	0xFDF
  1000                           fsr2h	equ	0xFDA
  1001                           fsr2l	equ	0xFD9
  1002                           status	equ	0xFD8
  1003                           
  1004 ;; *************** function _SYSTEM_Initialize *****************
  1005 ;; Defined at:
  1006 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;		None               void
  1013 ;; Registers used:
  1014 ;;		wreg, status,2, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1020 ;;      Params:         0       0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0
  1023 ;;      Totals:         0       0       0       0       0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    3
  1027 ;; This function calls:
  1028 ;;		_EUSART1_Initialize
  1029 ;;		_INTERRUPT_Initialize
  1030 ;;		_OSCILLATOR_Initialize
  1031 ;;		_PIN_MANAGER_Initialize
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text3
  1038  000512                     __ptext3:
  1039                           	opt stack 0
  1040  000512                     _SYSTEM_Initialize:
  1041                           	opt stack 27
  1042                           
  1043                           ;mcc.c: 114: INTERRUPT_Initialize();
  1044                           
  1045                           ;incstack = 0
  1046  000512  EC99  F002         	call	_INTERRUPT_Initialize	;wreg free
  1047                           
  1048                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1049  000516  ECD0  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1050                           
  1051                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1052  00051A  EC92  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1053                           
  1054                           ;mcc.c: 117: EUSART1_Initialize();
  1055  00051E  EC33  F002         	call	_EUSART1_Initialize	;wreg free
  1056  000522  0012               	return		;funcret
  1057  000524                     __end_of_SYSTEM_Initialize:
  1058                           	opt stack 0
  1059                           tblptru	equ	0xFF8
  1060                           prodh	equ	0xFF4
  1061                           prodl	equ	0xFF3
  1062                           intcon	equ	0xFF2
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           indf2	equ	0xFDF
  1066                           fsr2h	equ	0xFDA
  1067                           fsr2l	equ	0xFD9
  1068                           status	equ	0xFD8
  1069                           
  1070 ;; *************** function _PIN_MANAGER_Initialize *****************
  1071 ;; Defined at:
  1072 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;		None               void
  1079 ;; Registers used:
  1080 ;;		wreg, status,2
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1086 ;;      Params:         0       0       0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0
  1089 ;;      Totals:         0       0       0       0       0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    2
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_SYSTEM_Initialize
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text4
  1101  0003A0                     __ptext4:
  1102                           	opt stack 0
  1103  0003A0                     _PIN_MANAGER_Initialize:
  1104                           	opt stack 27
  1105                           
  1106                           ;pin_manager.c: 56: LATE = 0x00;
  1107                           
  1108                           ;incstack = 0
  1109  0003A0  0E00               	movlw	0
  1110  0003A2  6E8D               	movwf	3981,c	;volatile
  1111                           
  1112                           ;pin_manager.c: 57: LATD = 0x00;
  1113  0003A4  0E00               	movlw	0
  1114  0003A6  6E8C               	movwf	3980,c	;volatile
  1115                           
  1116                           ;pin_manager.c: 58: LATA = 0x00;
  1117  0003A8  0E00               	movlw	0
  1118  0003AA  6E89               	movwf	3977,c	;volatile
  1119                           
  1120                           ;pin_manager.c: 59: LATB = 0x00;
  1121  0003AC  0E00               	movlw	0
  1122  0003AE  6E8A               	movwf	3978,c	;volatile
  1123                           
  1124                           ;pin_manager.c: 60: LATC = 0x00;
  1125  0003B0  0E00               	movlw	0
  1126  0003B2  6E8B               	movwf	3979,c	;volatile
  1127                           
  1128                           ;pin_manager.c: 65: TRISE = 0x00;
  1129  0003B4  0E00               	movlw	0
  1130  0003B6  6E96               	movwf	3990,c	;volatile
  1131                           
  1132                           ;pin_manager.c: 66: TRISA = 0x80;
  1133  0003B8  0E80               	movlw	128
  1134  0003BA  6E92               	movwf	3986,c	;volatile
  1135                           
  1136                           ;pin_manager.c: 67: TRISB = 0x3F;
  1137  0003BC  0E3F               	movlw	63
  1138  0003BE  6E93               	movwf	3987,c	;volatile
  1139                           
  1140                           ;pin_manager.c: 68: TRISC = 0xB8;
  1141  0003C0  0EB8               	movlw	184
  1142  0003C2  6E94               	movwf	3988,c	;volatile
  1143                           
  1144                           ;pin_manager.c: 69: TRISD = 0xFC;
  1145  0003C4  0EFC               	movlw	252
  1146  0003C6  6E95               	movwf	3989,c	;volatile
  1147                           
  1148                           ;pin_manager.c: 74: ANSELC = 0x38;
  1149  0003C8  0E38               	movlw	56
  1150  0003CA  010F               	movlb	15	; () banked
  1151  0003CC  6F3A               	movwf	58,b	;volatile
  1152                           
  1153                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1154  0003CE  0E3F               	movlw	63
  1155  0003D0  010F               	movlb	15	; () banked
  1156  0003D2  6F39               	movwf	57,b	;volatile
  1157                           
  1158                           ;pin_manager.c: 76: ANSELD = 0x00;
  1159  0003D4  0E00               	movlw	0
  1160  0003D6  010F               	movlb	15	; () banked
  1161  0003D8  6F3B               	movwf	59,b	;volatile
  1162                           
  1163                           ;pin_manager.c: 77: ANSELE = 0x00;
  1164  0003DA  0E00               	movlw	0
  1165  0003DC  010F               	movlb	15	; () banked
  1166  0003DE  6F3C               	movwf	60,b	;volatile
  1167                           
  1168                           ;pin_manager.c: 78: ANSELA = 0x00;
  1169  0003E0  0E00               	movlw	0
  1170  0003E2  010F               	movlb	15	; () banked
  1171  0003E4  6F38               	movwf	56,b	;volatile
  1172                           
  1173                           ; BSR set to: 15
  1174                           ;pin_manager.c: 83: WPUB = 0xFF;
  1175  0003E6  6861               	setf	3937,c	;volatile
  1176                           
  1177                           ; BSR set to: 15
  1178                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1179  0003E8  9EF1               	bcf	intcon2,7,c	;volatile
  1180                           
  1181                           ; BSR set to: 15
  1182  0003EA  0012               	return		;funcret
  1183  0003EC                     __end_of_PIN_MANAGER_Initialize:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           prodh	equ	0xFF4
  1187                           prodl	equ	0xFF3
  1188                           intcon	equ	0xFF2
  1189                           intcon2	equ	0xFF1
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           indf2	equ	0xFDF
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function _OSCILLATOR_Initialize *****************
  1198 ;; Defined at:
  1199 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg, status,2
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1213 ;;      Params:         0       0       0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_SYSTEM_Initialize
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text5
  1228  000524                     __ptext5:
  1229                           	opt stack 0
  1230  000524                     _OSCILLATOR_Initialize:
  1231                           	opt stack 27
  1232                           
  1233                           ;mcc.c: 123: OSCCON = 0x60;
  1234                           
  1235                           ; BSR set to: 15
  1236                           ;incstack = 0
  1237  000524  0E60               	movlw	96
  1238  000526  6ED3               	movwf	4051,c	;volatile
  1239                           
  1240                           ;mcc.c: 125: OSCCON2 = 0x04;
  1241  000528  0E04               	movlw	4
  1242  00052A  6ED2               	movwf	4050,c	;volatile
  1243                           
  1244                           ;mcc.c: 127: OSCTUNE = 0x00;
  1245  00052C  0E00               	movlw	0
  1246  00052E  6E9B               	movwf	3995,c	;volatile
  1247  000530  0012               	return		;funcret
  1248  000532                     __end_of_OSCILLATOR_Initialize:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           prodh	equ	0xFF4
  1252                           prodl	equ	0xFF3
  1253                           intcon	equ	0xFF2
  1254                           intcon2	equ	0xFF1
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           indf2	equ	0xFDF
  1258                           fsr2h	equ	0xFDA
  1259                           fsr2l	equ	0xFD9
  1260                           status	equ	0xFD8
  1261                           
  1262 ;; *************** function _INTERRUPT_Initialize *****************
  1263 ;; Defined at:
  1264 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;		None               void
  1271 ;; Registers used:
  1272 ;;		None
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1278 ;;      Params:         0       0       0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    2
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_SYSTEM_Initialize
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text6
  1293  000532                     __ptext6:
  1294                           	opt stack 0
  1295  000532                     _INTERRUPT_Initialize:
  1296                           	opt stack 27
  1297                           
  1298                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1299                           
  1300                           ;incstack = 0
  1301  000532  9ED0               	bcf	4048,7,c	;volatile
  1302  000534  0012               	return		;funcret
  1303  000536                     __end_of_INTERRUPT_Initialize:
  1304                           	opt stack 0
  1305                           tblptru	equ	0xFF8
  1306                           prodh	equ	0xFF4
  1307                           prodl	equ	0xFF3
  1308                           intcon	equ	0xFF2
  1309                           intcon2	equ	0xFF1
  1310                           postinc0	equ	0xFEE
  1311                           wreg	equ	0xFE8
  1312                           indf2	equ	0xFDF
  1313                           fsr2h	equ	0xFDA
  1314                           fsr2l	equ	0xFD9
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _EUSART1_Initialize *****************
  1318 ;; Defined at:
  1319 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;		None               void
  1326 ;; Registers used:
  1327 ;;		wreg, status,2
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1333 ;;      Params:         0       0       0       0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0
  1336 ;;      Totals:         0       0       0       0       0       0       0
  1337 ;;Total ram usage:        0 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    2
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_SYSTEM_Initialize
  1344 ;;		_sendString
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text7
  1349  000466                     __ptext7:
  1350                           	opt stack 0
  1351  000466                     _EUSART1_Initialize:
  1352                           	opt stack 27
  1353                           
  1354                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1355                           
  1356                           ;incstack = 0
  1357  000466  9A9D               	bcf	3997,5,c	;volatile
  1358                           
  1359                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1360  000468  989D               	bcf	3997,4,c	;volatile
  1361                           
  1362                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1363  00046A  0E08               	movlw	8
  1364  00046C  6EB8               	movwf	4024,c	;volatile
  1365                           
  1366                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1367  00046E  0E90               	movlw	144
  1368  000470  6EAB               	movwf	4011,c	;volatile
  1369                           
  1370                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1371  000472  0E24               	movlw	36
  1372  000474  6EAC               	movwf	4012,c	;volatile
  1373                           
  1374                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1375  000476  0ECF               	movlw	207
  1376  000478  6EAF               	movwf	4015,c	;volatile
  1377                           
  1378                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1379  00047A  0E00               	movlw	0
  1380  00047C  6EB0               	movwf	4016,c	;volatile
  1381                           
  1382                           ;eusart1.c: 100: eusart1TxHead = 0;
  1383  00047E  0E00               	movlw	0
  1384  000480  6E24               	movwf	_eusart1TxHead,c
  1385                           
  1386                           ;eusart1.c: 101: eusart1TxTail = 0;
  1387  000482  0E00               	movlw	0
  1388  000484  6E25               	movwf	_eusart1TxTail,c
  1389                           
  1390                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1391  000486  0E08               	movlw	8
  1392  000488  6E3B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1393                           
  1394                           ;eusart1.c: 104: eusart1RxHead = 0;
  1395  00048A  0E00               	movlw	0
  1396  00048C  6E22               	movwf	_eusart1RxHead,c
  1397                           
  1398                           ;eusart1.c: 105: eusart1RxTail = 0;
  1399  00048E  0E00               	movlw	0
  1400  000490  6E23               	movwf	_eusart1RxTail,c
  1401                           
  1402                           ;eusart1.c: 106: eusart1RxCount = 0;
  1403  000492  0E00               	movlw	0
  1404  000494  6E21               	movwf	_eusart1RxCount,c	;volatile
  1405                           
  1406                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1407  000496  8A9D               	bsf	3997,5,c	;volatile
  1408  000498  0012               	return		;funcret
  1409  00049A                     __end_of_EUSART1_Initialize:
  1410                           	opt stack 0
  1411                           tblptru	equ	0xFF8
  1412                           prodh	equ	0xFF4
  1413                           prodl	equ	0xFF3
  1414                           intcon	equ	0xFF2
  1415                           intcon2	equ	0xFF1
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           indf2	equ	0xFDF
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _EUSART1_Read *****************
  1424 ;; Defined at:
  1425 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  readValue       1   14[COMRAM] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      unsigned char 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         0       0       0       0       0       0       0
  1440 ;;      Locals:         1       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0
  1442 ;;      Totals:         1       0       0       0       0       0       0
  1443 ;;Total ram usage:        1 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    2
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;;		_getch
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text8
  1455  00042C                     __ptext8:
  1456                           	opt stack 0
  1457  00042C                     _EUSART1_Read:
  1458                           	opt stack 28
  1459                           
  1460                           ;eusart1.c: 114: uint8_t readValue = 0;
  1461                           
  1462                           ;incstack = 0
  1463  00042C  0E00               	movlw	0
  1464  00042E  6E34               	movwf	EUSART1_Read@readValue,c
  1465                           
  1466                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1467  000430  D000               	goto	l1035
  1468  000432                     l1035:
  1469  000432  5021               	movf	_eusart1RxCount,w,c	;volatile
  1470  000434  B4D8               	btfsc	status,2,c
  1471  000436  D7FD               	goto	l1035
  1472                           
  1473                           ;eusart1.c: 118: }
  1474                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1475  000438  5023               	movf	_eusart1RxTail,w,c
  1476  00043A  0D01               	mullw	1
  1477  00043C  0E11               	movlw	low _eusart1RxBuffer
  1478  00043E  24F3               	addwf	prodl,w,c
  1479  000440  6ED9               	movwf	fsr2l,c
  1480  000442  0E00               	movlw	high _eusart1RxBuffer
  1481  000444  20F4               	addwfc	prodh,w,c
  1482  000446  6EDA               	movwf	fsr2h,c
  1483  000448  50DF               	movf	indf2,w,c
  1484  00044A  6E34               	movwf	EUSART1_Read@readValue,c
  1485  00044C  2A23               	incf	_eusart1RxTail,f,c
  1486                           
  1487                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1488  00044E  0E07               	movlw	7
  1489  000450  6423               	cpfsgt	_eusart1RxTail,c
  1490  000452  D003               	goto	l1045
  1491                           
  1492                           ;eusart1.c: 122: {
  1493                           ;eusart1.c: 123: eusart1RxTail = 0;
  1494  000454  0E00               	movlw	0
  1495  000456  6E23               	movwf	_eusart1RxTail,c
  1496  000458  D000               	goto	l1045
  1497  00045A                     l1045:
  1498                           
  1499                           ;eusart1.c: 124: }
  1500                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1501  00045A  9A9D               	bcf	3997,5,c	;volatile
  1502                           
  1503                           ;eusart1.c: 126: eusart1RxCount--;
  1504  00045C  0621               	decf	_eusart1RxCount,f,c	;volatile
  1505                           
  1506                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1507  00045E  8A9D               	bsf	3997,5,c	;volatile
  1508                           
  1509                           ;eusart1.c: 129: return readValue;
  1510  000460  5034               	movf	EUSART1_Read@readValue,w,c
  1511  000462  0012               	return	
  1512  000464  0012               	return		;funcret
  1513  000466                     __end_of_EUSART1_Read:
  1514                           	opt stack 0
  1515                           tblptru	equ	0xFF8
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           intcon	equ	0xFF2
  1519                           intcon2	equ	0xFF1
  1520                           postinc0	equ	0xFEE
  1521                           wreg	equ	0xFE8
  1522                           indf2	equ	0xFDF
  1523                           fsr2h	equ	0xFDA
  1524                           fsr2l	equ	0xFD9
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function _INTERRUPT_InterruptManager *****************
  1528 ;; Defined at:
  1529 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;		None               void
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0
  1545 ;;      Temps:         14       0       0       0       0       0       0
  1546 ;;      Totals:        14       0       0       0       0       0       0
  1547 ;;Total ram usage:       14 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    1
  1550 ;; This function calls:
  1551 ;;		_EUSART1_Receive_ISR
  1552 ;;		_EUSART1_Transmit_ISR
  1553 ;; This function is called by:
  1554 ;;		Interrupt level 2
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	intcode
  1559  000008                     __pintcode:
  1560                           	opt stack 0
  1561  000008                     _INTERRUPT_InterruptManager:
  1562                           	opt stack 27
  1563                           
  1564                           ;incstack = 0
  1565  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1566  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1567  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1568  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1569  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1570  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1571  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1572  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1573  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1574  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1575  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1576  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1577  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1578  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1579                           
  1580                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1581  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1582  000042  A89D               	btfss	3997,4,c	;volatile
  1583  000044  D005               	goto	i2l148
  1584  000046  A89E               	btfss	3998,4,c	;volatile
  1585  000048  D003               	goto	i2l148
  1586                           
  1587                           ;interrupt_manager.c: 61: {
  1588                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1589  00004A  EC4D  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  1590                           
  1591                           ;interrupt_manager.c: 63: }
  1592  00004E  D008               	goto	i2l152
  1593  000050                     i2l148:
  1594                           
  1595                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1596  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1597  000052  AA9D               	btfss	3997,5,c	;volatile
  1598  000054  D005               	goto	i2l152
  1599  000056  AA9E               	btfss	3998,5,c	;volatile
  1600  000058  D003               	goto	i2l152
  1601                           
  1602                           ;interrupt_manager.c: 65: {
  1603                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1604  00005A  EC66  F002         	call	_EUSART1_Receive_ISR	;wreg free
  1605                           
  1606                           ;interrupt_manager.c: 68: else
  1607                           ;interrupt_manager.c: 69: {
  1608                           
  1609                           ;interrupt_manager.c: 67: }
  1610  00005E  D000               	goto	i2l152
  1611  000060                     i2l152:
  1612  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1613  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1614  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1615  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1616  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1617  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1618  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1619  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1620  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1621  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1622  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1623  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1624  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1625  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1626  000098  0011               	retfie		f
  1627  00009A                     __end_of_INTERRUPT_InterruptManager:
  1628                           	opt stack 0
  1629                           pclatu	equ	0xFFB
  1630                           pclath	equ	0xFFA
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           prodh	equ	0xFF4
  1636                           prodl	equ	0xFF3
  1637                           intcon	equ	0xFF2
  1638                           intcon2	equ	0xFF1
  1639                           postinc0	equ	0xFEE
  1640                           fsr0h	equ	0xFEA
  1641                           fsr0l	equ	0xFE9
  1642                           wreg	equ	0xFE8
  1643                           fsr1h	equ	0xFE2
  1644                           fsr1l	equ	0xFE1
  1645                           indf2	equ	0xFDF
  1646                           fsr2h	equ	0xFDA
  1647                           fsr2l	equ	0xFD9
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function _EUSART1_Transmit_ISR *****************
  1651 ;; Defined at:
  1652 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;		None               void
  1659 ;; Registers used:
  1660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1666 ;;      Params:         0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_INTERRUPT_InterruptManager
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text10
  1680  00049A                     __ptext10:
  1681                           	opt stack 0
  1682  00049A                     _EUSART1_Transmit_ISR:
  1683                           	opt stack 27
  1684                           
  1685                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1686                           
  1687                           ;incstack = 0
  1688  00049A  0E08               	movlw	8
  1689  00049C  603B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1690  00049E  D013               	goto	i2l82
  1691                           
  1692                           ;eusart1.c: 170: {
  1693                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1694  0004A0  5025               	movf	_eusart1TxTail,w,c
  1695  0004A2  0D01               	mullw	1
  1696  0004A4  0E19               	movlw	low _eusart1TxBuffer
  1697  0004A6  24F3               	addwf	prodl,w,c
  1698  0004A8  6ED9               	movwf	fsr2l,c
  1699  0004AA  0E00               	movlw	high _eusart1TxBuffer
  1700  0004AC  20F4               	addwfc	prodh,w,c
  1701  0004AE  6EDA               	movwf	fsr2h,c
  1702  0004B0  50DF               	movf	indf2,w,c
  1703  0004B2  6EAD               	movwf	4013,c	;volatile
  1704  0004B4  2A25               	incf	_eusart1TxTail,f,c
  1705                           
  1706                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1707  0004B6  0E07               	movlw	7
  1708  0004B8  6425               	cpfsgt	_eusart1TxTail,c
  1709  0004BA  D003               	goto	i2l1065
  1710                           
  1711                           ;eusart1.c: 173: {
  1712                           ;eusart1.c: 174: eusart1TxTail = 0;
  1713  0004BC  0E00               	movlw	0
  1714  0004BE  6E25               	movwf	_eusart1TxTail,c
  1715  0004C0  D000               	goto	i2l1065
  1716  0004C2                     i2l1065:
  1717                           
  1718                           ;eusart1.c: 175: }
  1719                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1720  0004C2  2A3B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1721                           
  1722                           ;eusart1.c: 177: }
  1723  0004C4  0012               	return	
  1724  0004C6                     i2l82:
  1725                           
  1726                           ;eusart1.c: 178: else
  1727                           ;eusart1.c: 179: {
  1728                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1729  0004C6  989D               	bcf	3997,4,c	;volatile
  1730  0004C8  0012               	return	
  1731  0004CA  0012               	return		;funcret
  1732  0004CC                     __end_of_EUSART1_Transmit_ISR:
  1733                           	opt stack 0
  1734                           pclatu	equ	0xFFB
  1735                           pclath	equ	0xFFA
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           prodh	equ	0xFF4
  1741                           prodl	equ	0xFF3
  1742                           intcon	equ	0xFF2
  1743                           intcon2	equ	0xFF1
  1744                           postinc0	equ	0xFEE
  1745                           fsr0h	equ	0xFEA
  1746                           fsr0l	equ	0xFE9
  1747                           wreg	equ	0xFE8
  1748                           fsr1h	equ	0xFE2
  1749                           fsr1l	equ	0xFE1
  1750                           indf2	equ	0xFDF
  1751                           fsr2h	equ	0xFDA
  1752                           fsr2l	equ	0xFD9
  1753                           status	equ	0xFD8
  1754                           
  1755 ;; *************** function _EUSART1_Receive_ISR *****************
  1756 ;; Defined at:
  1757 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;		None               void
  1764 ;; Registers used:
  1765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1771 ;;      Params:         0       0       0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_INTERRUPT_InterruptManager
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text11
  1785  0004CC                     __ptext11:
  1786                           	opt stack 0
  1787  0004CC                     _EUSART1_Receive_ISR:
  1788                           	opt stack 27
  1789                           
  1790                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1791                           
  1792                           ;incstack = 0
  1793  0004CC  A2AB               	btfss	4011,1,c	;volatile
  1794  0004CE  D003               	goto	i2l1071
  1795                           
  1796                           ;eusart1.c: 188: {
  1797                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1798  0004D0  98AB               	bcf	4011,4,c	;volatile
  1799                           
  1800                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1801  0004D2  88AB               	bsf	4011,4,c	;volatile
  1802  0004D4  D000               	goto	i2l1071
  1803  0004D6                     i2l1071:
  1804                           
  1805                           ;eusart1.c: 193: }
  1806                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1807  0004D6  5022               	movf	_eusart1RxHead,w,c
  1808  0004D8  0D01               	mullw	1
  1809  0004DA  0E11               	movlw	low _eusart1RxBuffer
  1810  0004DC  24F3               	addwf	prodl,w,c
  1811  0004DE  6ED9               	movwf	fsr2l,c
  1812  0004E0  0E00               	movlw	high _eusart1RxBuffer
  1813  0004E2  20F4               	addwfc	prodh,w,c
  1814  0004E4  6EDA               	movwf	fsr2h,c
  1815  0004E6  CFAE FFDF          	movff	4014,indf2	;volatile
  1816  0004EA  2A22               	incf	_eusart1RxHead,f,c
  1817                           
  1818                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1819  0004EC  0E07               	movlw	7
  1820  0004EE  6422               	cpfsgt	_eusart1RxHead,c
  1821  0004F0  D003               	goto	i2l1079
  1822                           
  1823                           ;eusart1.c: 198: {
  1824                           ;eusart1.c: 199: eusart1RxHead = 0;
  1825  0004F2  0E00               	movlw	0
  1826  0004F4  6E22               	movwf	_eusart1RxHead,c
  1827  0004F6  D000               	goto	i2l1079
  1828  0004F8                     i2l1079:
  1829                           
  1830                           ;eusart1.c: 200: }
  1831                           ;eusart1.c: 201: eusart1RxCount++;
  1832  0004F8  2A21               	incf	_eusart1RxCount,f,c	;volatile
  1833  0004FA  0012               	return		;funcret
  1834  0004FC                     __end_of_EUSART1_Receive_ISR:
  1835                           	opt stack 0
  1836  0000                     pclatu	equ	0xFFB
  1837                           pclath	equ	0xFFA
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           prodh	equ	0xFF4
  1843                           prodl	equ	0xFF3
  1844                           intcon	equ	0xFF2
  1845                           intcon2	equ	0xFF1
  1846                           postinc0	equ	0xFEE
  1847                           fsr0h	equ	0xFEA
  1848                           fsr0l	equ	0xFE9
  1849                           wreg	equ	0xFE8
  1850                           fsr1h	equ	0xFE2
  1851                           fsr1l	equ	0xFE1
  1852                           indf2	equ	0xFDF
  1853                           fsr2h	equ	0xFDA
  1854                           fsr2l	equ	0xFD9
  1855                           status	equ	0xFD8
  1856                           pclatu	equ	0xFFB
  1857                           pclath	equ	0xFFA
  1858                           tblptru	equ	0xFF8
  1859                           tblptrh	equ	0xFF7
  1860                           tblptrl	equ	0xFF6
  1861                           tablat	equ	0xFF5
  1862                           prodh	equ	0xFF4
  1863                           prodl	equ	0xFF3
  1864                           intcon	equ	0xFF2
  1865                           intcon2	equ	0xFF1
  1866                           postinc0	equ	0xFEE
  1867                           fsr0h	equ	0xFEA
  1868                           fsr0l	equ	0xFE9
  1869                           wreg	equ	0xFE8
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           indf2	equ	0xFDF
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877                           	psect	rparam
  1878  0000                     pclatu	equ	0xFFB
  1879                           pclath	equ	0xFFA
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           intcon	equ	0xFF2
  1887                           intcon2	equ	0xFF1
  1888                           postinc0	equ	0xFEE
  1889                           fsr0h	equ	0xFEA
  1890                           fsr0l	equ	0xFE9
  1891                           wreg	equ	0xFE8
  1892                           fsr1h	equ	0xFE2
  1893                           fsr1l	equ	0xFE1
  1894                           indf2	equ	0xFDF
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_relayControl
    _relayControl->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                             19 COMRAM     1     1      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      3B       1       62.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       9        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Jul 24 17:43:30 2017

           _eusart1TxBufferRemaining 003B                                   l70 0400  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l302 0164  
                                l311 0170                                  l400 01F8  
                                l320 017C                                  l240 00FC  
                                l305 0168                                  l402 01FC  
                                l314 0174                                  l323 0180  
                                l251 0110                                  l243 0100  
                                l404 0200                                  l332 018C  
                                l308 016C                                  l341 0198  
                                l317 0178                                  l261 0124  
                                l253 0114                                  l245 0104  
                                l237 00F8                                  l406 0204  
                                l350 01A4                                  l326 0184  
                                l335 0190                                  l271 0138  
                                l263 0128                                  l255 0118  
                                l247 0108                                  l344 019C  
                                l353 01A8                                  l329 0188  
                                l281 0148                                  l273 013C  
                                l265 012C                                  l257 011C  
                                l249 010C                                  l362 01B4  
                                l338 0194                                  l290 0154  
                                l371 01C0                                  l347 01A0  
                                l275 0140                                  l267 0130  
                                l259 0120                                  l380 01D0  
                                l356 01AC                                  l284 014C  
                                l365 01B8                                  l293 0158  
                                l269 0134                                  l390 01E4  
                                l382 01D4                                  l374 01C4  
                                l278 0144                                  l359 01B0  
                                l287 0150                                  l392 01E8  
                                l384 01D8                                  l376 01C8  
                                l368 01BC                                  l296 015C  
                                l394 01EC                                  l386 01DC  
                                l378 01CC                                  l299 0160  
                                l396 01F0                                  l388 01E0  
                                l398 01F4                         __CFG_CPB$OFF 000000  
                                u100 00C4                                  u110 00F6  
                                u207 00DE                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
                               l1021 0424                                 l1023 0428  
                               l1103 0210                                 l1009 03F0  
                               l1035 0432                                 l1045 045A  
                               l1091 00C6                                 l1083 00A2  
                               l1171 0354                                 l1085 00AA  
                               l1181 0368                                 l1173 0358  
                               l1165 0348                                 l1191 037C  
                               l1183 036C                                 l1175 035C  
                               l1167 034C                                 l1193 0380  
                               l1185 0370                                 l1177 0360  
                               l1169 0350                                 l1099 0208  
                               l1195 0384                                 l1187 0374  
                               l1179 0364                                 l1197 0392  
                               l1189 0378                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               i2l82 04C6                                 _WPUB 000F61  
                      _EUSART1_Write 03EC                                 _main 02FA  
                      ?_EUSART1_Read 0026                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 009A                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 0532                                ?_main 0026  
                     __CFG_DEBUG$OFF 000000                                i2l152 0060  
                              i2l148 0050                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _TFNum 003A                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 049A  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
                     ?_EUSART1_Write 0026                                tablat 000FF5  
                     ??_EUSART1_Read 0034                                status 000FD8  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 04FC           __end_of_EUSART1_Initialize 049A  
                       __end_of_main 03A0          ?_INTERRUPT_InterruptManager 0026  
                             ??_main 0039                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0026                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             i2l1071 04D6                               i2l1065 04C2  
                             i2l1079 04F8                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                       __CFG_STVREN$ON 000000  
                             clear_0 0502                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    ??_EUSART1_Write 0034                      _eusart1RxBuffer 0011  
      __size_of_INTERRUPT_Initialize 0004                      _eusart1TxBuffer 0019  
                  _SYSTEM_Initialize 0512                           __accesstop 0060  
            __end_of__initialization 0508                   ?_SYSTEM_Initialize 0026  
                      ___rparam_used 000001                       __pcstackCOMRAM 0026  
                ??_SYSTEM_Initialize 0034                 __end_of_EUSART1_Read 0466  
             ??_EUSART1_Transmit_ISR 0026          __end_of_EUSART1_Receive_ISR 04FC  
                      ?_relayControl 0026            __end_of_SYSTEM_Initialize 0524  
                      _eusart1RxHead 0022                        _eusart1TxHead 0024  
                      _eusart1RxTail 0023                        _eusart1TxTail 0025  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 003A  
                 __CFG_CCP2MX$PORTC1 000000                   __CFG_CCP3MX$PORTB5 000000  
                            _OSCCON2 000FD2                       ??_relayControl 0035  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                              __pcinit 04FC  
                            __ramtop 0600                              __ptext0 02FA  
                            __ptext1 009E                              __ptext2 03EC  
                            __ptext3 0512                              __ptext4 03A0  
                            __ptext5 0524                              __ptext6 0532  
                            __ptext7 0466                              __ptext8 042C  
              _OSCILLATOR_Initialize 0524                   _EUSART1_Initialize 0466  
           ??_PIN_MANAGER_Initialize 0034           __size_of_SYSTEM_Initialize 0012  
               end_of_initialization 0508                  ?_EUSART1_Initialize 0026  
                      __Lmediumconst 0000                              postinc0 000FEE  
              __size_of_EUSART1_Read 003A                 ??_EUSART1_Initialize 0034  
                EUSART1_Write@txData 0034                           main@RxData 0039  
                       _EUSART1_Read 042C                 __end_of_relayControl 02FA  
       __end_of_INTERRUPT_Initialize 0536               ?_OSCILLATOR_Initialize 0026  
                start_initialization 04FC      __size_of_PIN_MANAGER_Initialize 004C  
              __end_of_EUSART1_Write 042C                       _eusart1RxCount 0021  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                  relayControl@count 0037         __size_of_EUSART1_Receive_ISR 0030  
             _PIN_MANAGER_Initialize 03A0                            __pintcode 0008  
       ??_INTERRUPT_InterruptManager 0026                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                 _INTERRUPT_Initialize 0532  
                           _LATAbits 000F89                             _LATBbits 000F8A  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
                           _LATEbits 000F8D                __size_of_relayControl 025C  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0092  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                         _relayControl 009E  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0026  
              EUSART1_Read@readValue 0034                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 0034  
        __size_of_EUSART1_Initialize 0034                     relayControl@data 0036  
                           __ptext10 049A                             __ptext11 04CC  
                      __size_of_main 00A6                             _site0_IL 0001  
 __end_of_INTERRUPT_InterruptManager 009A           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 04CC                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 0034                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0026              ?_PIN_MANAGER_Initialize 0026  
                         _RCSTA1bits 000FAB         __end_of_EUSART1_Transmit_ISR 04CC  
             __size_of_EUSART1_Write 0040                    __CFG_T3CMX$PORTC0 000000  
              ??_EUSART1_Receive_ISR 0026       __end_of_PIN_MANAGER_Initialize 03EC  
                  __CFG_FOSC$INTIO67 000000  
