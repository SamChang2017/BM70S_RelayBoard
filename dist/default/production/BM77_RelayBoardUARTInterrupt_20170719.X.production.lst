

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jul 20 17:00:51 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	nvCOMRAM
    25  00003A                     __pnvCOMRAM:
    26                           	opt stack 0
    27  00003A                     _TFNum:
    28                           	opt stack 0
    29  00003A                     	ds	1
    30  00003B                     _eusart1TxBufferRemaining:
    31                           	opt stack 0
    32  00003B                     	ds	1
    33  0000                     _ANSELA	set	3896
    34  0000                     _ANSELB	set	3897
    35  0000                     _ANSELC	set	3898
    36  0000                     _ANSELD	set	3899
    37  0000                     _ANSELE	set	3900
    38  0000                     _BAUDCON1	set	4024
    39  0000                     _INTCON2bits	set	4081
    40  0000                     _INTCONbits	set	4082
    41  0000                     _LATA	set	3977
    42  0000                     _LATAbits	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATBbits	set	3978
    45  0000                     _LATC	set	3979
    46  0000                     _LATCbits	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _LATDbits	set	3980
    49  0000                     _LATE	set	3981
    50  0000                     _LATEbits	set	3981
    51  0000                     _OSCCON	set	4051
    52  0000                     _OSCCON2	set	4050
    53  0000                     _OSCTUNE	set	3995
    54  0000                     _PIE1bits	set	3997
    55  0000                     _PIR1bits	set	3998
    56  0000                     _RCONbits	set	4048
    57  0000                     _RCREG1	set	4014
    58  0000                     _RCSTA1	set	4011
    59  0000                     _RCSTA1bits	set	4011
    60  0000                     _SPBRG1	set	4015
    61  0000                     _SPBRGH1	set	4016
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISE	set	3990
    67  0000                     _TXREG1	set	4013
    68  0000                     _TXSTA1	set	4012
    69  0000                     _WPUB	set	3937
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  0004E8                     __pcinit:
    75                           	opt stack 0
    76  0004E8                     start_initialization:
    77                           	opt stack 0
    78  0004E8                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (37 bytes)
    82  0004E8  EE00  F001         	lfsr	0,__pbssCOMRAM
    83  0004EC  0E25               	movlw	37
    84  0004EE                     clear_0:
    85  0004EE  6AEE               	clrf	postinc0,c
    86  0004F0  06E8               	decf	wreg,f,c
    87  0004F2  E1FD               	bnz	clear_0
    88  0004F4                     end_of_initialization:
    89                           	opt stack 0
    90  0004F4                     __end_of__initialization:
    91                           	opt stack 0
    92  0004F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  0004F6  6EF8               	movwf	tblptru,c
    94  0004F8  0100               	movlb	0
    95  0004FA  EF73  F001         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000001                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000001                     _site0_IL:
   104                           	opt stack 0
   105  000001                     	ds	16
   106  000011                     _eusart1RxBuffer:
   107                           	opt stack 0
   108  000011                     	ds	8
   109  000019                     _eusart1TxBuffer:
   110                           	opt stack 0
   111  000019                     	ds	8
   112  000021                     _eusart1RxCount:
   113                           	opt stack 0
   114  000021                     	ds	1
   115  000022                     _eusart1RxHead:
   116                           	opt stack 0
   117  000022                     	ds	1
   118  000023                     _eusart1RxTail:
   119                           	opt stack 0
   120  000023                     	ds	1
   121  000024                     _eusart1TxHead:
   122                           	opt stack 0
   123  000024                     	ds	1
   124  000025                     _eusart1TxTail:
   125                           	opt stack 0
   126  000025                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	cstackCOMRAM
   132  000026                     __pcstackCOMRAM:
   133                           	opt stack 0
   134  000026                     ??_INTERRUPT_InterruptManager:
   135  000026                     
   136                           ; 1 bytes @ 0x0
   137  000026                     	ds	14
   138  000034                     EUSART1_Read@readValue:
   139                           	opt stack 0
   140  000034                     EUSART1_Write@txData:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0xE
   144  000034                     	ds	1
   145  000035                     ??_relayControl:
   146                           
   147                           ; 0 bytes @ 0xF
   148  000035                     	ds	1
   149  000036                     relayControl@data:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x10
   153  000036                     	ds	1
   154  000037                     relayControl@count:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x11
   158  000037                     	ds	2
   159  000039                     main@RxData:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x13
   163  000039                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 32 in file "main.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;  RxData          1   19[COMRAM] unsigned char 
   178 ;; Return value:  Size  Location     Type
   179 ;;		None               void
   180 ;; Registers used:
   181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   187 ;;      Params:         0       0       0       0       0       0       0
   188 ;;      Locals:         1       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0
   190 ;;      Totals:         1       0       0       0       0       0       0
   191 ;;Total ram usage:        1 bytes
   192 ;; Hardware stack levels required when called:    4
   193 ;; This function calls:
   194 ;;		_EUSART1_Read
   195 ;;		_SYSTEM_Initialize
   196 ;;		_relayControl
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  0002E6                     __ptext0:
   204                           	opt stack 0
   205  0002E6                     _main:
   206                           	opt stack 27
   207                           
   208                           ;main.c: 35: SYSTEM_Initialize();
   209                           
   210                           ;incstack = 0
   211  0002E6  EC7F  F002         	call	_SYSTEM_Initialize	;wreg free
   212                           
   213                           ;main.c: 37: (INTCONbits.GIE = 1);
   214  0002EA  8EF2               	bsf	intcon,7,c	;volatile
   215                           
   216                           ;main.c: 38: (INTCONbits.PEIE = 1);
   217  0002EC  8CF2               	bsf	intcon,6,c	;volatile
   218                           
   219                           ;main.c: 40: char RxData;
   220                           ;main.c: 42: TFNum = '5';
   221  0002EE  0E35               	movlw	53
   222  0002F0  6E3A               	movwf	_TFNum,c
   223                           
   224                           ;main.c: 43: site0_IL[0] = '3';
   225  0002F2  0E33               	movlw	51
   226  0002F4  6E01               	movwf	_site0_IL,c
   227                           
   228                           ;main.c: 44: site0_IL[1] = '.';
   229  0002F6  0E2E               	movlw	46
   230  0002F8  6E02               	movwf	_site0_IL+1,c
   231                           
   232                           ;main.c: 45: site0_IL[2] = '9';
   233  0002FA  0E39               	movlw	57
   234  0002FC  6E03               	movwf	_site0_IL+2,c
   235                           
   236                           ;main.c: 46: site0_IL[3] = '4';
   237  0002FE  0E34               	movlw	52
   238  000300  6E04               	movwf	_site0_IL+3,c
   239                           
   240                           ;main.c: 48: site0_IL[4] = '3';
   241  000302  0E33               	movlw	51
   242  000304  6E05               	movwf	_site0_IL+4,c
   243                           
   244                           ;main.c: 49: site0_IL[5] = '7';
   245  000306  0E37               	movlw	55
   246  000308  6E06               	movwf	_site0_IL+5,c
   247                           
   248                           ;main.c: 50: site0_IL[6] = '.';
   249  00030A  0E2E               	movlw	46
   250  00030C  6E07               	movwf	_site0_IL+6,c
   251                           
   252                           ;main.c: 51: site0_IL[7] = '9';
   253  00030E  0E39               	movlw	57
   254  000310  6E08               	movwf	_site0_IL+7,c
   255                           
   256                           ;main.c: 53: site0_IL[8] = '1';
   257  000312  0E31               	movlw	49
   258  000314  6E09               	movwf	_site0_IL+8,c
   259                           
   260                           ;main.c: 54: site0_IL[9] = '5';
   261  000316  0E35               	movlw	53
   262  000318  6E0A               	movwf	_site0_IL+9,c
   263                           
   264                           ;main.c: 55: site0_IL[10] = '.';
   265  00031A  0E2E               	movlw	46
   266  00031C  6E0B               	movwf	_site0_IL+10,c
   267                           
   268                           ;main.c: 56: site0_IL[11] = '4';
   269  00031E  0E34               	movlw	52
   270  000320  6E0C               	movwf	_site0_IL+11,c
   271                           
   272                           ;main.c: 58: site0_IL[12] = '5';
   273  000322  0E35               	movlw	53
   274  000324  6E0D               	movwf	_site0_IL+12,c
   275                           
   276                           ;main.c: 59: site0_IL[13] = '.';
   277  000326  0E2E               	movlw	46
   278  000328  6E0E               	movwf	_site0_IL+13,c
   279                           
   280                           ;main.c: 60: site0_IL[14] = '8';
   281  00032A  0E38               	movlw	56
   282  00032C  6E0F               	movwf	_site0_IL+14,c
   283                           
   284                           ;main.c: 61: site0_IL[15] = '7';
   285  00032E  0E37               	movlw	55
   286  000330  6E10               	movwf	_site0_IL+15,c
   287  000332  D000               	goto	l1155
   288  000334                     l1155:
   289  000334  9089               	bcf	3977,0,c	;volatile
   290  000336  D000               	goto	l1157
   291  000338                     l1157:
   292  000338  9289               	bcf	3977,1,c	;volatile
   293  00033A  D000               	goto	l1159
   294  00033C                     l1159:
   295  00033C  9489               	bcf	3977,2,c	;volatile
   296  00033E  D000               	goto	l1161
   297  000340                     l1161:
   298  000340  9689               	bcf	3977,3,c	;volatile
   299  000342  D000               	goto	l1163
   300  000344                     l1163:
   301  000344  9889               	bcf	3977,4,c	;volatile
   302  000346  D000               	goto	l1165
   303  000348                     l1165:
   304  000348  9A89               	bcf	3977,5,c	;volatile
   305  00034A  D000               	goto	l1167
   306  00034C                     l1167:
   307  00034C  908D               	bcf	3981,0,c	;volatile
   308  00034E  D000               	goto	l1169
   309  000350                     l1169:
   310  000350  928D               	bcf	3981,1,c	;volatile
   311  000352  D000               	goto	l1171
   312  000354                     l1171:
   313  000354  948D               	bcf	3981,2,c	;volatile
   314  000356  D000               	goto	l1173
   315  000358                     l1173:
   316  000358  9C89               	bcf	3977,6,c	;volatile
   317  00035A  D000               	goto	l1175
   318  00035C                     l1175:
   319  00035C  908B               	bcf	3979,0,c	;volatile
   320  00035E  D000               	goto	l1177
   321  000360                     l1177:
   322  000360  928B               	bcf	3979,1,c	;volatile
   323  000362  D000               	goto	l1179
   324  000364                     l1179:
   325  000364  948B               	bcf	3979,2,c	;volatile
   326  000366  D000               	goto	l1181
   327  000368                     l1181:
   328  000368  908C               	bcf	3980,0,c	;volatile
   329  00036A  D000               	goto	l1183
   330  00036C                     l1183:
   331  00036C  928C               	bcf	3980,1,c	;volatile
   332                           
   333                           ;main.c: 81: {
   334                           ;main.c: 90: while((eusart1RxCount)){
   335                           
   336                           ;main.c: 80: while (1)
   337  00036E  D007               	goto	l1187
   338  000370                     l1185:
   339                           
   340                           ;main.c: 92: RxData = EUSART1_Read();
   341  000370  EC0C  F002         	call	_EUSART1_Read	;wreg free
   342  000374  6E39               	movwf	main@RxData,c
   343                           
   344                           ;main.c: 109: relayControl(RxData);
   345  000376  5039               	movf	main@RxData,w,c
   346  000378  EC4F  F000         	call	_relayControl
   347  00037C  D000               	goto	l1187
   348  00037E                     l1187:
   349  00037E  5021               	movf	_eusart1RxCount,w,c	;volatile
   350  000380  B4D8               	btfsc	status,2,c
   351  000382  D7FD               	goto	l1187
   352  000384  D7F5               	goto	l1185
   353                           
   354                           ;main.c: 110: };
   355  000386  D7FB               	goto	l1187
   356  000388  EF4D  F000         	goto	start
   357  00038C                     __end_of_main:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           intcon	equ	0xFF2
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           status	equ	0xFD8
   364                           
   365 ;; *************** function _relayControl *****************
   366 ;; Defined at:
   367 ;;		line 126 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  data            1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  data            1   16[COMRAM] unsigned char 
   372 ;;  count           2   17[COMRAM] int 
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         3       0       0       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		_EUSART1_Write
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  00009E                     __ptext1:
   398                           	opt stack 0
   399  00009E                     _relayControl:
   400                           	opt stack 27
   401                           
   402                           ;incstack = 0
   403                           ;relayControl@data stored from wreg
   404  00009E  6E36               	movwf	relayControl@data,c
   405                           
   406                           ;main.c: 127: switch (data){
   407  0000A0  D0AD               	goto	l1093
   408  0000A2                     l1073:
   409                           
   410                           ;main.c: 129: EUSART1_Write(TFNum);
   411  0000A2  503A               	movf	_TFNum,w,c
   412  0000A4  ECEC  F001         	call	_EUSART1_Write
   413                           
   414                           ;main.c: 130: break;
   415  0000A8  0012               	return	
   416  0000AA                     l1075:
   417                           
   418                           ;main.c: 132: for (int count=0; count<16; count++){
   419  0000AA  0E00               	movlw	0
   420  0000AC  6E38               	movwf	relayControl@count+1,c
   421  0000AE  0E00               	movlw	0
   422  0000B0  6E37               	movwf	relayControl@count,c
   423  0000B2  BE38               	btfsc	relayControl@count+1,7,c
   424  0000B4  D008               	goto	l1081
   425  0000B6  5038               	movf	relayControl@count+1,w,c
   426  0000B8  E105               	bnz	u100
   427  0000BA  0E10               	movlw	16
   428  0000BC  5C37               	subwf	relayControl@count,w,c
   429  0000BE  B0D8               	btfsc	status,0,c
   430  0000C0  0012               	return	
   431  0000C2  D001               	goto	l1081
   432  0000C4                     u100:
   433  0000C4  0012               	return	
   434  0000C6                     l1081:
   435                           
   436                           ;main.c: 133: EUSART1_Write(site0_IL[count]);
   437  0000C6  0E01               	movlw	low _site0_IL
   438  0000C8  2437               	addwf	relayControl@count,w,c
   439  0000CA  6ED9               	movwf	fsr2l,c
   440  0000CC  0E00               	movlw	high _site0_IL
   441  0000CE  2038               	addwfc	relayControl@count+1,w,c
   442  0000D0  6EDA               	movwf	fsr2h,c
   443  0000D2  50DF               	movf	indf2,w,c
   444  0000D4  ECEC  F001         	call	_EUSART1_Write
   445                           
   446                           ;main.c: 134: _delay((unsigned long)((25)*(8000000/4000.0)));
   447  0000D8  0E41               	movlw	65
   448  0000DA  6E35               	movwf	??_relayControl& (0+255),c
   449  0000DC  0EEE               	movlw	238
   450  0000DE                     u207:
   451  0000DE  2EE8               	decfsz	wreg,f,c
   452  0000E0  D7FE               	goto	u207
   453  0000E2  2E35               	decfsz	??_relayControl& (0+255),f,c
   454  0000E4  D7FC               	goto	u207
   455  0000E6  D000               	nop2	
   456  0000E8  4A37               	infsnz	relayControl@count,f,c
   457  0000EA  2A38               	incf	relayControl@count+1,f,c
   458  0000EC  BE38               	btfsc	relayControl@count+1,7,c
   459  0000EE  D7EB               	goto	l1081
   460  0000F0  5038               	movf	relayControl@count+1,w,c
   461  0000F2  E101               	bnz	u110
   462  0000F4  D7E2               	goto	L1
   463  0000F6                     u110:
   464                           
   465                           ;main.c: 135: }
   466                           ;main.c: 136: break;
   467  0000F6  0012               	return	
   468  0000F8                     l237:
   469  0000F8  908C               	bcf	3980,0,c	;volatile
   470                           
   471                           ;main.c: 139: break;
   472  0000FA  0012               	return	
   473  0000FC                     l240:
   474  0000FC  808C               	bsf	3980,0,c	;volatile
   475                           
   476                           ;main.c: 142: break;
   477  0000FE  0012               	return	
   478  000100                     l243:
   479  000100  9089               	bcf	3977,0,c	;volatile
   480  000102  D000               	goto	l245
   481  000104                     l245:
   482  000104  9289               	bcf	3977,1,c	;volatile
   483  000106  D000               	goto	l247
   484  000108                     l247:
   485  000108  9489               	bcf	3977,2,c	;volatile
   486  00010A  D000               	goto	l249
   487  00010C                     l249:
   488  00010C  9689               	bcf	3977,3,c	;volatile
   489  00010E  D000               	goto	l251
   490  000110                     l251:
   491  000110  9889               	bcf	3977,4,c	;volatile
   492  000112  D000               	goto	l253
   493  000114                     l253:
   494  000114  9A89               	bcf	3977,5,c	;volatile
   495  000116  D000               	goto	l255
   496  000118                     l255:
   497  000118  908D               	bcf	3981,0,c	;volatile
   498  00011A  D000               	goto	l257
   499  00011C                     l257:
   500  00011C  928D               	bcf	3981,1,c	;volatile
   501  00011E  D000               	goto	l259
   502  000120                     l259:
   503  000120  948D               	bcf	3981,2,c	;volatile
   504  000122  D000               	goto	l261
   505  000124                     l261:
   506  000124  9C89               	bcf	3977,6,c	;volatile
   507  000126  D000               	goto	l263
   508  000128                     l263:
   509  000128  908B               	bcf	3979,0,c	;volatile
   510  00012A  D000               	goto	l265
   511  00012C                     l265:
   512  00012C  928B               	bcf	3979,1,c	;volatile
   513  00012E  D000               	goto	l267
   514  000130                     l267:
   515  000130  948B               	bcf	3979,2,c	;volatile
   516  000132  D000               	goto	l269
   517  000134                     l269:
   518  000134  908C               	bcf	3980,0,c	;volatile
   519  000136  D000               	goto	l271
   520  000138                     l271:
   521  000138  928C               	bcf	3980,1,c	;volatile
   522  00013A  D000               	goto	l273
   523  00013C                     l273:
   524  00013C  9C8A               	bcf	3978,6,c	;volatile
   525                           
   526                           ;main.c: 161: break;
   527  00013E  0012               	return	
   528  000140                     l276:
   529  000140  9089               	bcf	3977,0,c	;volatile
   530                           
   531                           ;main.c: 164: break;
   532  000142  0012               	return	
   533  000144                     l279:
   534  000144  8089               	bsf	3977,0,c	;volatile
   535                           
   536                           ;main.c: 167: break;
   537  000146  0012               	return	
   538  000148                     l282:
   539  000148  9289               	bcf	3977,1,c	;volatile
   540                           
   541                           ;main.c: 172: break;
   542  00014A  0012               	return	
   543  00014C                     l285:
   544  00014C  8289               	bsf	3977,1,c	;volatile
   545                           
   546                           ;main.c: 175: break;
   547  00014E  0012               	return	
   548  000150                     l288:
   549  000150  9C8A               	bcf	3978,6,c	;volatile
   550                           
   551                           ;main.c: 178: break;
   552  000152  0012               	return	
   553  000154                     l291:
   554  000154  8C8A               	bsf	3978,6,c	;volatile
   555                           
   556                           ;main.c: 181: break;
   557  000156  0012               	return	
   558  000158                     l294:
   559  000158  9489               	bcf	3977,2,c	;volatile
   560                           
   561                           ;main.c: 185: break;
   562  00015A  0012               	return	
   563  00015C                     l297:
   564  00015C  8489               	bsf	3977,2,c	;volatile
   565                           
   566                           ;main.c: 188: break;
   567  00015E  0012               	return	
   568  000160                     l300:
   569  000160  9689               	bcf	3977,3,c	;volatile
   570                           
   571                           ;main.c: 191: break;
   572  000162  0012               	return	
   573  000164                     l303:
   574  000164  8689               	bsf	3977,3,c	;volatile
   575                           
   576                           ;main.c: 194: break;
   577  000166  0012               	return	
   578  000168                     l306:
   579  000168  9889               	bcf	3977,4,c	;volatile
   580                           
   581                           ;main.c: 197: break;
   582  00016A  0012               	return	
   583  00016C                     l309:
   584  00016C  8889               	bsf	3977,4,c	;volatile
   585                           
   586                           ;main.c: 200: break;
   587  00016E  0012               	return	
   588  000170                     l312:
   589  000170  9A89               	bcf	3977,5,c	;volatile
   590                           
   591                           ;main.c: 203: break;
   592  000172  0012               	return	
   593  000174                     l315:
   594  000174  8A89               	bsf	3977,5,c	;volatile
   595                           
   596                           ;main.c: 206: break;
   597  000176  0012               	return	
   598  000178                     l318:
   599  000178  908D               	bcf	3981,0,c	;volatile
   600                           
   601                           ;main.c: 210: break;
   602  00017A  0012               	return	
   603  00017C                     l321:
   604  00017C  808D               	bsf	3981,0,c	;volatile
   605                           
   606                           ;main.c: 213: break;
   607  00017E  0012               	return	
   608  000180                     l324:
   609  000180  928D               	bcf	3981,1,c	;volatile
   610                           
   611                           ;main.c: 216: break;
   612  000182  0012               	return	
   613  000184                     l327:
   614  000184  828D               	bsf	3981,1,c	;volatile
   615                           
   616                           ;main.c: 219: break;
   617  000186  0012               	return	
   618  000188                     l330:
   619  000188  948D               	bcf	3981,2,c	;volatile
   620                           
   621                           ;main.c: 222: break;
   622  00018A  0012               	return	
   623  00018C                     l333:
   624  00018C  848D               	bsf	3981,2,c	;volatile
   625                           
   626                           ;main.c: 225: break;
   627  00018E  0012               	return	
   628  000190                     l336:
   629  000190  9C89               	bcf	3977,6,c	;volatile
   630                           
   631                           ;main.c: 228: break;
   632  000192  0012               	return	
   633  000194                     l339:
   634  000194  8C89               	bsf	3977,6,c	;volatile
   635                           
   636                           ;main.c: 231: break;
   637  000196  0012               	return	
   638  000198                     l342:
   639  000198  908B               	bcf	3979,0,c	;volatile
   640                           
   641                           ;main.c: 234: break;
   642  00019A  0012               	return	
   643  00019C                     l345:
   644  00019C  808B               	bsf	3979,0,c	;volatile
   645                           
   646                           ;main.c: 237: break;
   647  00019E  0012               	return	
   648  0001A0                     l348:
   649  0001A0  928B               	bcf	3979,1,c	;volatile
   650                           
   651                           ;main.c: 240: break;
   652  0001A2  0012               	return	
   653  0001A4                     l351:
   654  0001A4  828B               	bsf	3979,1,c	;volatile
   655                           
   656                           ;main.c: 243: break;
   657  0001A6  0012               	return	
   658  0001A8                     l354:
   659  0001A8  948B               	bcf	3979,2,c	;volatile
   660                           
   661                           ;main.c: 246: break;
   662  0001AA  0012               	return	
   663  0001AC                     l357:
   664  0001AC  848B               	bsf	3979,2,c	;volatile
   665                           
   666                           ;main.c: 249: break;
   667  0001AE  0012               	return	
   668  0001B0                     l360:
   669  0001B0  908C               	bcf	3980,0,c	;volatile
   670                           
   671                           ;main.c: 252: break;
   672  0001B2  0012               	return	
   673  0001B4                     l363:
   674  0001B4  808C               	bsf	3980,0,c	;volatile
   675                           
   676                           ;main.c: 255: break;
   677  0001B6  0012               	return	
   678  0001B8                     l366:
   679  0001B8  928C               	bcf	3980,1,c	;volatile
   680                           
   681                           ;main.c: 258: break;
   682  0001BA  0012               	return	
   683  0001BC                     l369:
   684  0001BC  828C               	bsf	3980,1,c	;volatile
   685                           
   686                           ;main.c: 261: break;
   687  0001BE  0012               	return	
   688  0001C0                     l372:
   689  0001C0  9089               	bcf	3977,0,c	;volatile
   690  0001C2  D000               	goto	l374
   691  0001C4                     l374:
   692  0001C4  9289               	bcf	3977,1,c	;volatile
   693  0001C6  D000               	goto	l376
   694  0001C8                     l376:
   695  0001C8  9489               	bcf	3977,2,c	;volatile
   696  0001CA  D000               	goto	l378
   697  0001CC                     l378:
   698  0001CC  9689               	bcf	3977,3,c	;volatile
   699  0001CE  D000               	goto	l380
   700  0001D0                     l380:
   701  0001D0  9889               	bcf	3977,4,c	;volatile
   702  0001D2  D000               	goto	l382
   703  0001D4                     l382:
   704  0001D4  9A89               	bcf	3977,5,c	;volatile
   705  0001D6  D000               	goto	l384
   706  0001D8                     l384:
   707  0001D8  908D               	bcf	3981,0,c	;volatile
   708  0001DA  D000               	goto	l386
   709  0001DC                     l386:
   710  0001DC  928D               	bcf	3981,1,c	;volatile
   711  0001DE  D000               	goto	l388
   712  0001E0                     l388:
   713  0001E0  948D               	bcf	3981,2,c	;volatile
   714  0001E2  D000               	goto	l390
   715  0001E4                     l390:
   716  0001E4  9C89               	bcf	3977,6,c	;volatile
   717  0001E6  D000               	goto	l392
   718  0001E8                     l392:
   719  0001E8  908B               	bcf	3979,0,c	;volatile
   720  0001EA  D000               	goto	l394
   721  0001EC                     l394:
   722  0001EC  908C               	bcf	3980,0,c	;volatile
   723  0001EE  D000               	goto	l396
   724  0001F0                     l396:
   725  0001F0  928C               	bcf	3980,1,c	;volatile
   726                           
   727                           ;main.c: 276: break;
   728  0001F2  0012               	return	
   729  0001F4                     l1089:
   730                           
   731                           ;main.c: 278: EUSART1_Write('U');
   732  0001F4  0E55               	movlw	85
   733  0001F6  ECEC  F001         	call	_EUSART1_Write
   734                           
   735                           ;main.c: 280: }
   736                           
   737                           ;main.c: 279: break;
   738  0001FA  0012               	return	
   739  0001FC                     l1093:
   740  0001FC  5036               	movf	relayControl@data,w,c
   741                           
   742                           ; Switch size 1, requested type "space"
   743                           ; Number of cases is 38, Range of values is 2 to 120
   744                           ; switch strategies available:
   745                           ; Name         Instructions Cycles
   746                           ; simple_byte          115    58 (average)
   747                           ;	Chosen strategy is simple_byte
   748  0001FE  0A02               	xorlw	2	; case 2
   749  000200  B4D8               	btfsc	status,2,c
   750  000202  D79E               	goto	l276
   751  000204  0A06               	xorlw	6	; case 4
   752  000206  B4D8               	btfsc	status,2,c
   753  000208  D79F               	goto	l282
   754  00020A  0A01               	xorlw	1	; case 5
   755  00020C  B4D8               	btfsc	status,2,c
   756  00020E  D7A0               	goto	l288
   757  000210  0A03               	xorlw	3	; case 6
   758  000212  B4D8               	btfsc	status,2,c
   759  000214  D7A1               	goto	l294
   760  000216  0A0E               	xorlw	14	; case 8
   761  000218  B4D8               	btfsc	status,2,c
   762  00021A  D7A2               	goto	l300
   763  00021C  0A02               	xorlw	2	; case 10
   764  00021E  B4D8               	btfsc	status,2,c
   765  000220  D7A3               	goto	l306
   766  000222  0A06               	xorlw	6	; case 12
   767  000224  B4D8               	btfsc	status,2,c
   768  000226  D7A4               	goto	l312
   769  000228  0A02               	xorlw	2	; case 14
   770  00022A  B4D8               	btfsc	status,2,c
   771  00022C  D7A5               	goto	l318
   772  00022E  0A1E               	xorlw	30	; case 16
   773  000230  B4D8               	btfsc	status,2,c
   774  000232  D7A6               	goto	l324
   775  000234  0A02               	xorlw	2	; case 18
   776  000236  B4D8               	btfsc	status,2,c
   777  000238  D7A7               	goto	l330
   778  00023A  0A06               	xorlw	6	; case 20
   779  00023C  B4D8               	btfsc	status,2,c
   780  00023E  D7A8               	goto	l336
   781  000240  0A02               	xorlw	2	; case 22
   782  000242  B4D8               	btfsc	status,2,c
   783  000244  D7A9               	goto	l342
   784  000246  0A0E               	xorlw	14	; case 24
   785  000248  B4D8               	btfsc	status,2,c
   786  00024A  D7AA               	goto	l348
   787  00024C  0A02               	xorlw	2	; case 26
   788  00024E  B4D8               	btfsc	status,2,c
   789  000250  D7AB               	goto	l354
   790  000252  0A06               	xorlw	6	; case 28
   791  000254  B4D8               	btfsc	status,2,c
   792  000256  D7AC               	goto	l360
   793  000258  0A02               	xorlw	2	; case 30
   794  00025A  B4D8               	btfsc	status,2,c
   795  00025C  D7AD               	goto	l366
   796  00025E  0A3C               	xorlw	60	; case 34
   797  000260  B4D8               	btfsc	status,2,c
   798  000262  D770               	goto	l279
   799  000264  0A06               	xorlw	6	; case 36
   800  000266  B4D8               	btfsc	status,2,c
   801  000268  D771               	goto	l285
   802  00026A  0A01               	xorlw	1	; case 37
   803  00026C  B4D8               	btfsc	status,2,c
   804  00026E  D772               	goto	l291
   805  000270  0A03               	xorlw	3	; case 38
   806  000272  B4D8               	btfsc	status,2,c
   807  000274  D773               	goto	l297
   808  000276  0A0E               	xorlw	14	; case 40
   809  000278  B4D8               	btfsc	status,2,c
   810  00027A  D774               	goto	l303
   811  00027C  0A02               	xorlw	2	; case 42
   812  00027E  B4D8               	btfsc	status,2,c
   813  000280  D775               	goto	l309
   814  000282  0A06               	xorlw	6	; case 44
   815  000284  B4D8               	btfsc	status,2,c
   816  000286  D776               	goto	l315
   817  000288  0A02               	xorlw	2	; case 46
   818  00028A  B4D8               	btfsc	status,2,c
   819  00028C  D777               	goto	l321
   820  00028E  0A1E               	xorlw	30	; case 48
   821  000290  B4D8               	btfsc	status,2,c
   822  000292  D778               	goto	l327
   823  000294  0A02               	xorlw	2	; case 50
   824  000296  B4D8               	btfsc	status,2,c
   825  000298  D779               	goto	l333
   826  00029A  0A06               	xorlw	6	; case 52
   827  00029C  B4D8               	btfsc	status,2,c
   828  00029E  D77A               	goto	l339
   829  0002A0  0A02               	xorlw	2	; case 54
   830  0002A2  B4D8               	btfsc	status,2,c
   831  0002A4  D77B               	goto	l345
   832  0002A6  0A0E               	xorlw	14	; case 56
   833  0002A8  B4D8               	btfsc	status,2,c
   834  0002AA  D77C               	goto	l351
   835  0002AC  0A02               	xorlw	2	; case 58
   836  0002AE  B4D8               	btfsc	status,2,c
   837  0002B0  D77D               	goto	l357
   838  0002B2  0A06               	xorlw	6	; case 60
   839  0002B4  B4D8               	btfsc	status,2,c
   840  0002B6  D77E               	goto	l363
   841  0002B8  0A02               	xorlw	2	; case 62
   842  0002BA  B4D8               	btfsc	status,2,c
   843  0002BC  D77F               	goto	l369
   844  0002BE  0A77               	xorlw	119	; case 73
   845  0002C0  B4D8               	btfsc	status,2,c
   846  0002C2  D6F3               	goto	l1075
   847  0002C4  0A1D               	xorlw	29	; case 84
   848  0002C6  B4D8               	btfsc	status,2,c
   849  0002C8  D6EC               	goto	l1073
   850  0002CA  0A0C               	xorlw	12	; case 88
   851  0002CC  B4D8               	btfsc	status,2,c
   852  0002CE  D718               	goto	l243
   853  0002D0  0A39               	xorlw	57	; case 97
   854  0002D2  B4D8               	btfsc	status,2,c
   855  0002D4  D711               	goto	l237
   856  0002D6  0A03               	xorlw	3	; case 98
   857  0002D8  B4D8               	btfsc	status,2,c
   858  0002DA  D710               	goto	l240
   859  0002DC  0A1A               	xorlw	26	; case 120
   860  0002DE  B4D8               	btfsc	status,2,c
   861  0002E0  D76F               	goto	l372
   862  0002E2  D788               	goto	l1089
   863  0002E4  0012               	return		;funcret
   864  0002E6                     __end_of_relayControl:
   865                           	opt stack 0
   866                           tblptru	equ	0xFF8
   867                           intcon	equ	0xFF2
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           indf2	equ	0xFDF
   871                           fsr2h	equ	0xFDA
   872                           fsr2l	equ	0xFD9
   873                           status	equ	0xFD8
   874                           
   875 ;; *************** function _EUSART1_Write *****************
   876 ;; Defined at:
   877 ;;		line 132 in file "mcc_generated_files/eusart1.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  txData          1    wreg     unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  txData          1   14[COMRAM] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;		None               void
   884 ;; Registers used:
   885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   891 ;;      Params:         0       0       0       0       0       0       0
   892 ;;      Locals:         1       0       0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0
   894 ;;      Totals:         1       0       0       0       0       0       0
   895 ;;Total ram usage:        1 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    2
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_relayControl
   902 ;;		_putch
   903 ;;		_sendString
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text2
   908  0003D8                     __ptext2:
   909                           	opt stack 0
   910  0003D8                     _EUSART1_Write:
   911                           	opt stack 27
   912                           
   913                           ;incstack = 0
   914                           ;EUSART1_Write@txData stored from wreg
   915  0003D8  6E34               	movwf	EUSART1_Write@txData,c
   916                           
   917                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
   918  0003DA  D000               	goto	l999
   919  0003DC                     l999:
   920  0003DC  503B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   921  0003DE  B4D8               	btfsc	status,2,c
   922  0003E0  D7FD               	goto	l999
   923                           
   924                           ;eusart1.c: 136: }
   925                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
   926  0003E2  B89D               	btfsc	3997,4,c	;volatile
   927  0003E4  D003               	goto	l70
   928                           
   929                           ;eusart1.c: 139: {
   930                           ;eusart1.c: 140: TXREG1 = txData;
   931  0003E6  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   932                           
   933                           ;eusart1.c: 141: }
   934  0003EA  D014               	goto	l1013
   935  0003EC                     l70:
   936                           
   937                           ;eusart1.c: 142: else
   938                           ;eusart1.c: 143: {
   939                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
   940  0003EC  989D               	bcf	3997,4,c	;volatile
   941                           
   942                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
   943  0003EE  5024               	movf	_eusart1TxHead,w,c
   944  0003F0  0D01               	mullw	1
   945  0003F2  0E19               	movlw	low _eusart1TxBuffer
   946  0003F4  24F3               	addwf	prodl,w,c
   947  0003F6  6ED9               	movwf	fsr2l,c
   948  0003F8  0E00               	movlw	high _eusart1TxBuffer
   949  0003FA  20F4               	addwfc	prodh,w,c
   950  0003FC  6EDA               	movwf	fsr2h,c
   951  0003FE  C034  FFDF         	movff	EUSART1_Write@txData,indf2
   952  000402  2A24               	incf	_eusart1TxHead,f,c
   953                           
   954                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
   955  000404  0E07               	movlw	7
   956  000406  6424               	cpfsgt	_eusart1TxHead,c
   957  000408  D003               	goto	l1011
   958                           
   959                           ;eusart1.c: 147: {
   960                           ;eusart1.c: 148: eusart1TxHead = 0;
   961  00040A  0E00               	movlw	0
   962  00040C  6E24               	movwf	_eusart1TxHead,c
   963  00040E  D000               	goto	l1011
   964  000410                     l1011:
   965                           
   966                           ;eusart1.c: 149: }
   967                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
   968  000410  063B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
   969  000412  D000               	goto	l1013
   970  000414                     l1013:
   971                           
   972                           ;eusart1.c: 151: }
   973                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
   974  000414  889D               	bsf	3997,4,c	;volatile
   975  000416  0012               	return		;funcret
   976  000418                     __end_of_EUSART1_Write:
   977                           	opt stack 0
   978                           tblptru	equ	0xFF8
   979                           prodh	equ	0xFF4
   980                           prodl	equ	0xFF3
   981                           intcon	equ	0xFF2
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           indf2	equ	0xFDF
   985                           fsr2h	equ	0xFDA
   986                           fsr2l	equ	0xFD9
   987                           status	equ	0xFD8
   988                           
   989 ;; *************** function _SYSTEM_Initialize *****************
   990 ;; Defined at:
   991 ;;		line 111 in file "mcc_generated_files/mcc.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;		None               void
   998 ;; Registers used:
   999 ;;		wreg, status,2, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1005 ;;      Params:         0       0       0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0
  1008 ;;      Totals:         0       0       0       0       0       0       0
  1009 ;;Total ram usage:        0 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    3
  1012 ;; This function calls:
  1013 ;;		_EUSART1_Initialize
  1014 ;;		_INTERRUPT_Initialize
  1015 ;;		_OSCILLATOR_Initialize
  1016 ;;		_PIN_MANAGER_Initialize
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text3
  1023  0004FE                     __ptext3:
  1024                           	opt stack 0
  1025  0004FE                     _SYSTEM_Initialize:
  1026                           	opt stack 27
  1027                           
  1028                           ;mcc.c: 114: INTERRUPT_Initialize();
  1029                           
  1030                           ;incstack = 0
  1031  0004FE  EC8F  F002         	call	_INTERRUPT_Initialize	;wreg free
  1032                           
  1033                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1034  000502  ECC6  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1035                           
  1036                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1037  000506  EC88  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1038                           
  1039                           ;mcc.c: 117: EUSART1_Initialize();
  1040  00050A  EC29  F002         	call	_EUSART1_Initialize	;wreg free
  1041  00050E  0012               	return		;funcret
  1042  000510                     __end_of_SYSTEM_Initialize:
  1043                           	opt stack 0
  1044                           tblptru	equ	0xFF8
  1045                           prodh	equ	0xFF4
  1046                           prodl	equ	0xFF3
  1047                           intcon	equ	0xFF2
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           indf2	equ	0xFDF
  1051                           fsr2h	equ	0xFDA
  1052                           fsr2l	equ	0xFD9
  1053                           status	equ	0xFD8
  1054                           
  1055 ;; *************** function _PIN_MANAGER_Initialize *****************
  1056 ;; Defined at:
  1057 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;		None               void
  1064 ;; Registers used:
  1065 ;;		wreg, status,2
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1071 ;;      Params:         0       0       0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    2
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_SYSTEM_Initialize
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text4
  1086  00038C                     __ptext4:
  1087                           	opt stack 0
  1088  00038C                     _PIN_MANAGER_Initialize:
  1089                           	opt stack 27
  1090                           
  1091                           ;pin_manager.c: 56: LATE = 0x00;
  1092                           
  1093                           ;incstack = 0
  1094  00038C  0E00               	movlw	0
  1095  00038E  6E8D               	movwf	3981,c	;volatile
  1096                           
  1097                           ;pin_manager.c: 57: LATD = 0x00;
  1098  000390  0E00               	movlw	0
  1099  000392  6E8C               	movwf	3980,c	;volatile
  1100                           
  1101                           ;pin_manager.c: 58: LATA = 0x00;
  1102  000394  0E00               	movlw	0
  1103  000396  6E89               	movwf	3977,c	;volatile
  1104                           
  1105                           ;pin_manager.c: 59: LATB = 0x00;
  1106  000398  0E00               	movlw	0
  1107  00039A  6E8A               	movwf	3978,c	;volatile
  1108                           
  1109                           ;pin_manager.c: 60: LATC = 0x00;
  1110  00039C  0E00               	movlw	0
  1111  00039E  6E8B               	movwf	3979,c	;volatile
  1112                           
  1113                           ;pin_manager.c: 65: TRISE = 0x00;
  1114  0003A0  0E00               	movlw	0
  1115  0003A2  6E96               	movwf	3990,c	;volatile
  1116                           
  1117                           ;pin_manager.c: 66: TRISA = 0x80;
  1118  0003A4  0E80               	movlw	128
  1119  0003A6  6E92               	movwf	3986,c	;volatile
  1120                           
  1121                           ;pin_manager.c: 67: TRISB = 0xBF;
  1122  0003A8  0EBF               	movlw	191
  1123  0003AA  6E93               	movwf	3987,c	;volatile
  1124                           
  1125                           ;pin_manager.c: 68: TRISC = 0xB8;
  1126  0003AC  0EB8               	movlw	184
  1127  0003AE  6E94               	movwf	3988,c	;volatile
  1128                           
  1129                           ;pin_manager.c: 69: TRISD = 0xFC;
  1130  0003B0  0EFC               	movlw	252
  1131  0003B2  6E95               	movwf	3989,c	;volatile
  1132                           
  1133                           ;pin_manager.c: 74: ANSELC = 0x38;
  1134  0003B4  0E38               	movlw	56
  1135  0003B6  010F               	movlb	15	; () banked
  1136  0003B8  6F3A               	movwf	58,b	;volatile
  1137                           
  1138                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1139  0003BA  0E3F               	movlw	63
  1140  0003BC  010F               	movlb	15	; () banked
  1141  0003BE  6F39               	movwf	57,b	;volatile
  1142                           
  1143                           ;pin_manager.c: 76: ANSELD = 0x00;
  1144  0003C0  0E00               	movlw	0
  1145  0003C2  010F               	movlb	15	; () banked
  1146  0003C4  6F3B               	movwf	59,b	;volatile
  1147                           
  1148                           ;pin_manager.c: 77: ANSELE = 0x00;
  1149  0003C6  0E00               	movlw	0
  1150  0003C8  010F               	movlb	15	; () banked
  1151  0003CA  6F3C               	movwf	60,b	;volatile
  1152                           
  1153                           ;pin_manager.c: 78: ANSELA = 0x00;
  1154  0003CC  0E00               	movlw	0
  1155  0003CE  010F               	movlb	15	; () banked
  1156  0003D0  6F38               	movwf	56,b	;volatile
  1157                           
  1158                           ; BSR set to: 15
  1159                           ;pin_manager.c: 83: WPUB = 0xFF;
  1160  0003D2  6861               	setf	3937,c	;volatile
  1161                           
  1162                           ; BSR set to: 15
  1163                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1164  0003D4  9EF1               	bcf	intcon2,7,c	;volatile
  1165                           
  1166                           ; BSR set to: 15
  1167  0003D6  0012               	return		;funcret
  1168  0003D8                     __end_of_PIN_MANAGER_Initialize:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           prodh	equ	0xFF4
  1172                           prodl	equ	0xFF3
  1173                           intcon	equ	0xFF2
  1174                           intcon2	equ	0xFF1
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           indf2	equ	0xFDF
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function _OSCILLATOR_Initialize *****************
  1183 ;; Defined at:
  1184 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;		None               void
  1191 ;; Registers used:
  1192 ;;		wreg, status,2
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         0       0       0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    2
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_SYSTEM_Initialize
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text5
  1213  000510                     __ptext5:
  1214                           	opt stack 0
  1215  000510                     _OSCILLATOR_Initialize:
  1216                           	opt stack 27
  1217                           
  1218                           ;mcc.c: 123: OSCCON = 0x60;
  1219                           
  1220                           ; BSR set to: 15
  1221                           ;incstack = 0
  1222  000510  0E60               	movlw	96
  1223  000512  6ED3               	movwf	4051,c	;volatile
  1224                           
  1225                           ;mcc.c: 125: OSCCON2 = 0x04;
  1226  000514  0E04               	movlw	4
  1227  000516  6ED2               	movwf	4050,c	;volatile
  1228                           
  1229                           ;mcc.c: 127: OSCTUNE = 0x00;
  1230  000518  0E00               	movlw	0
  1231  00051A  6E9B               	movwf	3995,c	;volatile
  1232  00051C  0012               	return		;funcret
  1233  00051E                     __end_of_OSCILLATOR_Initialize:
  1234                           	opt stack 0
  1235                           tblptru	equ	0xFF8
  1236                           prodh	equ	0xFF4
  1237                           prodl	equ	0xFF3
  1238                           intcon	equ	0xFF2
  1239                           intcon2	equ	0xFF1
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           indf2	equ	0xFDF
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           status	equ	0xFD8
  1246                           
  1247 ;; *************** function _INTERRUPT_Initialize *****************
  1248 ;; Defined at:
  1249 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;		None               void
  1256 ;; Registers used:
  1257 ;;		None
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1263 ;;      Params:         0       0       0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0
  1266 ;;      Totals:         0       0       0       0       0       0       0
  1267 ;;Total ram usage:        0 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    2
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_SYSTEM_Initialize
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text6
  1278  00051E                     __ptext6:
  1279                           	opt stack 0
  1280  00051E                     _INTERRUPT_Initialize:
  1281                           	opt stack 27
  1282                           
  1283                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1284                           
  1285                           ;incstack = 0
  1286  00051E  9ED0               	bcf	4048,7,c	;volatile
  1287  000520  0012               	return		;funcret
  1288  000522                     __end_of_INTERRUPT_Initialize:
  1289                           	opt stack 0
  1290                           tblptru	equ	0xFF8
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           intcon	equ	0xFF2
  1294                           intcon2	equ	0xFF1
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           indf2	equ	0xFDF
  1298                           fsr2h	equ	0xFDA
  1299                           fsr2l	equ	0xFD9
  1300                           status	equ	0xFD8
  1301                           
  1302 ;; *************** function _EUSART1_Initialize *****************
  1303 ;; Defined at:
  1304 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;		None               void
  1311 ;; Registers used:
  1312 ;;		wreg, status,2
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         0       0       0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    2
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_SYSTEM_Initialize
  1329 ;;		_sendString
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text7
  1334  000452                     __ptext7:
  1335                           	opt stack 0
  1336  000452                     _EUSART1_Initialize:
  1337                           	opt stack 27
  1338                           
  1339                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1340                           
  1341                           ;incstack = 0
  1342  000452  9A9D               	bcf	3997,5,c	;volatile
  1343                           
  1344                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1345  000454  989D               	bcf	3997,4,c	;volatile
  1346                           
  1347                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1348  000456  0E08               	movlw	8
  1349  000458  6EB8               	movwf	4024,c	;volatile
  1350                           
  1351                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1352  00045A  0E90               	movlw	144
  1353  00045C  6EAB               	movwf	4011,c	;volatile
  1354                           
  1355                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1356  00045E  0E24               	movlw	36
  1357  000460  6EAC               	movwf	4012,c	;volatile
  1358                           
  1359                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1360  000462  0ECF               	movlw	207
  1361  000464  6EAF               	movwf	4015,c	;volatile
  1362                           
  1363                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1364  000466  0E00               	movlw	0
  1365  000468  6EB0               	movwf	4016,c	;volatile
  1366                           
  1367                           ;eusart1.c: 100: eusart1TxHead = 0;
  1368  00046A  0E00               	movlw	0
  1369  00046C  6E24               	movwf	_eusart1TxHead,c
  1370                           
  1371                           ;eusart1.c: 101: eusart1TxTail = 0;
  1372  00046E  0E00               	movlw	0
  1373  000470  6E25               	movwf	_eusart1TxTail,c
  1374                           
  1375                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1376  000472  0E08               	movlw	8
  1377  000474  6E3B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1378                           
  1379                           ;eusart1.c: 104: eusart1RxHead = 0;
  1380  000476  0E00               	movlw	0
  1381  000478  6E22               	movwf	_eusart1RxHead,c
  1382                           
  1383                           ;eusart1.c: 105: eusart1RxTail = 0;
  1384  00047A  0E00               	movlw	0
  1385  00047C  6E23               	movwf	_eusart1RxTail,c
  1386                           
  1387                           ;eusart1.c: 106: eusart1RxCount = 0;
  1388  00047E  0E00               	movlw	0
  1389  000480  6E21               	movwf	_eusart1RxCount,c	;volatile
  1390                           
  1391                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1392  000482  8A9D               	bsf	3997,5,c	;volatile
  1393  000484  0012               	return		;funcret
  1394  000486                     __end_of_EUSART1_Initialize:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           prodh	equ	0xFF4
  1398                           prodl	equ	0xFF3
  1399                           intcon	equ	0xFF2
  1400                           intcon2	equ	0xFF1
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           indf2	equ	0xFDF
  1404                           fsr2h	equ	0xFDA
  1405                           fsr2l	equ	0xFD9
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _EUSART1_Read *****************
  1409 ;; Defined at:
  1410 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  readValue       1   14[COMRAM] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      unsigned char 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1424 ;;      Params:         0       0       0       0       0       0       0
  1425 ;;      Locals:         1       0       0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0
  1427 ;;      Totals:         1       0       0       0       0       0       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    2
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;;		_getch
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text8
  1440  000418                     __ptext8:
  1441                           	opt stack 0
  1442  000418                     _EUSART1_Read:
  1443                           	opt stack 28
  1444                           
  1445                           ;eusart1.c: 114: uint8_t readValue = 0;
  1446                           
  1447                           ;incstack = 0
  1448  000418  0E00               	movlw	0
  1449  00041A  6E34               	movwf	EUSART1_Read@readValue,c
  1450                           
  1451                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1452  00041C  D000               	goto	l1025
  1453  00041E                     l1025:
  1454  00041E  5021               	movf	_eusart1RxCount,w,c	;volatile
  1455  000420  B4D8               	btfsc	status,2,c
  1456  000422  D7FD               	goto	l1025
  1457                           
  1458                           ;eusart1.c: 118: }
  1459                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1460  000424  5023               	movf	_eusart1RxTail,w,c
  1461  000426  0D01               	mullw	1
  1462  000428  0E11               	movlw	low _eusart1RxBuffer
  1463  00042A  24F3               	addwf	prodl,w,c
  1464  00042C  6ED9               	movwf	fsr2l,c
  1465  00042E  0E00               	movlw	high _eusart1RxBuffer
  1466  000430  20F4               	addwfc	prodh,w,c
  1467  000432  6EDA               	movwf	fsr2h,c
  1468  000434  50DF               	movf	indf2,w,c
  1469  000436  6E34               	movwf	EUSART1_Read@readValue,c
  1470  000438  2A23               	incf	_eusart1RxTail,f,c
  1471                           
  1472                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1473  00043A  0E07               	movlw	7
  1474  00043C  6423               	cpfsgt	_eusart1RxTail,c
  1475  00043E  D003               	goto	l1035
  1476                           
  1477                           ;eusart1.c: 122: {
  1478                           ;eusart1.c: 123: eusart1RxTail = 0;
  1479  000440  0E00               	movlw	0
  1480  000442  6E23               	movwf	_eusart1RxTail,c
  1481  000444  D000               	goto	l1035
  1482  000446                     l1035:
  1483                           
  1484                           ;eusart1.c: 124: }
  1485                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1486  000446  9A9D               	bcf	3997,5,c	;volatile
  1487                           
  1488                           ;eusart1.c: 126: eusart1RxCount--;
  1489  000448  0621               	decf	_eusart1RxCount,f,c	;volatile
  1490                           
  1491                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1492  00044A  8A9D               	bsf	3997,5,c	;volatile
  1493                           
  1494                           ;eusart1.c: 129: return readValue;
  1495  00044C  5034               	movf	EUSART1_Read@readValue,w,c
  1496  00044E  0012               	return	
  1497  000450  0012               	return		;funcret
  1498  000452                     __end_of_EUSART1_Read:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           prodh	equ	0xFF4
  1502                           prodl	equ	0xFF3
  1503                           intcon	equ	0xFF2
  1504                           intcon2	equ	0xFF1
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           indf2	equ	0xFDF
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _INTERRUPT_InterruptManager *****************
  1513 ;; Defined at:
  1514 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;		None               void
  1521 ;; Registers used:
  1522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         0       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0
  1530 ;;      Temps:         14       0       0       0       0       0       0
  1531 ;;      Totals:        14       0       0       0       0       0       0
  1532 ;;Total ram usage:       14 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    1
  1535 ;; This function calls:
  1536 ;;		_EUSART1_Receive_ISR
  1537 ;;		_EUSART1_Transmit_ISR
  1538 ;; This function is called by:
  1539 ;;		Interrupt level 2
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	intcode
  1544  000008                     __pintcode:
  1545                           	opt stack 0
  1546  000008                     _INTERRUPT_InterruptManager:
  1547                           	opt stack 27
  1548                           
  1549                           ;incstack = 0
  1550  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1551  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1552  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1553  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1554  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1555  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1556  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1557  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1558  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1559  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1560  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1561  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1562  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1563  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1564                           
  1565                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1566  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1567  000042  A89D               	btfss	3997,4,c	;volatile
  1568  000044  D005               	goto	i2l148
  1569  000046  A89E               	btfss	3998,4,c	;volatile
  1570  000048  D003               	goto	i2l148
  1571                           
  1572                           ;interrupt_manager.c: 61: {
  1573                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1574  00004A  EC43  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  1575                           
  1576                           ;interrupt_manager.c: 63: }
  1577  00004E  D008               	goto	i2l152
  1578  000050                     i2l148:
  1579                           
  1580                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1581  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1582  000052  AA9D               	btfss	3997,5,c	;volatile
  1583  000054  D005               	goto	i2l152
  1584  000056  AA9E               	btfss	3998,5,c	;volatile
  1585  000058  D003               	goto	i2l152
  1586                           
  1587                           ;interrupt_manager.c: 65: {
  1588                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1589  00005A  EC5C  F002         	call	_EUSART1_Receive_ISR	;wreg free
  1590                           
  1591                           ;interrupt_manager.c: 68: else
  1592                           ;interrupt_manager.c: 69: {
  1593                           
  1594                           ;interrupt_manager.c: 67: }
  1595  00005E  D000               	goto	i2l152
  1596  000060                     i2l152:
  1597  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1598  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1599  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1600  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1601  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1602  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1603  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1604  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1605  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1606  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1607  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1608  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1609  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1610  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1611  000098  0011               	retfie		f
  1612  00009A                     __end_of_INTERRUPT_InterruptManager:
  1613                           	opt stack 0
  1614                           pclatu	equ	0xFFB
  1615                           pclath	equ	0xFFA
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           prodh	equ	0xFF4
  1621                           prodl	equ	0xFF3
  1622                           intcon	equ	0xFF2
  1623                           intcon2	equ	0xFF1
  1624                           postinc0	equ	0xFEE
  1625                           fsr0h	equ	0xFEA
  1626                           fsr0l	equ	0xFE9
  1627                           wreg	equ	0xFE8
  1628                           fsr1h	equ	0xFE2
  1629                           fsr1l	equ	0xFE1
  1630                           indf2	equ	0xFDF
  1631                           fsr2h	equ	0xFDA
  1632                           fsr2l	equ	0xFD9
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _EUSART1_Transmit_ISR *****************
  1636 ;; Defined at:
  1637 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;		None               void
  1644 ;; Registers used:
  1645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1651 ;;      Params:         0       0       0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_INTERRUPT_InterruptManager
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text10
  1665  000486                     __ptext10:
  1666                           	opt stack 0
  1667  000486                     _EUSART1_Transmit_ISR:
  1668                           	opt stack 27
  1669                           
  1670                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1671                           
  1672                           ;incstack = 0
  1673  000486  0E08               	movlw	8
  1674  000488  603B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1675  00048A  D013               	goto	i2l82
  1676                           
  1677                           ;eusart1.c: 170: {
  1678                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1679  00048C  5025               	movf	_eusart1TxTail,w,c
  1680  00048E  0D01               	mullw	1
  1681  000490  0E19               	movlw	low _eusart1TxBuffer
  1682  000492  24F3               	addwf	prodl,w,c
  1683  000494  6ED9               	movwf	fsr2l,c
  1684  000496  0E00               	movlw	high _eusart1TxBuffer
  1685  000498  20F4               	addwfc	prodh,w,c
  1686  00049A  6EDA               	movwf	fsr2h,c
  1687  00049C  50DF               	movf	indf2,w,c
  1688  00049E  6EAD               	movwf	4013,c	;volatile
  1689  0004A0  2A25               	incf	_eusart1TxTail,f,c
  1690                           
  1691                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1692  0004A2  0E07               	movlw	7
  1693  0004A4  6425               	cpfsgt	_eusart1TxTail,c
  1694  0004A6  D003               	goto	i2l1055
  1695                           
  1696                           ;eusart1.c: 173: {
  1697                           ;eusart1.c: 174: eusart1TxTail = 0;
  1698  0004A8  0E00               	movlw	0
  1699  0004AA  6E25               	movwf	_eusart1TxTail,c
  1700  0004AC  D000               	goto	i2l1055
  1701  0004AE                     i2l1055:
  1702                           
  1703                           ;eusart1.c: 175: }
  1704                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1705  0004AE  2A3B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1706                           
  1707                           ;eusart1.c: 177: }
  1708  0004B0  0012               	return	
  1709  0004B2                     i2l82:
  1710                           
  1711                           ;eusart1.c: 178: else
  1712                           ;eusart1.c: 179: {
  1713                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1714  0004B2  989D               	bcf	3997,4,c	;volatile
  1715  0004B4  0012               	return	
  1716  0004B6  0012               	return		;funcret
  1717  0004B8                     __end_of_EUSART1_Transmit_ISR:
  1718                           	opt stack 0
  1719                           pclatu	equ	0xFFB
  1720                           pclath	equ	0xFFA
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           prodh	equ	0xFF4
  1726                           prodl	equ	0xFF3
  1727                           intcon	equ	0xFF2
  1728                           intcon2	equ	0xFF1
  1729                           postinc0	equ	0xFEE
  1730                           fsr0h	equ	0xFEA
  1731                           fsr0l	equ	0xFE9
  1732                           wreg	equ	0xFE8
  1733                           fsr1h	equ	0xFE2
  1734                           fsr1l	equ	0xFE1
  1735                           indf2	equ	0xFDF
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _EUSART1_Receive_ISR *****************
  1741 ;; Defined at:
  1742 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1756 ;;      Params:         0       0       0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_INTERRUPT_InterruptManager
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text11
  1770  0004B8                     __ptext11:
  1771                           	opt stack 0
  1772  0004B8                     _EUSART1_Receive_ISR:
  1773                           	opt stack 27
  1774                           
  1775                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1776                           
  1777                           ;incstack = 0
  1778  0004B8  A2AB               	btfss	4011,1,c	;volatile
  1779  0004BA  D003               	goto	i2l1061
  1780                           
  1781                           ;eusart1.c: 188: {
  1782                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1783  0004BC  98AB               	bcf	4011,4,c	;volatile
  1784                           
  1785                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1786  0004BE  88AB               	bsf	4011,4,c	;volatile
  1787  0004C0  D000               	goto	i2l1061
  1788  0004C2                     i2l1061:
  1789                           
  1790                           ;eusart1.c: 193: }
  1791                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1792  0004C2  5022               	movf	_eusart1RxHead,w,c
  1793  0004C4  0D01               	mullw	1
  1794  0004C6  0E11               	movlw	low _eusart1RxBuffer
  1795  0004C8  24F3               	addwf	prodl,w,c
  1796  0004CA  6ED9               	movwf	fsr2l,c
  1797  0004CC  0E00               	movlw	high _eusart1RxBuffer
  1798  0004CE  20F4               	addwfc	prodh,w,c
  1799  0004D0  6EDA               	movwf	fsr2h,c
  1800  0004D2  CFAE FFDF          	movff	4014,indf2	;volatile
  1801  0004D6  2A22               	incf	_eusart1RxHead,f,c
  1802                           
  1803                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1804  0004D8  0E07               	movlw	7
  1805  0004DA  6422               	cpfsgt	_eusart1RxHead,c
  1806  0004DC  D003               	goto	i2l1069
  1807                           
  1808                           ;eusart1.c: 198: {
  1809                           ;eusart1.c: 199: eusart1RxHead = 0;
  1810  0004DE  0E00               	movlw	0
  1811  0004E0  6E22               	movwf	_eusart1RxHead,c
  1812  0004E2  D000               	goto	i2l1069
  1813  0004E4                     i2l1069:
  1814                           
  1815                           ;eusart1.c: 200: }
  1816                           ;eusart1.c: 201: eusart1RxCount++;
  1817  0004E4  2A21               	incf	_eusart1RxCount,f,c	;volatile
  1818  0004E6  0012               	return		;funcret
  1819  0004E8                     __end_of_EUSART1_Receive_ISR:
  1820                           	opt stack 0
  1821  0000                     pclatu	equ	0xFFB
  1822                           pclath	equ	0xFFA
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           prodh	equ	0xFF4
  1828                           prodl	equ	0xFF3
  1829                           intcon	equ	0xFF2
  1830                           intcon2	equ	0xFF1
  1831                           postinc0	equ	0xFEE
  1832                           fsr0h	equ	0xFEA
  1833                           fsr0l	equ	0xFE9
  1834                           wreg	equ	0xFE8
  1835                           fsr1h	equ	0xFE2
  1836                           fsr1l	equ	0xFE1
  1837                           indf2	equ	0xFDF
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           pclatu	equ	0xFFB
  1842                           pclath	equ	0xFFA
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           prodh	equ	0xFF4
  1848                           prodl	equ	0xFF3
  1849                           intcon	equ	0xFF2
  1850                           intcon2	equ	0xFF1
  1851                           postinc0	equ	0xFEE
  1852                           fsr0h	equ	0xFEA
  1853                           fsr0l	equ	0xFE9
  1854                           wreg	equ	0xFE8
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           indf2	equ	0xFDF
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862                           	psect	rparam
  1863  0000                     pclatu	equ	0xFFB
  1864                           pclath	equ	0xFFA
  1865                           tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           prodh	equ	0xFF4
  1870                           prodl	equ	0xFF3
  1871                           intcon	equ	0xFF2
  1872                           intcon2	equ	0xFF1
  1873                           postinc0	equ	0xFEE
  1874                           fsr0h	equ	0xFEA
  1875                           fsr0l	equ	0xFE9
  1876                           wreg	equ	0xFE8
  1877                           fsr1h	equ	0xFE2
  1878                           fsr1l	equ	0xFE1
  1879                           indf2	equ	0xFDF
  1880                           fsr2h	equ	0xFDA
  1881                           fsr2l	equ	0xFD9
  1882                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_relayControl
    _relayControl->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                             19 COMRAM     1     1      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      3B       1       62.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       9        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jul 20 17:00:51 2017

           _eusart1TxBufferRemaining 003B                                   l70 03EC  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l300 0160  
                                l303 0164                                  l312 0170  
                                l240 00FC                                  l321 017C  
                                l330 0188                                  l306 0168  
                                l315 0174                                  l251 0110  
                                l243 0100                                  l324 0180  
                                l333 018C                                  l309 016C  
                                l261 0124                                  l253 0114  
                                l245 0104                                  l237 00F8  
                                l342 0198                                  l318 0178  
                                l351 01A4                                  l327 0184  
                                l271 0138                                  l263 0128  
                                l255 0118                                  l247 0108  
                                l360 01B0                                  l336 0190  
                                l345 019C                                  l273 013C  
                                l265 012C                                  l257 011C  
                                l249 010C                                  l354 01A8  
                                l282 0148                                  l363 01B4  
                                l339 0194                                  l291 0154  
                                l267 0130                                  l259 0120  
                                l380 01D0                                  l372 01C0  
                                l348 01A0                                  l276 0140  
                                l357 01AC                                  l285 014C  
                                l269 0134                                  l390 01E4  
                                l382 01D4                                  l374 01C4  
                                l366 01B8                                  l294 0158  
                                l279 0144                                  l392 01E8  
                                l384 01D8                                  l376 01C8  
                                l288 0150                                  l369 01BC  
                                l297 015C                                  l394 01EC  
                                l386 01DC                                  l378 01CC  
                                l396 01F0                                  l388 01E0  
                                l999 03DC                         __CFG_CPB$OFF 000000  
                                u100 00C4                                  u110 00F6  
                                u207 00DE                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
                               l1011 0410                                 l1013 0414  
                               l1025 041E                                 l1035 0446  
                               l1081 00C6                                 l1073 00A2  
                               l1161 0340                                 l1075 00AA  
                               l1171 0354                                 l1163 0344  
                               l1155 0334                                 l1093 01FC  
                               l1181 0368                                 l1173 0358  
                               l1165 0348                                 l1157 0338  
                               l1183 036C                                 l1175 035C  
                               l1167 034C                                 l1159 033C  
                               l1089 01F4                                 l1185 0370  
                               l1177 0360                                 l1169 0350  
                               l1187 037E                                 l1179 0364  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l82 04B2  
                               _WPUB 000F61                        _EUSART1_Write 03D8  
                               _main 02E6                        ?_EUSART1_Read 0026  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 009A  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 051E  
                              ?_main 0026                       __CFG_DEBUG$OFF 000000  
                              i2l152 0060                                i2l148 0050  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _TFNum 003A  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 0486                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                       ?_EUSART1_Write 0026  
                              tablat 000FF5                       ??_EUSART1_Read 0034  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 04E8  
         __end_of_EUSART1_Initialize 0486                         __end_of_main 038C  
        ?_INTERRUPT_InterruptManager 0026                               ??_main 0039  
                      __activetblptr 000002                ?_EUSART1_Transmit_ISR 0026  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               i2l1061 04C2  
                             i2l1055 04AE                               i2l1069 04E4  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                     __CFG_STVREN$ON 000000                               clear_0 04EE  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      ??_EUSART1_Write 0034  
                    _eusart1RxBuffer 0011        __size_of_INTERRUPT_Initialize 0004  
                    _eusart1TxBuffer 0019                    _SYSTEM_Initialize 04FE  
                         __accesstop 0060              __end_of__initialization 04F4  
                 ?_SYSTEM_Initialize 0026                        ___rparam_used 000001  
                     __pcstackCOMRAM 0026                  ??_SYSTEM_Initialize 0034  
               __end_of_EUSART1_Read 0452               ??_EUSART1_Transmit_ISR 0026  
        __end_of_EUSART1_Receive_ISR 04E8                        ?_relayControl 0026  
          __end_of_SYSTEM_Initialize 0510                        _eusart1RxHead 0022  
                      _eusart1TxHead 0024                        _eusart1RxTail 0023  
                      _eusart1TxTail 0025                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 003A                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                              _OSCCON2 000FD2  
                     ??_relayControl 0035                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                            __pcinit 04E8                              __ramtop 0600  
                            __ptext0 02E6                              __ptext1 009E  
                            __ptext2 03D8                              __ptext3 04FE  
                            __ptext4 038C                              __ptext5 0510  
                            __ptext6 051E                              __ptext7 0452  
                            __ptext8 0418                _OSCILLATOR_Initialize 0510  
                 _EUSART1_Initialize 0452             ??_PIN_MANAGER_Initialize 0034  
         __size_of_SYSTEM_Initialize 0012                 end_of_initialization 04F4  
                ?_EUSART1_Initialize 0026                        __Lmediumconst 0000  
                            postinc0 000FEE                __size_of_EUSART1_Read 003A  
               ??_EUSART1_Initialize 0034                  EUSART1_Write@txData 0034  
                         main@RxData 0039                         _EUSART1_Read 0418  
               __end_of_relayControl 02E6         __end_of_INTERRUPT_Initialize 0522  
             ?_OSCILLATOR_Initialize 0026                  start_initialization 04E8  
    __size_of_PIN_MANAGER_Initialize 004C                __end_of_EUSART1_Write 0418  
                     _eusart1RxCount 0021                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                    relayControl@count 0037  
       __size_of_EUSART1_Receive_ISR 0030               _PIN_MANAGER_Initialize 038C  
                          __pintcode 0008         ??_INTERRUPT_InterruptManager 0026  
                   __CFG_PRICLKEN$ON 000000                             _BAUDCON1 000FB8  
               _INTERRUPT_Initialize 051E                             _LATAbits 000F89  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
                           _LATDbits 000F8C                             _LATEbits 000F8D  
              __size_of_relayControl 0248                             _PIE1bits 000F9D  
__size_of_INTERRUPT_InterruptManager 0092                             _PIR1bits 000F9E  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                       _relayControl 009E                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0026                EUSART1_Read@readValue 0034  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0034          __size_of_EUSART1_Initialize 0034  
                   relayControl@data 0036                             __ptext10 0486  
                           __ptext11 04B8                        __size_of_main 00A6  
                           _site0_IL 0001   __end_of_INTERRUPT_InterruptManager 009A  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 04B8  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 0034  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0026  
            ?_PIN_MANAGER_Initialize 0026                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 04B8               __size_of_EUSART1_Write 0040  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0026  
     __end_of_PIN_MANAGER_Initialize 03D8                    __CFG_FOSC$INTIO67 000000  
