

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Apr 09 15:08:18 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	nvCOMRAM
    25  00003A                     __pnvCOMRAM:
    26                           	opt stack 0
    27  00003A                     _TFNum:
    28                           	opt stack 0
    29  00003A                     	ds	1
    30  00003B                     _eusart1TxBufferRemaining:
    31                           	opt stack 0
    32  00003B                     	ds	1
    33  0000                     _ANSELA	set	3896
    34  0000                     _ANSELB	set	3897
    35  0000                     _ANSELC	set	3898
    36  0000                     _ANSELD	set	3899
    37  0000                     _ANSELE	set	3900
    38  0000                     _BAUDCON1	set	4024
    39  0000                     _INTCON2bits	set	4081
    40  0000                     _INTCONbits	set	4082
    41  0000                     _LATA	set	3977
    42  0000                     _LATAbits	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATBbits	set	3978
    45  0000                     _LATC	set	3979
    46  0000                     _LATCbits	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _LATDbits	set	3980
    49  0000                     _LATE	set	3981
    50  0000                     _LATEbits	set	3981
    51  0000                     _OSCCON	set	4051
    52  0000                     _OSCCON2	set	4050
    53  0000                     _OSCTUNE	set	3995
    54  0000                     _PIE1bits	set	3997
    55  0000                     _PIR1bits	set	3998
    56  0000                     _RCONbits	set	4048
    57  0000                     _RCREG1	set	4014
    58  0000                     _RCSTA1	set	4011
    59  0000                     _RCSTA1bits	set	4011
    60  0000                     _SPBRG1	set	4015
    61  0000                     _SPBRGH1	set	4016
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISE	set	3990
    67  0000                     _TXREG1	set	4013
    68  0000                     _TXSTA1	set	4012
    69  0000                     _WPUB	set	3937
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  00054C                     __pcinit:
    75                           	opt stack 0
    76  00054C                     start_initialization:
    77                           	opt stack 0
    78  00054C                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (37 bytes)
    82  00054C  EE00  F001         	lfsr	0,__pbssCOMRAM
    83  000550  0E25               	movlw	37
    84  000552                     clear_0:
    85  000552  6AEE               	clrf	postinc0,c
    86  000554  06E8               	decf	wreg,f,c
    87  000556  E1FD               	bnz	clear_0
    88  000558                     end_of_initialization:
    89                           	opt stack 0
    90  000558                     __end_of__initialization:
    91                           	opt stack 0
    92  000558  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  00055A  6EF8               	movwf	tblptru,c
    94  00055C  0100               	movlb	0
    95  00055E  EFA5  F001         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000001                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000001                     _site0_IL:
   104                           	opt stack 0
   105  000001                     	ds	16
   106  000011                     _eusart1RxBuffer:
   107                           	opt stack 0
   108  000011                     	ds	8
   109  000019                     _eusart1TxBuffer:
   110                           	opt stack 0
   111  000019                     	ds	8
   112  000021                     _eusart1RxCount:
   113                           	opt stack 0
   114  000021                     	ds	1
   115  000022                     _eusart1RxHead:
   116                           	opt stack 0
   117  000022                     	ds	1
   118  000023                     _eusart1RxTail:
   119                           	opt stack 0
   120  000023                     	ds	1
   121  000024                     _eusart1TxHead:
   122                           	opt stack 0
   123  000024                     	ds	1
   124  000025                     _eusart1TxTail:
   125                           	opt stack 0
   126  000025                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	cstackCOMRAM
   132  000026                     __pcstackCOMRAM:
   133                           	opt stack 0
   134  000026                     ??_INTERRUPT_InterruptManager:
   135  000026                     
   136                           ; 1 bytes @ 0x0
   137  000026                     	ds	14
   138  000034                     EUSART1_Read@readValue:
   139                           	opt stack 0
   140  000034                     EUSART1_Write@txData:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0xE
   144  000034                     	ds	1
   145  000035                     ??_relayControl:
   146                           
   147                           ; 0 bytes @ 0xF
   148  000035                     	ds	1
   149  000036                     relayControl@data:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x10
   153  000036                     	ds	1
   154  000037                     relayControl@count:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x11
   158  000037                     	ds	2
   159  000039                     main@RxData:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x13
   163  000039                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 26 in file "main.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;  RxData          1   19[COMRAM] unsigned char 
   178 ;; Return value:  Size  Location     Type
   179 ;;		None               void
   180 ;; Registers used:
   181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   187 ;;      Params:         0       0       0       0       0       0       0
   188 ;;      Locals:         1       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0
   190 ;;      Totals:         1       0       0       0       0       0       0
   191 ;;Total ram usage:        1 bytes
   192 ;; Hardware stack levels required when called:    4
   193 ;; This function calls:
   194 ;;		_EUSART1_Read
   195 ;;		_SYSTEM_Initialize
   196 ;;		_relayControl
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  00034A                     __ptext0:
   204                           	opt stack 0
   205  00034A                     _main:
   206                           	opt stack 27
   207                           
   208                           ;main.c: 29: SYSTEM_Initialize();
   209                           
   210                           ;incstack = 0
   211  00034A  ECB1  F002         	call	_SYSTEM_Initialize	;wreg free
   212                           
   213                           ;main.c: 31: (INTCONbits.GIE = 1);
   214  00034E  8EF2               	bsf	intcon,7,c	;volatile
   215                           
   216                           ;main.c: 32: (INTCONbits.PEIE = 1);
   217  000350  8CF2               	bsf	intcon,6,c	;volatile
   218                           
   219                           ;main.c: 34: char RxData;
   220                           ;main.c: 36: TFNum = '5';
   221  000352  0E35               	movlw	53
   222  000354  6E3A               	movwf	_TFNum,c
   223                           
   224                           ;main.c: 37: site0_IL[0] = '3';
   225  000356  0E33               	movlw	51
   226  000358  6E01               	movwf	_site0_IL,c
   227                           
   228                           ;main.c: 38: site0_IL[1] = '.';
   229  00035A  0E2E               	movlw	46
   230  00035C  6E02               	movwf	_site0_IL+1,c
   231                           
   232                           ;main.c: 39: site0_IL[2] = '9';
   233  00035E  0E39               	movlw	57
   234  000360  6E03               	movwf	_site0_IL+2,c
   235                           
   236                           ;main.c: 40: site0_IL[3] = '4';
   237  000362  0E34               	movlw	52
   238  000364  6E04               	movwf	_site0_IL+3,c
   239                           
   240                           ;main.c: 42: site0_IL[4] = '3';
   241  000366  0E33               	movlw	51
   242  000368  6E05               	movwf	_site0_IL+4,c
   243                           
   244                           ;main.c: 43: site0_IL[5] = '7';
   245  00036A  0E37               	movlw	55
   246  00036C  6E06               	movwf	_site0_IL+5,c
   247                           
   248                           ;main.c: 44: site0_IL[6] = '.';
   249  00036E  0E2E               	movlw	46
   250  000370  6E07               	movwf	_site0_IL+6,c
   251                           
   252                           ;main.c: 45: site0_IL[7] = '9';
   253  000372  0E39               	movlw	57
   254  000374  6E08               	movwf	_site0_IL+7,c
   255                           
   256                           ;main.c: 47: site0_IL[8] = '1';
   257  000376  0E31               	movlw	49
   258  000378  6E09               	movwf	_site0_IL+8,c
   259                           
   260                           ;main.c: 48: site0_IL[9] = '5';
   261  00037A  0E35               	movlw	53
   262  00037C  6E0A               	movwf	_site0_IL+9,c
   263                           
   264                           ;main.c: 49: site0_IL[10] = '.';
   265  00037E  0E2E               	movlw	46
   266  000380  6E0B               	movwf	_site0_IL+10,c
   267                           
   268                           ;main.c: 50: site0_IL[11] = '4';
   269  000382  0E34               	movlw	52
   270  000384  6E0C               	movwf	_site0_IL+11,c
   271                           
   272                           ;main.c: 52: site0_IL[12] = '5';
   273  000386  0E35               	movlw	53
   274  000388  6E0D               	movwf	_site0_IL+12,c
   275                           
   276                           ;main.c: 53: site0_IL[13] = '.';
   277  00038A  0E2E               	movlw	46
   278  00038C  6E0E               	movwf	_site0_IL+13,c
   279                           
   280                           ;main.c: 54: site0_IL[14] = '8';
   281  00038E  0E38               	movlw	56
   282  000390  6E0F               	movwf	_site0_IL+14,c
   283                           
   284                           ;main.c: 55: site0_IL[15] = '7';
   285  000392  0E37               	movlw	55
   286  000394  6E10               	movwf	_site0_IL+15,c
   287  000396  D000               	goto	l1193
   288  000398                     l1193:
   289  000398  9089               	bcf	3977,0,c	;volatile
   290  00039A  D000               	goto	l1195
   291  00039C                     l1195:
   292  00039C  9289               	bcf	3977,1,c	;volatile
   293  00039E  D000               	goto	l1197
   294  0003A0                     l1197:
   295  0003A0  9489               	bcf	3977,2,c	;volatile
   296  0003A2  D000               	goto	l1199
   297  0003A4                     l1199:
   298  0003A4  9689               	bcf	3977,3,c	;volatile
   299  0003A6  D000               	goto	l1201
   300  0003A8                     l1201:
   301  0003A8  9889               	bcf	3977,4,c	;volatile
   302  0003AA  D000               	goto	l1203
   303  0003AC                     l1203:
   304  0003AC  9A89               	bcf	3977,5,c	;volatile
   305  0003AE  D000               	goto	l1205
   306  0003B0                     l1205:
   307  0003B0  908D               	bcf	3981,0,c	;volatile
   308  0003B2  D000               	goto	l1207
   309  0003B4                     l1207:
   310  0003B4  928D               	bcf	3981,1,c	;volatile
   311  0003B6  D000               	goto	l1209
   312  0003B8                     l1209:
   313  0003B8  948D               	bcf	3981,2,c	;volatile
   314  0003BA  D000               	goto	l1211
   315  0003BC                     l1211:
   316  0003BC  9C89               	bcf	3977,6,c	;volatile
   317  0003BE  D000               	goto	l1213
   318  0003C0                     l1213:
   319  0003C0  908B               	bcf	3979,0,c	;volatile
   320  0003C2  D000               	goto	l1215
   321  0003C4                     l1215:
   322  0003C4  928B               	bcf	3979,1,c	;volatile
   323  0003C6  D000               	goto	l1217
   324  0003C8                     l1217:
   325  0003C8  948B               	bcf	3979,2,c	;volatile
   326  0003CA  D000               	goto	l1219
   327  0003CC                     l1219:
   328  0003CC  908C               	bcf	3980,0,c	;volatile
   329  0003CE  D000               	goto	l1221
   330  0003D0                     l1221:
   331  0003D0  928C               	bcf	3980,1,c	;volatile
   332                           
   333                           ;main.c: 75: {
   334                           ;main.c: 84: while((eusart1RxCount)){
   335                           
   336                           ;main.c: 74: while (1)
   337  0003D2  D007               	goto	l1225
   338  0003D4                     l1223:
   339                           
   340                           ;main.c: 86: RxData = EUSART1_Read();
   341  0003D4  EC3E  F002         	call	_EUSART1_Read	;wreg free
   342  0003D8  6E39               	movwf	main@RxData,c
   343                           
   344                           ;main.c: 103: relayControl(RxData);
   345  0003DA  5039               	movf	main@RxData,w,c
   346  0003DC  EC4F  F000         	call	_relayControl
   347  0003E0  D000               	goto	l1225
   348  0003E2                     l1225:
   349  0003E2  5021               	movf	_eusart1RxCount,w,c	;volatile
   350  0003E4  B4D8               	btfsc	status,2,c
   351  0003E6  D7FD               	goto	l1225
   352  0003E8  D7F5               	goto	l1223
   353                           
   354                           ;main.c: 104: };
   355  0003EA  D7FB               	goto	l1225
   356  0003EC  EF4D  F000         	goto	start
   357  0003F0                     __end_of_main:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           intcon	equ	0xFF2
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           status	equ	0xFD8
   364                           
   365 ;; *************** function _relayControl *****************
   366 ;; Defined at:
   367 ;;		line 120 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  data            1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  data            1   16[COMRAM] unsigned char 
   372 ;;  count           2   17[COMRAM] int 
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         3       0       0       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		_EUSART1_Write
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  00009E                     __ptext1:
   398                           	opt stack 0
   399  00009E                     _relayControl:
   400                           	opt stack 27
   401                           
   402                           ;incstack = 0
   403                           ;relayControl@data stored from wreg
   404  00009E  6E36               	movwf	relayControl@data,c
   405                           
   406                           ;main.c: 121: switch (data){
   407  0000A0  D0CD               	goto	l1131
   408  0000A2                     l1111:
   409                           
   410                           ;main.c: 123: EUSART1_Write(TFNum);
   411  0000A2  503A               	movf	_TFNum,w,c
   412  0000A4  EC1E  F002         	call	_EUSART1_Write
   413                           
   414                           ;main.c: 124: break;
   415  0000A8  0012               	return	
   416  0000AA                     l1113:
   417                           
   418                           ;main.c: 126: for (int count=0; count<16; count++){
   419  0000AA  0E00               	movlw	0
   420  0000AC  6E38               	movwf	relayControl@count+1,c
   421  0000AE  0E00               	movlw	0
   422  0000B0  6E37               	movwf	relayControl@count,c
   423  0000B2  BE38               	btfsc	relayControl@count+1,7,c
   424  0000B4  D008               	goto	l1119
   425  0000B6  5038               	movf	relayControl@count+1,w,c
   426  0000B8  E105               	bnz	u100
   427  0000BA  0E10               	movlw	16
   428  0000BC  5C37               	subwf	relayControl@count,w,c
   429  0000BE  B0D8               	btfsc	status,0,c
   430  0000C0  0012               	return	
   431  0000C2  D001               	goto	l1119
   432  0000C4                     u100:
   433  0000C4  0012               	return	
   434  0000C6                     l1119:
   435                           
   436                           ;main.c: 127: EUSART1_Write(site0_IL[count]);
   437  0000C6  0E01               	movlw	low _site0_IL
   438  0000C8  2437               	addwf	relayControl@count,w,c
   439  0000CA  6ED9               	movwf	fsr2l,c
   440  0000CC  0E00               	movlw	high _site0_IL
   441  0000CE  2038               	addwfc	relayControl@count+1,w,c
   442  0000D0  6EDA               	movwf	fsr2h,c
   443  0000D2  50DF               	movf	indf2,w,c
   444  0000D4  EC1E  F002         	call	_EUSART1_Write
   445                           
   446                           ;main.c: 128: _delay((unsigned long)((25)*(8000000/4000.0)));
   447  0000D8  0E41               	movlw	65
   448  0000DA  6E35               	movwf	??_relayControl& (0+255),c
   449  0000DC  0EEE               	movlw	238
   450  0000DE                     u207:
   451  0000DE  2EE8               	decfsz	wreg,f,c
   452  0000E0  D7FE               	goto	u207
   453  0000E2  2E35               	decfsz	??_relayControl& (0+255),f,c
   454  0000E4  D7FC               	goto	u207
   455  0000E6  D000               	nop2	
   456  0000E8  4A37               	infsnz	relayControl@count,f,c
   457  0000EA  2A38               	incf	relayControl@count+1,f,c
   458  0000EC  BE38               	btfsc	relayControl@count+1,7,c
   459  0000EE  D7EB               	goto	l1119
   460  0000F0  5038               	movf	relayControl@count+1,w,c
   461  0000F2  E101               	bnz	u110
   462  0000F4  D7E2               	goto	L1
   463  0000F6                     u110:
   464                           
   465                           ;main.c: 129: }
   466                           ;main.c: 130: break;
   467  0000F6  0012               	return	
   468  0000F8                     l237:
   469  0000F8  908C               	bcf	3980,0,c	;volatile
   470                           
   471                           ;main.c: 133: break;
   472  0000FA  0012               	return	
   473  0000FC                     l240:
   474  0000FC  808C               	bsf	3980,0,c	;volatile
   475                           
   476                           ;main.c: 136: break;
   477  0000FE  0012               	return	
   478  000100                     l243:
   479  000100  9089               	bcf	3977,0,c	;volatile
   480  000102  D000               	goto	l245
   481  000104                     l245:
   482  000104  9289               	bcf	3977,1,c	;volatile
   483  000106  D000               	goto	l247
   484  000108                     l247:
   485  000108  9489               	bcf	3977,2,c	;volatile
   486  00010A  D000               	goto	l249
   487  00010C                     l249:
   488  00010C  9689               	bcf	3977,3,c	;volatile
   489  00010E  D000               	goto	l251
   490  000110                     l251:
   491  000110  9889               	bcf	3977,4,c	;volatile
   492  000112  D000               	goto	l253
   493  000114                     l253:
   494  000114  9A89               	bcf	3977,5,c	;volatile
   495  000116  D000               	goto	l255
   496  000118                     l255:
   497  000118  908D               	bcf	3981,0,c	;volatile
   498  00011A  D000               	goto	l257
   499  00011C                     l257:
   500  00011C  928D               	bcf	3981,1,c	;volatile
   501  00011E  D000               	goto	l259
   502  000120                     l259:
   503  000120  948D               	bcf	3981,2,c	;volatile
   504  000122  D000               	goto	l261
   505  000124                     l261:
   506  000124  9C89               	bcf	3977,6,c	;volatile
   507  000126  D000               	goto	l263
   508  000128                     l263:
   509  000128  908B               	bcf	3979,0,c	;volatile
   510  00012A  D000               	goto	l265
   511  00012C                     l265:
   512  00012C  928B               	bcf	3979,1,c	;volatile
   513  00012E  D000               	goto	l267
   514  000130                     l267:
   515  000130  948B               	bcf	3979,2,c	;volatile
   516  000132  D000               	goto	l269
   517  000134                     l269:
   518  000134  908C               	bcf	3980,0,c	;volatile
   519  000136  D000               	goto	l271
   520  000138                     l271:
   521  000138  928C               	bcf	3980,1,c	;volatile
   522  00013A  D000               	goto	l273
   523  00013C                     l273:
   524  00013C  9C8A               	bcf	3978,6,c	;volatile
   525  00013E  D000               	goto	l275
   526  000140                     l275:
   527  000140  9E8A               	bcf	3978,7,c	;volatile
   528  000142  D000               	goto	l277
   529  000144                     l277:
   530  000144  968A               	bcf	3978,3,c	;volatile
   531  000146  D000               	goto	l279
   532  000148                     l279:
   533  000148  948A               	bcf	3978,2,c	;volatile
   534  00014A  D000               	goto	l281
   535  00014C                     l281:
   536  00014C  928A               	bcf	3978,1,c	;volatile
   537  00014E  D000               	goto	l283
   538  000150                     l283:
   539  000150  908A               	bcf	3978,0,c	;volatile
   540  000152  D000               	goto	l285
   541  000154                     l285:
   542  000154  9E8C               	bcf	3980,7,c	;volatile
   543                           
   544                           ;main.c: 163: break;
   545  000156  0012               	return	
   546  000158                     l288:
   547  000158  9089               	bcf	3977,0,c	;volatile
   548                           
   549                           ;main.c: 166: break;
   550  00015A  0012               	return	
   551  00015C                     l291:
   552  00015C  8089               	bsf	3977,0,c	;volatile
   553                           
   554                           ;main.c: 169: break;
   555  00015E  0012               	return	
   556  000160                     l294:
   557  000160  9289               	bcf	3977,1,c	;volatile
   558                           
   559                           ;main.c: 174: break;
   560  000162  0012               	return	
   561  000164                     l297:
   562  000164  8289               	bsf	3977,1,c	;volatile
   563                           
   564                           ;main.c: 177: break;
   565  000166  0012               	return	
   566  000168                     l300:
   567  000168  9C8A               	bcf	3978,6,c	;volatile
   568                           
   569                           ;main.c: 180: break;
   570  00016A  0012               	return	
   571  00016C                     l303:
   572  00016C  8C8A               	bsf	3978,6,c	;volatile
   573                           
   574                           ;main.c: 183: break;
   575  00016E  0012               	return	
   576  000170                     l306:
   577  000170  9489               	bcf	3977,2,c	;volatile
   578                           
   579                           ;main.c: 187: break;
   580  000172  0012               	return	
   581  000174                     l309:
   582  000174  8489               	bsf	3977,2,c	;volatile
   583                           
   584                           ;main.c: 190: break;
   585  000176  0012               	return	
   586  000178                     l312:
   587  000178  9689               	bcf	3977,3,c	;volatile
   588                           
   589                           ;main.c: 193: break;
   590  00017A  0012               	return	
   591  00017C                     l315:
   592  00017C  8689               	bsf	3977,3,c	;volatile
   593                           
   594                           ;main.c: 196: break;
   595  00017E  0012               	return	
   596  000180                     l318:
   597  000180  9889               	bcf	3977,4,c	;volatile
   598                           
   599                           ;main.c: 199: break;
   600  000182  0012               	return	
   601  000184                     l321:
   602  000184  8889               	bsf	3977,4,c	;volatile
   603                           
   604                           ;main.c: 202: break;
   605  000186  0012               	return	
   606  000188                     l324:
   607  000188  9A89               	bcf	3977,5,c	;volatile
   608                           
   609                           ;main.c: 205: break;
   610  00018A  0012               	return	
   611  00018C                     l327:
   612  00018C  8A89               	bsf	3977,5,c	;volatile
   613                           
   614                           ;main.c: 208: break;
   615  00018E  0012               	return	
   616  000190                     l330:
   617  000190  908D               	bcf	3981,0,c	;volatile
   618                           
   619                           ;main.c: 212: break;
   620  000192  0012               	return	
   621  000194                     l333:
   622  000194  808D               	bsf	3981,0,c	;volatile
   623                           
   624                           ;main.c: 215: break;
   625  000196  0012               	return	
   626  000198                     l336:
   627  000198  928D               	bcf	3981,1,c	;volatile
   628                           
   629                           ;main.c: 218: break;
   630  00019A  0012               	return	
   631  00019C                     l339:
   632  00019C  828D               	bsf	3981,1,c	;volatile
   633                           
   634                           ;main.c: 221: break;
   635  00019E  0012               	return	
   636  0001A0                     l342:
   637  0001A0  948D               	bcf	3981,2,c	;volatile
   638                           
   639                           ;main.c: 224: break;
   640  0001A2  0012               	return	
   641  0001A4                     l345:
   642  0001A4  848D               	bsf	3981,2,c	;volatile
   643                           
   644                           ;main.c: 227: break;
   645  0001A6  0012               	return	
   646  0001A8                     l348:
   647  0001A8  9C89               	bcf	3977,6,c	;volatile
   648                           
   649                           ;main.c: 230: break;
   650  0001AA  0012               	return	
   651  0001AC                     l351:
   652  0001AC  8C89               	bsf	3977,6,c	;volatile
   653                           
   654                           ;main.c: 233: break;
   655  0001AE  0012               	return	
   656  0001B0                     l354:
   657  0001B0  908B               	bcf	3979,0,c	;volatile
   658                           
   659                           ;main.c: 236: break;
   660  0001B2  0012               	return	
   661  0001B4                     l357:
   662  0001B4  808B               	bsf	3979,0,c	;volatile
   663                           
   664                           ;main.c: 239: break;
   665  0001B6  0012               	return	
   666  0001B8                     l360:
   667  0001B8  928B               	bcf	3979,1,c	;volatile
   668                           
   669                           ;main.c: 242: break;
   670  0001BA  0012               	return	
   671  0001BC                     l363:
   672  0001BC  828B               	bsf	3979,1,c	;volatile
   673                           
   674                           ;main.c: 245: break;
   675  0001BE  0012               	return	
   676  0001C0                     l366:
   677  0001C0  948B               	bcf	3979,2,c	;volatile
   678                           
   679                           ;main.c: 248: break;
   680  0001C2  0012               	return	
   681  0001C4                     l369:
   682  0001C4  848B               	bsf	3979,2,c	;volatile
   683                           
   684                           ;main.c: 251: break;
   685  0001C6  0012               	return	
   686  0001C8                     l372:
   687  0001C8  908C               	bcf	3980,0,c	;volatile
   688                           
   689                           ;main.c: 254: break;
   690  0001CA  0012               	return	
   691  0001CC                     l375:
   692  0001CC  808C               	bsf	3980,0,c	;volatile
   693                           
   694                           ;main.c: 257: break;
   695  0001CE  0012               	return	
   696  0001D0                     l378:
   697  0001D0  9E8A               	bcf	3978,7,c	;volatile
   698                           
   699                           ;main.c: 260: break;
   700  0001D2  0012               	return	
   701  0001D4                     l381:
   702  0001D4  8E8A               	bsf	3978,7,c	;volatile
   703                           
   704                           ;main.c: 263: break;
   705  0001D6  0012               	return	
   706  0001D8                     l384:
   707  0001D8  9089               	bcf	3977,0,c	;volatile
   708  0001DA  D000               	goto	l386
   709  0001DC                     l386:
   710  0001DC  9289               	bcf	3977,1,c	;volatile
   711  0001DE  D000               	goto	l388
   712  0001E0                     l388:
   713  0001E0  9489               	bcf	3977,2,c	;volatile
   714  0001E2  D000               	goto	l390
   715  0001E4                     l390:
   716  0001E4  9689               	bcf	3977,3,c	;volatile
   717  0001E6  D000               	goto	l392
   718  0001E8                     l392:
   719  0001E8  9889               	bcf	3977,4,c	;volatile
   720  0001EA  D000               	goto	l394
   721  0001EC                     l394:
   722  0001EC  9A89               	bcf	3977,5,c	;volatile
   723  0001EE  D000               	goto	l396
   724  0001F0                     l396:
   725  0001F0  908D               	bcf	3981,0,c	;volatile
   726  0001F2  D000               	goto	l398
   727  0001F4                     l398:
   728  0001F4  928D               	bcf	3981,1,c	;volatile
   729  0001F6  D000               	goto	l400
   730  0001F8                     l400:
   731  0001F8  948D               	bcf	3981,2,c	;volatile
   732  0001FA  D000               	goto	l402
   733  0001FC                     l402:
   734  0001FC  9C89               	bcf	3977,6,c	;volatile
   735  0001FE  D000               	goto	l404
   736  000200                     l404:
   737  000200  908B               	bcf	3979,0,c	;volatile
   738  000202  D000               	goto	l406
   739  000204                     l406:
   740  000204  928B               	bcf	3979,1,c	;volatile
   741  000206  D000               	goto	l408
   742  000208                     l408:
   743  000208  948B               	bcf	3979,2,c	;volatile
   744  00020A  D000               	goto	l410
   745  00020C                     l410:
   746  00020C  908C               	bcf	3980,0,c	;volatile
   747  00020E  D000               	goto	l412
   748  000210                     l412:
   749  000210  928C               	bcf	3980,1,c	;volatile
   750  000212  D000               	goto	l414
   751  000214                     l414:
   752  000214  9C8A               	bcf	3978,6,c	;volatile
   753  000216  D000               	goto	l416
   754  000218                     l416:
   755  000218  9E8A               	bcf	3978,7,c	;volatile
   756                           
   757                           ;main.c: 282: break;
   758  00021A  0012               	return	
   759  00021C                     l419:
   760  00021C  868A               	bsf	3978,3,c	;volatile
   761                           
   762                           ;main.c: 288: break;
   763  00021E  0012               	return	
   764  000220                     l422:
   765  000220  848A               	bsf	3978,2,c	;volatile
   766                           
   767                           ;main.c: 291: break;
   768  000222  0012               	return	
   769  000224                     l425:
   770  000224  828A               	bsf	3978,1,c	;volatile
   771                           
   772                           ;main.c: 294: break;
   773  000226  0012               	return	
   774  000228                     l428:
   775  000228  8E8A               	bsf	3978,7,c	;volatile
   776                           
   777                           ;main.c: 297: break;
   778  00022A  0012               	return	
   779  00022C                     l431:
   780  00022C  808A               	bsf	3978,0,c	;volatile
   781                           
   782                           ;main.c: 300: break;
   783  00022E  0012               	return	
   784  000230                     l434:
   785  000230  8E8C               	bsf	3980,7,c	;volatile
   786                           
   787                           ;main.c: 303: break;
   788  000232  0012               	return	
   789  000234                     l1127:
   790                           
   791                           ;main.c: 305: EUSART1_Write('U');
   792  000234  0E55               	movlw	85
   793  000236  EC1E  F002         	call	_EUSART1_Write
   794                           
   795                           ;main.c: 307: }
   796                           
   797                           ;main.c: 306: break;
   798  00023A  0012               	return	
   799  00023C                     l1131:
   800  00023C  5036               	movf	relayControl@data,w,c
   801                           
   802                           ; Switch size 1, requested type "space"
   803                           ; Number of cases is 44, Range of values is 2 to 120
   804                           ; switch strategies available:
   805                           ; Name         Instructions Cycles
   806                           ; simple_byte          133    67 (average)
   807                           ;	Chosen strategy is simple_byte
   808  00023E  0A02               	xorlw	2	; case 2
   809  000240  B4D8               	btfsc	status,2,c
   810  000242  D78A               	goto	l288
   811  000244  0A06               	xorlw	6	; case 4
   812  000246  B4D8               	btfsc	status,2,c
   813  000248  D78B               	goto	l294
   814  00024A  0A01               	xorlw	1	; case 5
   815  00024C  B4D8               	btfsc	status,2,c
   816  00024E  D78C               	goto	l300
   817  000250  0A03               	xorlw	3	; case 6
   818  000252  B4D8               	btfsc	status,2,c
   819  000254  D78D               	goto	l306
   820  000256  0A0E               	xorlw	14	; case 8
   821  000258  B4D8               	btfsc	status,2,c
   822  00025A  D78E               	goto	l312
   823  00025C  0A02               	xorlw	2	; case 10
   824  00025E  B4D8               	btfsc	status,2,c
   825  000260  D78F               	goto	l318
   826  000262  0A06               	xorlw	6	; case 12
   827  000264  B4D8               	btfsc	status,2,c
   828  000266  D790               	goto	l324
   829  000268  0A02               	xorlw	2	; case 14
   830  00026A  B4D8               	btfsc	status,2,c
   831  00026C  D791               	goto	l330
   832  00026E  0A1E               	xorlw	30	; case 16
   833  000270  B4D8               	btfsc	status,2,c
   834  000272  D792               	goto	l336
   835  000274  0A02               	xorlw	2	; case 18
   836  000276  B4D8               	btfsc	status,2,c
   837  000278  D793               	goto	l342
   838  00027A  0A06               	xorlw	6	; case 20
   839  00027C  B4D8               	btfsc	status,2,c
   840  00027E  D794               	goto	l348
   841  000280  0A02               	xorlw	2	; case 22
   842  000282  B4D8               	btfsc	status,2,c
   843  000284  D795               	goto	l354
   844  000286  0A0E               	xorlw	14	; case 24
   845  000288  B4D8               	btfsc	status,2,c
   846  00028A  D796               	goto	l360
   847  00028C  0A02               	xorlw	2	; case 26
   848  00028E  B4D8               	btfsc	status,2,c
   849  000290  D797               	goto	l366
   850  000292  0A06               	xorlw	6	; case 28
   851  000294  B4D8               	btfsc	status,2,c
   852  000296  D798               	goto	l372
   853  000298  0A02               	xorlw	2	; case 30
   854  00029A  B4D8               	btfsc	status,2,c
   855  00029C  D799               	goto	l378
   856  00029E  0A3C               	xorlw	60	; case 34
   857  0002A0  B4D8               	btfsc	status,2,c
   858  0002A2  D75C               	goto	l291
   859  0002A4  0A01               	xorlw	1	; case 35
   860  0002A6  B4D8               	btfsc	status,2,c
   861  0002A8  D7BF               	goto	l428
   862  0002AA  0A07               	xorlw	7	; case 36
   863  0002AC  B4D8               	btfsc	status,2,c
   864  0002AE  D75A               	goto	l297
   865  0002B0  0A01               	xorlw	1	; case 37
   866  0002B2  B4D8               	btfsc	status,2,c
   867  0002B4  D75B               	goto	l303
   868  0002B6  0A03               	xorlw	3	; case 38
   869  0002B8  B4D8               	btfsc	status,2,c
   870  0002BA  D75C               	goto	l309
   871  0002BC  0A0E               	xorlw	14	; case 40
   872  0002BE  B4D8               	btfsc	status,2,c
   873  0002C0  D75D               	goto	l315
   874  0002C2  0A02               	xorlw	2	; case 42
   875  0002C4  B4D8               	btfsc	status,2,c
   876  0002C6  D75E               	goto	l321
   877  0002C8  0A01               	xorlw	1	; case 43
   878  0002CA  B4D8               	btfsc	status,2,c
   879  0002CC  D7A7               	goto	l419
   880  0002CE  0A07               	xorlw	7	; case 44
   881  0002D0  B4D8               	btfsc	status,2,c
   882  0002D2  D75C               	goto	l327
   883  0002D4  0A01               	xorlw	1	; case 45
   884  0002D6  B4D8               	btfsc	status,2,c
   885  0002D8  D7A3               	goto	l422
   886  0002DA  0A03               	xorlw	3	; case 46
   887  0002DC  B4D8               	btfsc	status,2,c
   888  0002DE  D75A               	goto	l333
   889  0002E0  0A01               	xorlw	1	; case 47
   890  0002E2  B4D8               	btfsc	status,2,c
   891  0002E4  D79F               	goto	l425
   892  0002E6  0A1F               	xorlw	31	; case 48
   893  0002E8  B4D8               	btfsc	status,2,c
   894  0002EA  D758               	goto	l339
   895  0002EC  0A01               	xorlw	1	; case 49
   896  0002EE  B4D8               	btfsc	status,2,c
   897  0002F0  D79D               	goto	l431
   898  0002F2  0A03               	xorlw	3	; case 50
   899  0002F4  B4D8               	btfsc	status,2,c
   900  0002F6  D756               	goto	l345
   901  0002F8  0A01               	xorlw	1	; case 51
   902  0002FA  B4D8               	btfsc	status,2,c
   903  0002FC  D799               	goto	l434
   904  0002FE  0A07               	xorlw	7	; case 52
   905  000300  B4D8               	btfsc	status,2,c
   906  000302  D754               	goto	l351
   907  000304  0A02               	xorlw	2	; case 54
   908  000306  B4D8               	btfsc	status,2,c
   909  000308  D755               	goto	l357
   910  00030A  0A0E               	xorlw	14	; case 56
   911  00030C  B4D8               	btfsc	status,2,c
   912  00030E  D756               	goto	l363
   913  000310  0A02               	xorlw	2	; case 58
   914  000312  B4D8               	btfsc	status,2,c
   915  000314  D757               	goto	l369
   916  000316  0A06               	xorlw	6	; case 60
   917  000318  B4D8               	btfsc	status,2,c
   918  00031A  D758               	goto	l375
   919  00031C  0A02               	xorlw	2	; case 62
   920  00031E  B4D8               	btfsc	status,2,c
   921  000320  D759               	goto	l381
   922  000322  0A77               	xorlw	119	; case 73
   923  000324  B4D8               	btfsc	status,2,c
   924  000326  D6C1               	goto	l1113
   925  000328  0A1D               	xorlw	29	; case 84
   926  00032A  B4D8               	btfsc	status,2,c
   927  00032C  D6BA               	goto	l1111
   928  00032E  0A0C               	xorlw	12	; case 88
   929  000330  B4D8               	btfsc	status,2,c
   930  000332  D6E6               	goto	l243
   931  000334  0A39               	xorlw	57	; case 97
   932  000336  B4D8               	btfsc	status,2,c
   933  000338  D6DF               	goto	l237
   934  00033A  0A03               	xorlw	3	; case 98
   935  00033C  B4D8               	btfsc	status,2,c
   936  00033E  D6DE               	goto	l240
   937  000340  0A1A               	xorlw	26	; case 120
   938  000342  B4D8               	btfsc	status,2,c
   939  000344  D749               	goto	l384
   940  000346  D776               	goto	l1127
   941  000348  0012               	return		;funcret
   942  00034A                     __end_of_relayControl:
   943                           	opt stack 0
   944                           tblptru	equ	0xFF8
   945                           intcon	equ	0xFF2
   946                           postinc0	equ	0xFEE
   947                           wreg	equ	0xFE8
   948                           indf2	equ	0xFDF
   949                           fsr2h	equ	0xFDA
   950                           fsr2l	equ	0xFD9
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function _EUSART1_Write *****************
   954 ;; Defined at:
   955 ;;		line 132 in file "mcc_generated_files/eusart1.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  txData          1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  txData          1   14[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;		None               void
   962 ;; Registers used:
   963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   969 ;;      Params:         0       0       0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0
   972 ;;      Totals:         1       0       0       0       0       0       0
   973 ;;Total ram usage:        1 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    2
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_relayControl
   980 ;;		_putch
   981 ;;		_sendString
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text2
   986  00043C                     __ptext2:
   987                           	opt stack 0
   988  00043C                     _EUSART1_Write:
   989                           	opt stack 27
   990                           
   991                           ;incstack = 0
   992                           ;EUSART1_Write@txData stored from wreg
   993  00043C  6E34               	movwf	EUSART1_Write@txData,c
   994                           
   995                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
   996  00043E  D000               	goto	l1037
   997  000440                     l1037:
   998  000440  503B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   999  000442  B4D8               	btfsc	status,2,c
  1000  000444  D7FD               	goto	l1037
  1001                           
  1002                           ;eusart1.c: 136: }
  1003                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
  1004  000446  B89D               	btfsc	3997,4,c	;volatile
  1005  000448  D003               	goto	l70
  1006                           
  1007                           ;eusart1.c: 139: {
  1008                           ;eusart1.c: 140: TXREG1 = txData;
  1009  00044A  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1010                           
  1011                           ;eusart1.c: 141: }
  1012  00044E  D014               	goto	l1051
  1013  000450                     l70:
  1014                           
  1015                           ;eusart1.c: 142: else
  1016                           ;eusart1.c: 143: {
  1017                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
  1018  000450  989D               	bcf	3997,4,c	;volatile
  1019                           
  1020                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
  1021  000452  5024               	movf	_eusart1TxHead,w,c
  1022  000454  0D01               	mullw	1
  1023  000456  0E19               	movlw	low _eusart1TxBuffer
  1024  000458  24F3               	addwf	prodl,w,c
  1025  00045A  6ED9               	movwf	fsr2l,c
  1026  00045C  0E00               	movlw	high _eusart1TxBuffer
  1027  00045E  20F4               	addwfc	prodh,w,c
  1028  000460  6EDA               	movwf	fsr2h,c
  1029  000462  C034  FFDF         	movff	EUSART1_Write@txData,indf2
  1030  000466  2A24               	incf	_eusart1TxHead,f,c
  1031                           
  1032                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1033  000468  0E07               	movlw	7
  1034  00046A  6424               	cpfsgt	_eusart1TxHead,c
  1035  00046C  D003               	goto	l1049
  1036                           
  1037                           ;eusart1.c: 147: {
  1038                           ;eusart1.c: 148: eusart1TxHead = 0;
  1039  00046E  0E00               	movlw	0
  1040  000470  6E24               	movwf	_eusart1TxHead,c
  1041  000472  D000               	goto	l1049
  1042  000474                     l1049:
  1043                           
  1044                           ;eusart1.c: 149: }
  1045                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  1046  000474  063B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1047  000476  D000               	goto	l1051
  1048  000478                     l1051:
  1049                           
  1050                           ;eusart1.c: 151: }
  1051                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
  1052  000478  889D               	bsf	3997,4,c	;volatile
  1053  00047A  0012               	return		;funcret
  1054  00047C                     __end_of_EUSART1_Write:
  1055                           	opt stack 0
  1056                           tblptru	equ	0xFF8
  1057                           prodh	equ	0xFF4
  1058                           prodl	equ	0xFF3
  1059                           intcon	equ	0xFF2
  1060                           postinc0	equ	0xFEE
  1061                           wreg	equ	0xFE8
  1062                           indf2	equ	0xFDF
  1063                           fsr2h	equ	0xFDA
  1064                           fsr2l	equ	0xFD9
  1065                           status	equ	0xFD8
  1066                           
  1067 ;; *************** function _SYSTEM_Initialize *****************
  1068 ;; Defined at:
  1069 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;		None               void
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1083 ;;      Params:         0       0       0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    3
  1090 ;; This function calls:
  1091 ;;		_EUSART1_Initialize
  1092 ;;		_INTERRUPT_Initialize
  1093 ;;		_OSCILLATOR_Initialize
  1094 ;;		_PIN_MANAGER_Initialize
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text3
  1101  000562                     __ptext3:
  1102                           	opt stack 0
  1103  000562                     _SYSTEM_Initialize:
  1104                           	opt stack 27
  1105                           
  1106                           ;mcc.c: 114: INTERRUPT_Initialize();
  1107                           
  1108                           ;incstack = 0
  1109  000562  ECC1  F002         	call	_INTERRUPT_Initialize	;wreg free
  1110                           
  1111                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1112  000566  ECF8  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1113                           
  1114                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1115  00056A  ECBA  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1116                           
  1117                           ;mcc.c: 117: EUSART1_Initialize();
  1118  00056E  EC5B  F002         	call	_EUSART1_Initialize	;wreg free
  1119  000572  0012               	return		;funcret
  1120  000574                     __end_of_SYSTEM_Initialize:
  1121                           	opt stack 0
  1122                           tblptru	equ	0xFF8
  1123                           prodh	equ	0xFF4
  1124                           prodl	equ	0xFF3
  1125                           intcon	equ	0xFF2
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           indf2	equ	0xFDF
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           status	equ	0xFD8
  1132                           
  1133 ;; *************** function _PIN_MANAGER_Initialize *****************
  1134 ;; Defined at:
  1135 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;		None               void
  1142 ;; Registers used:
  1143 ;;		wreg, status,2
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1149 ;;      Params:         0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    2
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_SYSTEM_Initialize
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text4
  1164  0003F0                     __ptext4:
  1165                           	opt stack 0
  1166  0003F0                     _PIN_MANAGER_Initialize:
  1167                           	opt stack 27
  1168                           
  1169                           ;pin_manager.c: 56: LATE = 0x00;
  1170                           
  1171                           ;incstack = 0
  1172  0003F0  0E00               	movlw	0
  1173  0003F2  6E8D               	movwf	3981,c	;volatile
  1174                           
  1175                           ;pin_manager.c: 57: LATD = 0x00;
  1176  0003F4  0E00               	movlw	0
  1177  0003F6  6E8C               	movwf	3980,c	;volatile
  1178                           
  1179                           ;pin_manager.c: 58: LATA = 0x00;
  1180  0003F8  0E00               	movlw	0
  1181  0003FA  6E89               	movwf	3977,c	;volatile
  1182                           
  1183                           ;pin_manager.c: 59: LATB = 0x00;
  1184  0003FC  0E00               	movlw	0
  1185  0003FE  6E8A               	movwf	3978,c	;volatile
  1186                           
  1187                           ;pin_manager.c: 60: LATC = 0x00;
  1188  000400  0E00               	movlw	0
  1189  000402  6E8B               	movwf	3979,c	;volatile
  1190                           
  1191                           ;pin_manager.c: 65: TRISE = 0x00;
  1192  000404  0E00               	movlw	0
  1193  000406  6E96               	movwf	3990,c	;volatile
  1194                           
  1195                           ;pin_manager.c: 66: TRISA = 0x00;
  1196  000408  0E00               	movlw	0
  1197  00040A  6E92               	movwf	3986,c	;volatile
  1198                           
  1199                           ;pin_manager.c: 67: TRISB = 0x30;
  1200  00040C  0E30               	movlw	48
  1201  00040E  6E93               	movwf	3987,c	;volatile
  1202                           
  1203                           ;pin_manager.c: 68: TRISC = 0xB8;
  1204  000410  0EB8               	movlw	184
  1205  000412  6E94               	movwf	3988,c	;volatile
  1206                           
  1207                           ;pin_manager.c: 69: TRISD = 0x7C;
  1208  000414  0E7C               	movlw	124
  1209  000416  6E95               	movwf	3989,c	;volatile
  1210                           
  1211                           ;pin_manager.c: 74: ANSELC = 0x38;
  1212  000418  0E38               	movlw	56
  1213  00041A  010F               	movlb	15	; () banked
  1214  00041C  6F3A               	movwf	58,b	;volatile
  1215                           
  1216                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1217  00041E  0E3F               	movlw	63
  1218  000420  010F               	movlb	15	; () banked
  1219  000422  6F39               	movwf	57,b	;volatile
  1220                           
  1221                           ;pin_manager.c: 76: ANSELD = 0x00;
  1222  000424  0E00               	movlw	0
  1223  000426  010F               	movlb	15	; () banked
  1224  000428  6F3B               	movwf	59,b	;volatile
  1225                           
  1226                           ;pin_manager.c: 77: ANSELE = 0x00;
  1227  00042A  0E00               	movlw	0
  1228  00042C  010F               	movlb	15	; () banked
  1229  00042E  6F3C               	movwf	60,b	;volatile
  1230                           
  1231                           ;pin_manager.c: 78: ANSELA = 0x00;
  1232  000430  0E00               	movlw	0
  1233  000432  010F               	movlb	15	; () banked
  1234  000434  6F38               	movwf	56,b	;volatile
  1235                           
  1236                           ; BSR set to: 15
  1237                           ;pin_manager.c: 83: WPUB = 0xFF;
  1238  000436  6861               	setf	3937,c	;volatile
  1239                           
  1240                           ; BSR set to: 15
  1241                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1242  000438  9EF1               	bcf	intcon2,7,c	;volatile
  1243                           
  1244                           ; BSR set to: 15
  1245  00043A  0012               	return		;funcret
  1246  00043C                     __end_of_PIN_MANAGER_Initialize:
  1247                           	opt stack 0
  1248                           tblptru	equ	0xFF8
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           intcon2	equ	0xFF1
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           indf2	equ	0xFDF
  1256                           fsr2h	equ	0xFDA
  1257                           fsr2l	equ	0xFD9
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _OSCILLATOR_Initialize *****************
  1261 ;; Defined at:
  1262 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;		None               void
  1269 ;; Registers used:
  1270 ;;		wreg, status,2
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1276 ;;      Params:         0       0       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0
  1279 ;;      Totals:         0       0       0       0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    2
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_SYSTEM_Initialize
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text5
  1291  000574                     __ptext5:
  1292                           	opt stack 0
  1293  000574                     _OSCILLATOR_Initialize:
  1294                           	opt stack 27
  1295                           
  1296                           ;mcc.c: 123: OSCCON = 0x60;
  1297                           
  1298                           ; BSR set to: 15
  1299                           ;incstack = 0
  1300  000574  0E60               	movlw	96
  1301  000576  6ED3               	movwf	4051,c	;volatile
  1302                           
  1303                           ;mcc.c: 125: OSCCON2 = 0x04;
  1304  000578  0E04               	movlw	4
  1305  00057A  6ED2               	movwf	4050,c	;volatile
  1306                           
  1307                           ;mcc.c: 127: OSCTUNE = 0x00;
  1308  00057C  0E00               	movlw	0
  1309  00057E  6E9B               	movwf	3995,c	;volatile
  1310  000580  0012               	return		;funcret
  1311  000582                     __end_of_OSCILLATOR_Initialize:
  1312                           	opt stack 0
  1313                           tblptru	equ	0xFF8
  1314                           prodh	equ	0xFF4
  1315                           prodl	equ	0xFF3
  1316                           intcon	equ	0xFF2
  1317                           intcon2	equ	0xFF1
  1318                           postinc0	equ	0xFEE
  1319                           wreg	equ	0xFE8
  1320                           indf2	equ	0xFDF
  1321                           fsr2h	equ	0xFDA
  1322                           fsr2l	equ	0xFD9
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _INTERRUPT_Initialize *****************
  1326 ;; Defined at:
  1327 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		None
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1341 ;;      Params:         0       0       0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    2
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_SYSTEM_Initialize
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text6
  1356  000582                     __ptext6:
  1357                           	opt stack 0
  1358  000582                     _INTERRUPT_Initialize:
  1359                           	opt stack 27
  1360                           
  1361                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1362                           
  1363                           ;incstack = 0
  1364  000582  9ED0               	bcf	4048,7,c	;volatile
  1365  000584  0012               	return		;funcret
  1366  000586                     __end_of_INTERRUPT_Initialize:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           prodh	equ	0xFF4
  1370                           prodl	equ	0xFF3
  1371                           intcon	equ	0xFF2
  1372                           intcon2	equ	0xFF1
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           indf2	equ	0xFDF
  1376                           fsr2h	equ	0xFDA
  1377                           fsr2l	equ	0xFD9
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _EUSART1_Initialize *****************
  1381 ;; Defined at:
  1382 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;		None               void
  1389 ;; Registers used:
  1390 ;;		wreg, status,2
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1396 ;;      Params:         0       0       0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    2
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_SYSTEM_Initialize
  1407 ;;		_sendString
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text7
  1412  0004B6                     __ptext7:
  1413                           	opt stack 0
  1414  0004B6                     _EUSART1_Initialize:
  1415                           	opt stack 27
  1416                           
  1417                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1418                           
  1419                           ;incstack = 0
  1420  0004B6  9A9D               	bcf	3997,5,c	;volatile
  1421                           
  1422                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1423  0004B8  989D               	bcf	3997,4,c	;volatile
  1424                           
  1425                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1426  0004BA  0E08               	movlw	8
  1427  0004BC  6EB8               	movwf	4024,c	;volatile
  1428                           
  1429                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1430  0004BE  0E90               	movlw	144
  1431  0004C0  6EAB               	movwf	4011,c	;volatile
  1432                           
  1433                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1434  0004C2  0E24               	movlw	36
  1435  0004C4  6EAC               	movwf	4012,c	;volatile
  1436                           
  1437                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1438  0004C6  0ECF               	movlw	207
  1439  0004C8  6EAF               	movwf	4015,c	;volatile
  1440                           
  1441                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1442  0004CA  0E00               	movlw	0
  1443  0004CC  6EB0               	movwf	4016,c	;volatile
  1444                           
  1445                           ;eusart1.c: 100: eusart1TxHead = 0;
  1446  0004CE  0E00               	movlw	0
  1447  0004D0  6E24               	movwf	_eusart1TxHead,c
  1448                           
  1449                           ;eusart1.c: 101: eusart1TxTail = 0;
  1450  0004D2  0E00               	movlw	0
  1451  0004D4  6E25               	movwf	_eusart1TxTail,c
  1452                           
  1453                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1454  0004D6  0E08               	movlw	8
  1455  0004D8  6E3B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1456                           
  1457                           ;eusart1.c: 104: eusart1RxHead = 0;
  1458  0004DA  0E00               	movlw	0
  1459  0004DC  6E22               	movwf	_eusart1RxHead,c
  1460                           
  1461                           ;eusart1.c: 105: eusart1RxTail = 0;
  1462  0004DE  0E00               	movlw	0
  1463  0004E0  6E23               	movwf	_eusart1RxTail,c
  1464                           
  1465                           ;eusart1.c: 106: eusart1RxCount = 0;
  1466  0004E2  0E00               	movlw	0
  1467  0004E4  6E21               	movwf	_eusart1RxCount,c	;volatile
  1468                           
  1469                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1470  0004E6  8A9D               	bsf	3997,5,c	;volatile
  1471  0004E8  0012               	return		;funcret
  1472  0004EA                     __end_of_EUSART1_Initialize:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           prodh	equ	0xFF4
  1476                           prodl	equ	0xFF3
  1477                           intcon	equ	0xFF2
  1478                           intcon2	equ	0xFF1
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           indf2	equ	0xFDF
  1482                           fsr2h	equ	0xFDA
  1483                           fsr2l	equ	0xFD9
  1484                           status	equ	0xFD8
  1485                           
  1486 ;; *************** function _EUSART1_Read *****************
  1487 ;; Defined at:
  1488 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  readValue       1   14[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      unsigned char 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1502 ;;      Params:         0       0       0       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0
  1505 ;;      Totals:         1       0       0       0       0       0       0
  1506 ;;Total ram usage:        1 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    2
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;;		_getch
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text8
  1518  00047C                     __ptext8:
  1519                           	opt stack 0
  1520  00047C                     _EUSART1_Read:
  1521                           	opt stack 28
  1522                           
  1523                           ;eusart1.c: 114: uint8_t readValue = 0;
  1524                           
  1525                           ;incstack = 0
  1526  00047C  0E00               	movlw	0
  1527  00047E  6E34               	movwf	EUSART1_Read@readValue,c
  1528                           
  1529                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1530  000480  D000               	goto	l1063
  1531  000482                     l1063:
  1532  000482  5021               	movf	_eusart1RxCount,w,c	;volatile
  1533  000484  B4D8               	btfsc	status,2,c
  1534  000486  D7FD               	goto	l1063
  1535                           
  1536                           ;eusart1.c: 118: }
  1537                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1538  000488  5023               	movf	_eusart1RxTail,w,c
  1539  00048A  0D01               	mullw	1
  1540  00048C  0E11               	movlw	low _eusart1RxBuffer
  1541  00048E  24F3               	addwf	prodl,w,c
  1542  000490  6ED9               	movwf	fsr2l,c
  1543  000492  0E00               	movlw	high _eusart1RxBuffer
  1544  000494  20F4               	addwfc	prodh,w,c
  1545  000496  6EDA               	movwf	fsr2h,c
  1546  000498  50DF               	movf	indf2,w,c
  1547  00049A  6E34               	movwf	EUSART1_Read@readValue,c
  1548  00049C  2A23               	incf	_eusart1RxTail,f,c
  1549                           
  1550                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1551  00049E  0E07               	movlw	7
  1552  0004A0  6423               	cpfsgt	_eusart1RxTail,c
  1553  0004A2  D003               	goto	l1073
  1554                           
  1555                           ;eusart1.c: 122: {
  1556                           ;eusart1.c: 123: eusart1RxTail = 0;
  1557  0004A4  0E00               	movlw	0
  1558  0004A6  6E23               	movwf	_eusart1RxTail,c
  1559  0004A8  D000               	goto	l1073
  1560  0004AA                     l1073:
  1561                           
  1562                           ;eusart1.c: 124: }
  1563                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1564  0004AA  9A9D               	bcf	3997,5,c	;volatile
  1565                           
  1566                           ;eusart1.c: 126: eusart1RxCount--;
  1567  0004AC  0621               	decf	_eusart1RxCount,f,c	;volatile
  1568                           
  1569                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1570  0004AE  8A9D               	bsf	3997,5,c	;volatile
  1571                           
  1572                           ;eusart1.c: 129: return readValue;
  1573  0004B0  5034               	movf	EUSART1_Read@readValue,w,c
  1574  0004B2  0012               	return	
  1575  0004B4  0012               	return		;funcret
  1576  0004B6                     __end_of_EUSART1_Read:
  1577                           	opt stack 0
  1578                           tblptru	equ	0xFF8
  1579                           prodh	equ	0xFF4
  1580                           prodl	equ	0xFF3
  1581                           intcon	equ	0xFF2
  1582                           intcon2	equ	0xFF1
  1583                           postinc0	equ	0xFEE
  1584                           wreg	equ	0xFE8
  1585                           indf2	equ	0xFDF
  1586                           fsr2h	equ	0xFDA
  1587                           fsr2l	equ	0xFD9
  1588                           status	equ	0xFD8
  1589                           
  1590 ;; *************** function _INTERRUPT_InterruptManager *****************
  1591 ;; Defined at:
  1592 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;		None               void
  1599 ;; Registers used:
  1600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1606 ;;      Params:         0       0       0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0
  1608 ;;      Temps:         14       0       0       0       0       0       0
  1609 ;;      Totals:        14       0       0       0       0       0       0
  1610 ;;Total ram usage:       14 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    1
  1613 ;; This function calls:
  1614 ;;		_EUSART1_Receive_ISR
  1615 ;;		_EUSART1_Transmit_ISR
  1616 ;; This function is called by:
  1617 ;;		Interrupt level 2
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	intcode
  1622  000008                     __pintcode:
  1623                           	opt stack 0
  1624  000008                     _INTERRUPT_InterruptManager:
  1625                           	opt stack 27
  1626                           
  1627                           ;incstack = 0
  1628  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1629  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1630  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1631  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1632  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1633  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1634  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1635  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1636  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1637  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1638  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1639  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1640  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1641  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1642                           
  1643                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1644  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1645  000042  A89D               	btfss	3997,4,c	;volatile
  1646  000044  D005               	goto	i2l148
  1647  000046  A89E               	btfss	3998,4,c	;volatile
  1648  000048  D003               	goto	i2l148
  1649                           
  1650                           ;interrupt_manager.c: 61: {
  1651                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1652  00004A  EC75  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  1653                           
  1654                           ;interrupt_manager.c: 63: }
  1655  00004E  D008               	goto	i2l152
  1656  000050                     i2l148:
  1657                           
  1658                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1659  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1660  000052  AA9D               	btfss	3997,5,c	;volatile
  1661  000054  D005               	goto	i2l152
  1662  000056  AA9E               	btfss	3998,5,c	;volatile
  1663  000058  D003               	goto	i2l152
  1664                           
  1665                           ;interrupt_manager.c: 65: {
  1666                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1667  00005A  EC8E  F002         	call	_EUSART1_Receive_ISR	;wreg free
  1668                           
  1669                           ;interrupt_manager.c: 68: else
  1670                           ;interrupt_manager.c: 69: {
  1671                           
  1672                           ;interrupt_manager.c: 67: }
  1673  00005E  D000               	goto	i2l152
  1674  000060                     i2l152:
  1675  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1676  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1677  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1678  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1679  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1680  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1681  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1682  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1683  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1684  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1685  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1686  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1687  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1688  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1689  000098  0011               	retfie		f
  1690  00009A                     __end_of_INTERRUPT_InterruptManager:
  1691                           	opt stack 0
  1692                           pclatu	equ	0xFFB
  1693                           pclath	equ	0xFFA
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           prodh	equ	0xFF4
  1699                           prodl	equ	0xFF3
  1700                           intcon	equ	0xFF2
  1701                           intcon2	equ	0xFF1
  1702                           postinc0	equ	0xFEE
  1703                           fsr0h	equ	0xFEA
  1704                           fsr0l	equ	0xFE9
  1705                           wreg	equ	0xFE8
  1706                           fsr1h	equ	0xFE2
  1707                           fsr1l	equ	0xFE1
  1708                           indf2	equ	0xFDF
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _EUSART1_Transmit_ISR *****************
  1714 ;; Defined at:
  1715 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;		None               void
  1722 ;; Registers used:
  1723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1729 ;;      Params:         0       0       0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_INTERRUPT_InterruptManager
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text10
  1743  0004EA                     __ptext10:
  1744                           	opt stack 0
  1745  0004EA                     _EUSART1_Transmit_ISR:
  1746                           	opt stack 27
  1747                           
  1748                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1749                           
  1750                           ;incstack = 0
  1751  0004EA  0E08               	movlw	8
  1752  0004EC  603B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1753  0004EE  D013               	goto	i2l82
  1754                           
  1755                           ;eusart1.c: 170: {
  1756                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1757  0004F0  5025               	movf	_eusart1TxTail,w,c
  1758  0004F2  0D01               	mullw	1
  1759  0004F4  0E19               	movlw	low _eusart1TxBuffer
  1760  0004F6  24F3               	addwf	prodl,w,c
  1761  0004F8  6ED9               	movwf	fsr2l,c
  1762  0004FA  0E00               	movlw	high _eusart1TxBuffer
  1763  0004FC  20F4               	addwfc	prodh,w,c
  1764  0004FE  6EDA               	movwf	fsr2h,c
  1765  000500  50DF               	movf	indf2,w,c
  1766  000502  6EAD               	movwf	4013,c	;volatile
  1767  000504  2A25               	incf	_eusart1TxTail,f,c
  1768                           
  1769                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1770  000506  0E07               	movlw	7
  1771  000508  6425               	cpfsgt	_eusart1TxTail,c
  1772  00050A  D003               	goto	i2l1093
  1773                           
  1774                           ;eusart1.c: 173: {
  1775                           ;eusart1.c: 174: eusart1TxTail = 0;
  1776  00050C  0E00               	movlw	0
  1777  00050E  6E25               	movwf	_eusart1TxTail,c
  1778  000510  D000               	goto	i2l1093
  1779  000512                     i2l1093:
  1780                           
  1781                           ;eusart1.c: 175: }
  1782                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1783  000512  2A3B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1784                           
  1785                           ;eusart1.c: 177: }
  1786  000514  0012               	return	
  1787  000516                     i2l82:
  1788                           
  1789                           ;eusart1.c: 178: else
  1790                           ;eusart1.c: 179: {
  1791                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1792  000516  989D               	bcf	3997,4,c	;volatile
  1793  000518  0012               	return	
  1794  00051A  0012               	return		;funcret
  1795  00051C                     __end_of_EUSART1_Transmit_ISR:
  1796                           	opt stack 0
  1797                           pclatu	equ	0xFFB
  1798                           pclath	equ	0xFFA
  1799                           tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           prodh	equ	0xFF4
  1804                           prodl	equ	0xFF3
  1805                           intcon	equ	0xFF2
  1806                           intcon2	equ	0xFF1
  1807                           postinc0	equ	0xFEE
  1808                           fsr0h	equ	0xFEA
  1809                           fsr0l	equ	0xFE9
  1810                           wreg	equ	0xFE8
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           indf2	equ	0xFDF
  1814                           fsr2h	equ	0xFDA
  1815                           fsr2l	equ	0xFD9
  1816                           status	equ	0xFD8
  1817                           
  1818 ;; *************** function _EUSART1_Receive_ISR *****************
  1819 ;; Defined at:
  1820 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;		None               void
  1827 ;; Registers used:
  1828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_INTERRUPT_InterruptManager
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text11
  1848  00051C                     __ptext11:
  1849                           	opt stack 0
  1850  00051C                     _EUSART1_Receive_ISR:
  1851                           	opt stack 27
  1852                           
  1853                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1854                           
  1855                           ;incstack = 0
  1856  00051C  A2AB               	btfss	4011,1,c	;volatile
  1857  00051E  D003               	goto	i2l1099
  1858                           
  1859                           ;eusart1.c: 188: {
  1860                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1861  000520  98AB               	bcf	4011,4,c	;volatile
  1862                           
  1863                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1864  000522  88AB               	bsf	4011,4,c	;volatile
  1865  000524  D000               	goto	i2l1099
  1866  000526                     i2l1099:
  1867                           
  1868                           ;eusart1.c: 193: }
  1869                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1870  000526  5022               	movf	_eusart1RxHead,w,c
  1871  000528  0D01               	mullw	1
  1872  00052A  0E11               	movlw	low _eusart1RxBuffer
  1873  00052C  24F3               	addwf	prodl,w,c
  1874  00052E  6ED9               	movwf	fsr2l,c
  1875  000530  0E00               	movlw	high _eusart1RxBuffer
  1876  000532  20F4               	addwfc	prodh,w,c
  1877  000534  6EDA               	movwf	fsr2h,c
  1878  000536  CFAE FFDF          	movff	4014,indf2	;volatile
  1879  00053A  2A22               	incf	_eusart1RxHead,f,c
  1880                           
  1881                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1882  00053C  0E07               	movlw	7
  1883  00053E  6422               	cpfsgt	_eusart1RxHead,c
  1884  000540  D003               	goto	i2l1107
  1885                           
  1886                           ;eusart1.c: 198: {
  1887                           ;eusart1.c: 199: eusart1RxHead = 0;
  1888  000542  0E00               	movlw	0
  1889  000544  6E22               	movwf	_eusart1RxHead,c
  1890  000546  D000               	goto	i2l1107
  1891  000548                     i2l1107:
  1892                           
  1893                           ;eusart1.c: 200: }
  1894                           ;eusart1.c: 201: eusart1RxCount++;
  1895  000548  2A21               	incf	_eusart1RxCount,f,c	;volatile
  1896  00054A  0012               	return		;funcret
  1897  00054C                     __end_of_EUSART1_Receive_ISR:
  1898                           	opt stack 0
  1899  0000                     pclatu	equ	0xFFB
  1900                           pclath	equ	0xFFA
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           prodh	equ	0xFF4
  1906                           prodl	equ	0xFF3
  1907                           intcon	equ	0xFF2
  1908                           intcon2	equ	0xFF1
  1909                           postinc0	equ	0xFEE
  1910                           fsr0h	equ	0xFEA
  1911                           fsr0l	equ	0xFE9
  1912                           wreg	equ	0xFE8
  1913                           fsr1h	equ	0xFE2
  1914                           fsr1l	equ	0xFE1
  1915                           indf2	equ	0xFDF
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           pclatu	equ	0xFFB
  1920                           pclath	equ	0xFFA
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           prodh	equ	0xFF4
  1926                           prodl	equ	0xFF3
  1927                           intcon	equ	0xFF2
  1928                           intcon2	equ	0xFF1
  1929                           postinc0	equ	0xFEE
  1930                           fsr0h	equ	0xFEA
  1931                           fsr0l	equ	0xFE9
  1932                           wreg	equ	0xFE8
  1933                           fsr1h	equ	0xFE2
  1934                           fsr1l	equ	0xFE1
  1935                           indf2	equ	0xFDF
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           
  1940                           	psect	rparam
  1941  0000                     pclatu	equ	0xFFB
  1942                           pclath	equ	0xFFA
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodh	equ	0xFF4
  1948                           prodl	equ	0xFF3
  1949                           intcon	equ	0xFF2
  1950                           intcon2	equ	0xFF1
  1951                           postinc0	equ	0xFEE
  1952                           fsr0h	equ	0xFEA
  1953                           fsr0l	equ	0xFE9
  1954                           wreg	equ	0xFE8
  1955                           fsr1h	equ	0xFE2
  1956                           fsr1l	equ	0xFE1
  1957                           indf2	equ	0xFDF
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_relayControl
    _relayControl->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                             19 COMRAM     1     1      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      3B       1       62.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       9        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Apr 09 15:08:18 2018

           _eusart1TxBufferRemaining 003B                                   l70 0450  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l300 0168  
                                l303 016C                                  l400 01F8  
                                l312 0178                                  l240 00FC  
                                l321 0184                                  l410 020C  
                                l402 01FC                                  l330 0190  
                                l306 0170                                  l315 017C  
                                l251 0110                                  l243 0100  
                                l412 0210                                  l404 0200  
                                l324 0188                                  l333 0194  
                                l309 0174                                  l261 0124  
                                l253 0114                                  l245 0104  
                                l237 00F8                                  l422 0220  
                                l414 0214                                  l406 0204  
                                l342 01A0                                  l318 0180  
                                l431 022C                                  l351 01AC  
                                l327 018C                                  l271 0138  
                                l263 0128                                  l255 0118  
                                l247 0108                                  l416 0218  
                                l408 0208                                  l360 01B8  
                                l336 0198                                  l425 0224  
                                l345 01A4                                  l281 014C  
                                l273 013C                                  l265 012C  
                                l257 011C                                  l249 010C  
                                l434 0230                                  l354 01B0  
                                l419 021C                                  l363 01BC  
                                l339 019C                                  l291 015C  
                                l283 0150                                  l275 0140  
                                l267 0130                                  l259 0120  
                                l428 0228                                  l372 01C8  
                                l348 01A8                                  l381 01D4  
                                l357 01B4                                  l285 0154  
                                l277 0144                                  l269 0134  
                                l390 01E4                                  l366 01C0  
                                l294 0160                                  l375 01CC  
                                l279 0148                                  l392 01E8  
                                l384 01D8                                  l288 0158  
                                l369 01C4                                  l297 0164  
                                l394 01EC                                  l386 01DC  
                                l378 01D0                                  l396 01F0  
                                l388 01E0                                  l398 01F4  
                       __CFG_CPB$OFF 000000                                  u100 00C4  
                                u110 00F6                                  u207 00DE  
                       __CFG_CPD$OFF 000000                                  prod 000FF3  
                                wreg 000FE8                                 l1111 00A2  
                               l1113 00AA                                 l1201 03A8  
                               l1051 0478                                 l1131 023C  
                               l1211 03BC                                 l1203 03AC  
                               l1037 0440                                 l1221 03D0  
                               l1213 03C0                                 l1205 03B0  
                               l1063 0482                                 l1127 0234  
                               l1119 00C6                                 l1223 03D4  
                               l1215 03C4                                 l1207 03B4  
                               l1073 04AA                                 l1049 0474  
                               l1225 03E2                                 l1217 03C8  
                               l1209 03B8                                 l1219 03CC  
                               l1193 0398                                 l1195 039C  
                               l1197 03A0                                 l1199 03A4  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l82 0516  
                               _WPUB 000F61                        _EUSART1_Write 043C  
                               _main 034A                        ?_EUSART1_Read 0026  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 009A  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 0582  
                              ?_main 0026                       __CFG_DEBUG$OFF 000000  
                              i2l152 0060                                i2l148 0050  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _TFNum 003A  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 04EA                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                       ?_EUSART1_Write 0026  
                              tablat 000FF5                       ??_EUSART1_Read 0034  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 054C  
         __end_of_EUSART1_Initialize 04EA                         __end_of_main 03F0  
        ?_INTERRUPT_InterruptManager 0026                               ??_main 0039  
                      __activetblptr 000002                ?_EUSART1_Transmit_ISR 0026  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               i2l1107 0548  
                             i2l1093 0512                               i2l1099 0526  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                     __CFG_STVREN$ON 000000                               clear_0 0552  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      ??_EUSART1_Write 0034  
                    _eusart1RxBuffer 0011        __size_of_INTERRUPT_Initialize 0004  
                    _eusart1TxBuffer 0019                    _SYSTEM_Initialize 0562  
                         __accesstop 0060              __end_of__initialization 0558  
                 ?_SYSTEM_Initialize 0026                        ___rparam_used 000001  
                     __pcstackCOMRAM 0026                  ??_SYSTEM_Initialize 0034  
               __end_of_EUSART1_Read 04B6               ??_EUSART1_Transmit_ISR 0026  
        __end_of_EUSART1_Receive_ISR 054C                        ?_relayControl 0026  
          __end_of_SYSTEM_Initialize 0574                        _eusart1RxHead 0022  
                      _eusart1TxHead 0024                        _eusart1RxTail 0023  
                      _eusart1TxTail 0025                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 003A                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                              _OSCCON2 000FD2  
                     ??_relayControl 0035                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                            __pcinit 054C                              __ramtop 0600  
                            __ptext0 034A                              __ptext1 009E  
                            __ptext2 043C                              __ptext3 0562  
                            __ptext4 03F0                              __ptext5 0574  
                            __ptext6 0582                              __ptext7 04B6  
                            __ptext8 047C                _OSCILLATOR_Initialize 0574  
                 _EUSART1_Initialize 04B6             ??_PIN_MANAGER_Initialize 0034  
         __size_of_SYSTEM_Initialize 0012                 end_of_initialization 0558  
                ?_EUSART1_Initialize 0026                        __Lmediumconst 0000  
                            postinc0 000FEE                __size_of_EUSART1_Read 003A  
               ??_EUSART1_Initialize 0034                  EUSART1_Write@txData 0034  
                         main@RxData 0039                         _EUSART1_Read 047C  
               __end_of_relayControl 034A         __end_of_INTERRUPT_Initialize 0586  
             ?_OSCILLATOR_Initialize 0026                  start_initialization 054C  
    __size_of_PIN_MANAGER_Initialize 004C                __end_of_EUSART1_Write 047C  
                     _eusart1RxCount 0021                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                    relayControl@count 0037  
       __size_of_EUSART1_Receive_ISR 0030               _PIN_MANAGER_Initialize 03F0  
                          __pintcode 0008         ??_INTERRUPT_InterruptManager 0026  
                   __CFG_PRICLKEN$ON 000000                             _BAUDCON1 000FB8  
               _INTERRUPT_Initialize 0582                             _LATAbits 000F89  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
                           _LATDbits 000F8C                             _LATEbits 000F8D  
              __size_of_relayControl 02AC                             _PIE1bits 000F9D  
__size_of_INTERRUPT_InterruptManager 0092                             _PIR1bits 000F9E  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                       _relayControl 009E                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0026                EUSART1_Read@readValue 0034  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0034          __size_of_EUSART1_Initialize 0034  
                   relayControl@data 0036                             __ptext10 04EA  
                           __ptext11 051C                        __size_of_main 00A6  
                           _site0_IL 0001   __end_of_INTERRUPT_InterruptManager 009A  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 051C  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 0034  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0026  
            ?_PIN_MANAGER_Initialize 0026                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 051C               __size_of_EUSART1_Write 0040  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0026  
     __end_of_PIN_MANAGER_Initialize 043C                    __CFG_FOSC$INTIO67 000000  
