

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 15 17:18:35 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	nvCOMRAM
    25  00003A                     __pnvCOMRAM:
    26                           	opt stack 0
    27  00003A                     _TFNum:
    28                           	opt stack 0
    29  00003A                     	ds	1
    30  00003B                     _eusart1TxBufferRemaining:
    31                           	opt stack 0
    32  00003B                     	ds	1
    33  0000                     _ANSELA	set	3896
    34  0000                     _ANSELB	set	3897
    35  0000                     _ANSELC	set	3898
    36  0000                     _ANSELD	set	3899
    37  0000                     _ANSELE	set	3900
    38  0000                     _BAUDCON1	set	4024
    39  0000                     _INTCON2bits	set	4081
    40  0000                     _INTCONbits	set	4082
    41  0000                     _LATA	set	3977
    42  0000                     _LATAbits	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATBbits	set	3978
    45  0000                     _LATC	set	3979
    46  0000                     _LATCbits	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _LATDbits	set	3980
    49  0000                     _LATE	set	3981
    50  0000                     _LATEbits	set	3981
    51  0000                     _OSCCON	set	4051
    52  0000                     _OSCCON2	set	4050
    53  0000                     _OSCTUNE	set	3995
    54  0000                     _PIE1bits	set	3997
    55  0000                     _PIR1bits	set	3998
    56  0000                     _RCONbits	set	4048
    57  0000                     _RCREG1	set	4014
    58  0000                     _RCSTA1	set	4011
    59  0000                     _RCSTA1bits	set	4011
    60  0000                     _SPBRG1	set	4015
    61  0000                     _SPBRGH1	set	4016
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISE	set	3990
    67  0000                     _TXREG1	set	4013
    68  0000                     _TXSTA1	set	4012
    69  0000                     _WPUB	set	3937
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  000524                     __pcinit:
    75                           	opt stack 0
    76  000524                     start_initialization:
    77                           	opt stack 0
    78  000524                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (37 bytes)
    82  000524  EE00  F001         	lfsr	0,__pbssCOMRAM
    83  000528  0E25               	movlw	37
    84  00052A                     clear_0:
    85  00052A  6AEE               	clrf	postinc0,c
    86  00052C  06E8               	decf	wreg,f,c
    87  00052E  E1FD               	bnz	clear_0
    88  000530                     end_of_initialization:
    89                           	opt stack 0
    90  000530                     __end_of__initialization:
    91                           	opt stack 0
    92  000530  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  000532  6EF8               	movwf	tblptru,c
    94  000534  0100               	movlb	0
    95  000536  EF91  F001         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000001                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000001                     _site0_IL:
   104                           	opt stack 0
   105  000001                     	ds	16
   106  000011                     _eusart1RxBuffer:
   107                           	opt stack 0
   108  000011                     	ds	8
   109  000019                     _eusart1TxBuffer:
   110                           	opt stack 0
   111  000019                     	ds	8
   112  000021                     _eusart1RxCount:
   113                           	opt stack 0
   114  000021                     	ds	1
   115  000022                     _eusart1RxHead:
   116                           	opt stack 0
   117  000022                     	ds	1
   118  000023                     _eusart1RxTail:
   119                           	opt stack 0
   120  000023                     	ds	1
   121  000024                     _eusart1TxHead:
   122                           	opt stack 0
   123  000024                     	ds	1
   124  000025                     _eusart1TxTail:
   125                           	opt stack 0
   126  000025                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	cstackCOMRAM
   132  000026                     __pcstackCOMRAM:
   133                           	opt stack 0
   134  000026                     ??_INTERRUPT_InterruptManager:
   135  000026                     
   136                           ; 1 bytes @ 0x0
   137  000026                     	ds	14
   138  000034                     EUSART1_Read@readValue:
   139                           	opt stack 0
   140  000034                     EUSART1_Write@txData:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0xE
   144  000034                     	ds	1
   145  000035                     ??_relayControl:
   146                           
   147                           ; 0 bytes @ 0xF
   148  000035                     	ds	1
   149  000036                     relayControl@data:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x10
   153  000036                     	ds	1
   154  000037                     relayControl@count:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x11
   158  000037                     	ds	2
   159  000039                     main@RxData:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x13
   163  000039                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 26 in file "main.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;  RxData          1   19[COMRAM] unsigned char 
   178 ;; Return value:  Size  Location     Type
   179 ;;		None               void
   180 ;; Registers used:
   181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   187 ;;      Params:         0       0       0       0       0       0       0
   188 ;;      Locals:         1       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0
   190 ;;      Totals:         1       0       0       0       0       0       0
   191 ;;Total ram usage:        1 bytes
   192 ;; Hardware stack levels required when called:    4
   193 ;; This function calls:
   194 ;;		_EUSART1_Read
   195 ;;		_SYSTEM_Initialize
   196 ;;		_relayControl
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  000322                     __ptext0:
   204                           	opt stack 0
   205  000322                     _main:
   206                           	opt stack 27
   207                           
   208                           ;main.c: 29: SYSTEM_Initialize();
   209                           
   210                           ;incstack = 0
   211  000322  EC9D  F002         	call	_SYSTEM_Initialize	;wreg free
   212                           
   213                           ;main.c: 31: (INTCONbits.GIE = 1);
   214  000326  8EF2               	bsf	intcon,7,c	;volatile
   215                           
   216                           ;main.c: 32: (INTCONbits.PEIE = 1);
   217  000328  8CF2               	bsf	intcon,6,c	;volatile
   218                           
   219                           ;main.c: 34: char RxData;
   220                           ;main.c: 36: TFNum = '5';
   221  00032A  0E35               	movlw	53
   222  00032C  6E3A               	movwf	_TFNum,c
   223                           
   224                           ;main.c: 37: site0_IL[0] = '3';
   225  00032E  0E33               	movlw	51
   226  000330  6E01               	movwf	_site0_IL,c
   227                           
   228                           ;main.c: 38: site0_IL[1] = '.';
   229  000332  0E2E               	movlw	46
   230  000334  6E02               	movwf	_site0_IL+1,c
   231                           
   232                           ;main.c: 39: site0_IL[2] = '9';
   233  000336  0E39               	movlw	57
   234  000338  6E03               	movwf	_site0_IL+2,c
   235                           
   236                           ;main.c: 40: site0_IL[3] = '4';
   237  00033A  0E34               	movlw	52
   238  00033C  6E04               	movwf	_site0_IL+3,c
   239                           
   240                           ;main.c: 42: site0_IL[4] = '3';
   241  00033E  0E33               	movlw	51
   242  000340  6E05               	movwf	_site0_IL+4,c
   243                           
   244                           ;main.c: 43: site0_IL[5] = '7';
   245  000342  0E37               	movlw	55
   246  000344  6E06               	movwf	_site0_IL+5,c
   247                           
   248                           ;main.c: 44: site0_IL[6] = '.';
   249  000346  0E2E               	movlw	46
   250  000348  6E07               	movwf	_site0_IL+6,c
   251                           
   252                           ;main.c: 45: site0_IL[7] = '9';
   253  00034A  0E39               	movlw	57
   254  00034C  6E08               	movwf	_site0_IL+7,c
   255                           
   256                           ;main.c: 47: site0_IL[8] = '1';
   257  00034E  0E31               	movlw	49
   258  000350  6E09               	movwf	_site0_IL+8,c
   259                           
   260                           ;main.c: 48: site0_IL[9] = '5';
   261  000352  0E35               	movlw	53
   262  000354  6E0A               	movwf	_site0_IL+9,c
   263                           
   264                           ;main.c: 49: site0_IL[10] = '.';
   265  000356  0E2E               	movlw	46
   266  000358  6E0B               	movwf	_site0_IL+10,c
   267                           
   268                           ;main.c: 50: site0_IL[11] = '4';
   269  00035A  0E34               	movlw	52
   270  00035C  6E0C               	movwf	_site0_IL+11,c
   271                           
   272                           ;main.c: 52: site0_IL[12] = '5';
   273  00035E  0E35               	movlw	53
   274  000360  6E0D               	movwf	_site0_IL+12,c
   275                           
   276                           ;main.c: 53: site0_IL[13] = '.';
   277  000362  0E2E               	movlw	46
   278  000364  6E0E               	movwf	_site0_IL+13,c
   279                           
   280                           ;main.c: 54: site0_IL[14] = '8';
   281  000366  0E38               	movlw	56
   282  000368  6E0F               	movwf	_site0_IL+14,c
   283                           
   284                           ;main.c: 55: site0_IL[15] = '7';
   285  00036A  0E37               	movlw	55
   286  00036C  6E10               	movwf	_site0_IL+15,c
   287  00036E  D000               	goto	l1177
   288  000370                     l1177:
   289  000370  9089               	bcf	3977,0,c	;volatile
   290  000372  D000               	goto	l1179
   291  000374                     l1179:
   292  000374  9289               	bcf	3977,1,c	;volatile
   293  000376  D000               	goto	l1181
   294  000378                     l1181:
   295  000378  9489               	bcf	3977,2,c	;volatile
   296  00037A  D000               	goto	l1183
   297  00037C                     l1183:
   298  00037C  9689               	bcf	3977,3,c	;volatile
   299  00037E  D000               	goto	l1185
   300  000380                     l1185:
   301  000380  9889               	bcf	3977,4,c	;volatile
   302  000382  D000               	goto	l1187
   303  000384                     l1187:
   304  000384  9A89               	bcf	3977,5,c	;volatile
   305  000386  D000               	goto	l1189
   306  000388                     l1189:
   307  000388  908D               	bcf	3981,0,c	;volatile
   308  00038A  D000               	goto	l1191
   309  00038C                     l1191:
   310  00038C  928D               	bcf	3981,1,c	;volatile
   311  00038E  D000               	goto	l1193
   312  000390                     l1193:
   313  000390  948D               	bcf	3981,2,c	;volatile
   314  000392  D000               	goto	l1195
   315  000394                     l1195:
   316  000394  9C89               	bcf	3977,6,c	;volatile
   317  000396  D000               	goto	l1197
   318  000398                     l1197:
   319  000398  908B               	bcf	3979,0,c	;volatile
   320  00039A  D000               	goto	l1199
   321  00039C                     l1199:
   322  00039C  928B               	bcf	3979,1,c	;volatile
   323  00039E  D000               	goto	l1201
   324  0003A0                     l1201:
   325  0003A0  948B               	bcf	3979,2,c	;volatile
   326  0003A2  D000               	goto	l1203
   327  0003A4                     l1203:
   328  0003A4  908C               	bcf	3980,0,c	;volatile
   329  0003A6  D000               	goto	l1205
   330  0003A8                     l1205:
   331  0003A8  928C               	bcf	3980,1,c	;volatile
   332                           
   333                           ;main.c: 75: {
   334                           ;main.c: 84: while((eusart1RxCount)){
   335                           
   336                           ;main.c: 74: while (1)
   337  0003AA  D007               	goto	l1209
   338  0003AC                     l1207:
   339                           
   340                           ;main.c: 86: RxData = EUSART1_Read();
   341  0003AC  EC2A  F002         	call	_EUSART1_Read	;wreg free
   342  0003B0  6E39               	movwf	main@RxData,c
   343                           
   344                           ;main.c: 103: relayControl(RxData);
   345  0003B2  5039               	movf	main@RxData,w,c
   346  0003B4  EC4F  F000         	call	_relayControl
   347  0003B8  D000               	goto	l1209
   348  0003BA                     l1209:
   349  0003BA  5021               	movf	_eusart1RxCount,w,c	;volatile
   350  0003BC  B4D8               	btfsc	status,2,c
   351  0003BE  D7FD               	goto	l1209
   352  0003C0  D7F5               	goto	l1207
   353                           
   354                           ;main.c: 104: };
   355  0003C2  D7FB               	goto	l1209
   356  0003C4  EF4D  F000         	goto	start
   357  0003C8                     __end_of_main:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           intcon	equ	0xFF2
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           status	equ	0xFD8
   364                           
   365 ;; *************** function _relayControl *****************
   366 ;; Defined at:
   367 ;;		line 120 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  data            1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  data            1   16[COMRAM] unsigned char 
   372 ;;  count           2   17[COMRAM] int 
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         3       0       0       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		_EUSART1_Write
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  00009E                     __ptext1:
   398                           	opt stack 0
   399  00009E                     _relayControl:
   400                           	opt stack 27
   401                           
   402                           ;incstack = 0
   403                           ;relayControl@data stored from wreg
   404  00009E  6E36               	movwf	relayControl@data,c
   405                           
   406                           ;main.c: 121: switch (data){
   407  0000A0  D0BF               	goto	l1115
   408  0000A2                     l1095:
   409                           
   410                           ;main.c: 123: EUSART1_Write(TFNum);
   411  0000A2  503A               	movf	_TFNum,w,c
   412  0000A4  EC0A  F002         	call	_EUSART1_Write
   413                           
   414                           ;main.c: 124: break;
   415  0000A8  0012               	return	
   416  0000AA                     l1097:
   417                           
   418                           ;main.c: 126: for (int count=0; count<16; count++){
   419  0000AA  0E00               	movlw	0
   420  0000AC  6E38               	movwf	relayControl@count+1,c
   421  0000AE  0E00               	movlw	0
   422  0000B0  6E37               	movwf	relayControl@count,c
   423  0000B2  BE38               	btfsc	relayControl@count+1,7,c
   424  0000B4  D008               	goto	l1103
   425  0000B6  5038               	movf	relayControl@count+1,w,c
   426  0000B8  E105               	bnz	u100
   427  0000BA  0E10               	movlw	16
   428  0000BC  5C37               	subwf	relayControl@count,w,c
   429  0000BE  B0D8               	btfsc	status,0,c
   430  0000C0  0012               	return	
   431  0000C2  D001               	goto	l1103
   432  0000C4                     u100:
   433  0000C4  0012               	return	
   434  0000C6                     l1103:
   435                           
   436                           ;main.c: 127: EUSART1_Write(site0_IL[count]);
   437  0000C6  0E01               	movlw	low _site0_IL
   438  0000C8  2437               	addwf	relayControl@count,w,c
   439  0000CA  6ED9               	movwf	fsr2l,c
   440  0000CC  0E00               	movlw	high _site0_IL
   441  0000CE  2038               	addwfc	relayControl@count+1,w,c
   442  0000D0  6EDA               	movwf	fsr2h,c
   443  0000D2  50DF               	movf	indf2,w,c
   444  0000D4  EC0A  F002         	call	_EUSART1_Write
   445                           
   446                           ;main.c: 128: _delay((unsigned long)((25)*(8000000/4000.0)));
   447  0000D8  0E41               	movlw	65
   448  0000DA  6E35               	movwf	??_relayControl& (0+255),c
   449  0000DC  0EEE               	movlw	238
   450  0000DE                     u207:
   451  0000DE  2EE8               	decfsz	wreg,f,c
   452  0000E0  D7FE               	goto	u207
   453  0000E2  2E35               	decfsz	??_relayControl& (0+255),f,c
   454  0000E4  D7FC               	goto	u207
   455  0000E6  D000               	nop2	
   456  0000E8  4A37               	infsnz	relayControl@count,f,c
   457  0000EA  2A38               	incf	relayControl@count+1,f,c
   458  0000EC  BE38               	btfsc	relayControl@count+1,7,c
   459  0000EE  D7EB               	goto	l1103
   460  0000F0  5038               	movf	relayControl@count+1,w,c
   461  0000F2  E101               	bnz	u110
   462  0000F4  D7E2               	goto	L1
   463  0000F6                     u110:
   464                           
   465                           ;main.c: 129: }
   466                           ;main.c: 130: break;
   467  0000F6  0012               	return	
   468  0000F8                     l237:
   469  0000F8  908C               	bcf	3980,0,c	;volatile
   470                           
   471                           ;main.c: 133: break;
   472  0000FA  0012               	return	
   473  0000FC                     l240:
   474  0000FC  808C               	bsf	3980,0,c	;volatile
   475                           
   476                           ;main.c: 136: break;
   477  0000FE  0012               	return	
   478  000100                     l243:
   479  000100  9089               	bcf	3977,0,c	;volatile
   480  000102  D000               	goto	l245
   481  000104                     l245:
   482  000104  9289               	bcf	3977,1,c	;volatile
   483  000106  D000               	goto	l247
   484  000108                     l247:
   485  000108  9489               	bcf	3977,2,c	;volatile
   486  00010A  D000               	goto	l249
   487  00010C                     l249:
   488  00010C  9689               	bcf	3977,3,c	;volatile
   489  00010E  D000               	goto	l251
   490  000110                     l251:
   491  000110  9889               	bcf	3977,4,c	;volatile
   492  000112  D000               	goto	l253
   493  000114                     l253:
   494  000114  9A89               	bcf	3977,5,c	;volatile
   495  000116  D000               	goto	l255
   496  000118                     l255:
   497  000118  908D               	bcf	3981,0,c	;volatile
   498  00011A  D000               	goto	l257
   499  00011C                     l257:
   500  00011C  928D               	bcf	3981,1,c	;volatile
   501  00011E  D000               	goto	l259
   502  000120                     l259:
   503  000120  948D               	bcf	3981,2,c	;volatile
   504  000122  D000               	goto	l261
   505  000124                     l261:
   506  000124  9C89               	bcf	3977,6,c	;volatile
   507  000126  D000               	goto	l263
   508  000128                     l263:
   509  000128  908B               	bcf	3979,0,c	;volatile
   510  00012A  D000               	goto	l265
   511  00012C                     l265:
   512  00012C  928B               	bcf	3979,1,c	;volatile
   513  00012E  D000               	goto	l267
   514  000130                     l267:
   515  000130  948B               	bcf	3979,2,c	;volatile
   516  000132  D000               	goto	l269
   517  000134                     l269:
   518  000134  908C               	bcf	3980,0,c	;volatile
   519  000136  D000               	goto	l271
   520  000138                     l271:
   521  000138  928C               	bcf	3980,1,c	;volatile
   522  00013A  D000               	goto	l273
   523  00013C                     l273:
   524  00013C  9C8A               	bcf	3978,6,c	;volatile
   525  00013E  D000               	goto	l275
   526  000140                     l275:
   527  000140  9E8A               	bcf	3978,7,c	;volatile
   528                           
   529                           ;main.c: 156: break;
   530  000142  0012               	return	
   531  000144                     l278:
   532  000144  9089               	bcf	3977,0,c	;volatile
   533                           
   534                           ;main.c: 159: break;
   535  000146  0012               	return	
   536  000148                     l281:
   537  000148  8089               	bsf	3977,0,c	;volatile
   538                           
   539                           ;main.c: 162: break;
   540  00014A  0012               	return	
   541  00014C                     l284:
   542  00014C  9289               	bcf	3977,1,c	;volatile
   543                           
   544                           ;main.c: 167: break;
   545  00014E  0012               	return	
   546  000150                     l287:
   547  000150  8289               	bsf	3977,1,c	;volatile
   548                           
   549                           ;main.c: 170: break;
   550  000152  0012               	return	
   551  000154                     l290:
   552  000154  9C8A               	bcf	3978,6,c	;volatile
   553                           
   554                           ;main.c: 173: break;
   555  000156  0012               	return	
   556  000158                     l293:
   557  000158  8C8A               	bsf	3978,6,c	;volatile
   558                           
   559                           ;main.c: 176: break;
   560  00015A  0012               	return	
   561  00015C                     l296:
   562  00015C  9489               	bcf	3977,2,c	;volatile
   563                           
   564                           ;main.c: 180: break;
   565  00015E  0012               	return	
   566  000160                     l299:
   567  000160  8489               	bsf	3977,2,c	;volatile
   568                           
   569                           ;main.c: 183: break;
   570  000162  0012               	return	
   571  000164                     l302:
   572  000164  9689               	bcf	3977,3,c	;volatile
   573                           
   574                           ;main.c: 186: break;
   575  000166  0012               	return	
   576  000168                     l305:
   577  000168  8689               	bsf	3977,3,c	;volatile
   578                           
   579                           ;main.c: 189: break;
   580  00016A  0012               	return	
   581  00016C                     l308:
   582  00016C  9889               	bcf	3977,4,c	;volatile
   583                           
   584                           ;main.c: 192: break;
   585  00016E  0012               	return	
   586  000170                     l311:
   587  000170  8889               	bsf	3977,4,c	;volatile
   588                           
   589                           ;main.c: 195: break;
   590  000172  0012               	return	
   591  000174                     l314:
   592  000174  9A89               	bcf	3977,5,c	;volatile
   593                           
   594                           ;main.c: 198: break;
   595  000176  0012               	return	
   596  000178                     l317:
   597  000178  8A89               	bsf	3977,5,c	;volatile
   598                           
   599                           ;main.c: 201: break;
   600  00017A  0012               	return	
   601  00017C                     l320:
   602  00017C  908D               	bcf	3981,0,c	;volatile
   603                           
   604                           ;main.c: 205: break;
   605  00017E  0012               	return	
   606  000180                     l323:
   607  000180  808D               	bsf	3981,0,c	;volatile
   608                           
   609                           ;main.c: 208: break;
   610  000182  0012               	return	
   611  000184                     l326:
   612  000184  928D               	bcf	3981,1,c	;volatile
   613                           
   614                           ;main.c: 211: break;
   615  000186  0012               	return	
   616  000188                     l329:
   617  000188  828D               	bsf	3981,1,c	;volatile
   618                           
   619                           ;main.c: 214: break;
   620  00018A  0012               	return	
   621  00018C                     l332:
   622  00018C  948D               	bcf	3981,2,c	;volatile
   623                           
   624                           ;main.c: 217: break;
   625  00018E  0012               	return	
   626  000190                     l335:
   627  000190  848D               	bsf	3981,2,c	;volatile
   628                           
   629                           ;main.c: 220: break;
   630  000192  0012               	return	
   631  000194                     l338:
   632  000194  9C89               	bcf	3977,6,c	;volatile
   633                           
   634                           ;main.c: 223: break;
   635  000196  0012               	return	
   636  000198                     l341:
   637  000198  8C89               	bsf	3977,6,c	;volatile
   638                           
   639                           ;main.c: 226: break;
   640  00019A  0012               	return	
   641  00019C                     l344:
   642  00019C  908B               	bcf	3979,0,c	;volatile
   643                           
   644                           ;main.c: 229: break;
   645  00019E  0012               	return	
   646  0001A0                     l347:
   647  0001A0  808B               	bsf	3979,0,c	;volatile
   648                           
   649                           ;main.c: 232: break;
   650  0001A2  0012               	return	
   651  0001A4                     l350:
   652  0001A4  928B               	bcf	3979,1,c	;volatile
   653                           
   654                           ;main.c: 235: break;
   655  0001A6  0012               	return	
   656  0001A8                     l353:
   657  0001A8  828B               	bsf	3979,1,c	;volatile
   658                           
   659                           ;main.c: 238: break;
   660  0001AA  0012               	return	
   661  0001AC                     l356:
   662  0001AC  948B               	bcf	3979,2,c	;volatile
   663                           
   664                           ;main.c: 241: break;
   665  0001AE  0012               	return	
   666  0001B0                     l359:
   667  0001B0  848B               	bsf	3979,2,c	;volatile
   668                           
   669                           ;main.c: 244: break;
   670  0001B2  0012               	return	
   671  0001B4                     l362:
   672  0001B4  908C               	bcf	3980,0,c	;volatile
   673                           
   674                           ;main.c: 247: break;
   675  0001B6  0012               	return	
   676  0001B8                     l365:
   677  0001B8  808C               	bsf	3980,0,c	;volatile
   678                           
   679                           ;main.c: 250: break;
   680  0001BA  0012               	return	
   681  0001BC                     l368:
   682  0001BC  9E8A               	bcf	3978,7,c	;volatile
   683                           
   684                           ;main.c: 253: break;
   685  0001BE  0012               	return	
   686  0001C0                     l371:
   687  0001C0  8E8A               	bsf	3978,7,c	;volatile
   688                           
   689                           ;main.c: 256: break;
   690  0001C2  0012               	return	
   691  0001C4                     l374:
   692  0001C4  9089               	bcf	3977,0,c	;volatile
   693  0001C6  D000               	goto	l376
   694  0001C8                     l376:
   695  0001C8  9289               	bcf	3977,1,c	;volatile
   696  0001CA  D000               	goto	l378
   697  0001CC                     l378:
   698  0001CC  9489               	bcf	3977,2,c	;volatile
   699  0001CE  D000               	goto	l380
   700  0001D0                     l380:
   701  0001D0  9689               	bcf	3977,3,c	;volatile
   702  0001D2  D000               	goto	l382
   703  0001D4                     l382:
   704  0001D4  9889               	bcf	3977,4,c	;volatile
   705  0001D6  D000               	goto	l384
   706  0001D8                     l384:
   707  0001D8  9A89               	bcf	3977,5,c	;volatile
   708  0001DA  D000               	goto	l386
   709  0001DC                     l386:
   710  0001DC  908D               	bcf	3981,0,c	;volatile
   711  0001DE  D000               	goto	l388
   712  0001E0                     l388:
   713  0001E0  928D               	bcf	3981,1,c	;volatile
   714  0001E2  D000               	goto	l390
   715  0001E4                     l390:
   716  0001E4  948D               	bcf	3981,2,c	;volatile
   717  0001E6  D000               	goto	l392
   718  0001E8                     l392:
   719  0001E8  9C89               	bcf	3977,6,c	;volatile
   720  0001EA  D000               	goto	l394
   721  0001EC                     l394:
   722  0001EC  908B               	bcf	3979,0,c	;volatile
   723  0001EE  D000               	goto	l396
   724  0001F0                     l396:
   725  0001F0  928B               	bcf	3979,1,c	;volatile
   726  0001F2  D000               	goto	l398
   727  0001F4                     l398:
   728  0001F4  948B               	bcf	3979,2,c	;volatile
   729  0001F6  D000               	goto	l400
   730  0001F8                     l400:
   731  0001F8  908C               	bcf	3980,0,c	;volatile
   732  0001FA  D000               	goto	l402
   733  0001FC                     l402:
   734  0001FC  928C               	bcf	3980,1,c	;volatile
   735  0001FE  D000               	goto	l404
   736  000200                     l404:
   737  000200  9C8A               	bcf	3978,6,c	;volatile
   738  000202  D000               	goto	l406
   739  000204                     l406:
   740  000204  9E8A               	bcf	3978,7,c	;volatile
   741                           
   742                           ;main.c: 275: break;
   743  000206  0012               	return	
   744  000208                     l409:
   745  000208  828A               	bsf	3978,1,c	;volatile
   746                           
   747                           ;main.c: 281: break;
   748  00020A  0012               	return	
   749  00020C                     l412:
   750  00020C  8E8A               	bsf	3978,7,c	;volatile
   751                           
   752                           ;main.c: 284: break;
   753  00020E  0012               	return	
   754  000210                     l415:
   755  000210  808A               	bsf	3978,0,c	;volatile
   756                           
   757                           ;main.c: 287: break;
   758  000212  0012               	return	
   759  000214                     l418:
   760  000214  8E8C               	bsf	3980,7,c	;volatile
   761                           
   762                           ;main.c: 290: break;
   763  000216  0012               	return	
   764  000218                     l1111:
   765                           
   766                           ;main.c: 292: EUSART1_Write('U');
   767  000218  0E55               	movlw	85
   768  00021A  EC0A  F002         	call	_EUSART1_Write
   769                           
   770                           ;main.c: 294: }
   771                           
   772                           ;main.c: 293: break;
   773  00021E  0012               	return	
   774  000220                     l1115:
   775  000220  5036               	movf	relayControl@data,w,c
   776                           
   777                           ; Switch size 1, requested type "space"
   778                           ; Number of cases is 42, Range of values is 2 to 120
   779                           ; switch strategies available:
   780                           ; Name         Instructions Cycles
   781                           ; simple_byte          127    64 (average)
   782                           ;	Chosen strategy is simple_byte
   783  000222  0A02               	xorlw	2	; case 2
   784  000224  B4D8               	btfsc	status,2,c
   785  000226  D78E               	goto	l278
   786  000228  0A06               	xorlw	6	; case 4
   787  00022A  B4D8               	btfsc	status,2,c
   788  00022C  D78F               	goto	l284
   789  00022E  0A01               	xorlw	1	; case 5
   790  000230  B4D8               	btfsc	status,2,c
   791  000232  D790               	goto	l290
   792  000234  0A03               	xorlw	3	; case 6
   793  000236  B4D8               	btfsc	status,2,c
   794  000238  D791               	goto	l296
   795  00023A  0A0E               	xorlw	14	; case 8
   796  00023C  B4D8               	btfsc	status,2,c
   797  00023E  D792               	goto	l302
   798  000240  0A02               	xorlw	2	; case 10
   799  000242  B4D8               	btfsc	status,2,c
   800  000244  D793               	goto	l308
   801  000246  0A06               	xorlw	6	; case 12
   802  000248  B4D8               	btfsc	status,2,c
   803  00024A  D794               	goto	l314
   804  00024C  0A02               	xorlw	2	; case 14
   805  00024E  B4D8               	btfsc	status,2,c
   806  000250  D795               	goto	l320
   807  000252  0A1E               	xorlw	30	; case 16
   808  000254  B4D8               	btfsc	status,2,c
   809  000256  D796               	goto	l326
   810  000258  0A02               	xorlw	2	; case 18
   811  00025A  B4D8               	btfsc	status,2,c
   812  00025C  D797               	goto	l332
   813  00025E  0A06               	xorlw	6	; case 20
   814  000260  B4D8               	btfsc	status,2,c
   815  000262  D798               	goto	l338
   816  000264  0A02               	xorlw	2	; case 22
   817  000266  B4D8               	btfsc	status,2,c
   818  000268  D799               	goto	l344
   819  00026A  0A0E               	xorlw	14	; case 24
   820  00026C  B4D8               	btfsc	status,2,c
   821  00026E  D79A               	goto	l350
   822  000270  0A02               	xorlw	2	; case 26
   823  000272  B4D8               	btfsc	status,2,c
   824  000274  D79B               	goto	l356
   825  000276  0A06               	xorlw	6	; case 28
   826  000278  B4D8               	btfsc	status,2,c
   827  00027A  D79C               	goto	l362
   828  00027C  0A02               	xorlw	2	; case 30
   829  00027E  B4D8               	btfsc	status,2,c
   830  000280  D79D               	goto	l368
   831  000282  0A3C               	xorlw	60	; case 34
   832  000284  B4D8               	btfsc	status,2,c
   833  000286  D760               	goto	l281
   834  000288  0A01               	xorlw	1	; case 35
   835  00028A  B4D8               	btfsc	status,2,c
   836  00028C  D7BF               	goto	l412
   837  00028E  0A07               	xorlw	7	; case 36
   838  000290  B4D8               	btfsc	status,2,c
   839  000292  D75E               	goto	l287
   840  000294  0A01               	xorlw	1	; case 37
   841  000296  B4D8               	btfsc	status,2,c
   842  000298  D75F               	goto	l293
   843  00029A  0A03               	xorlw	3	; case 38
   844  00029C  B4D8               	btfsc	status,2,c
   845  00029E  D760               	goto	l299
   846  0002A0  0A0E               	xorlw	14	; case 40
   847  0002A2  B4D8               	btfsc	status,2,c
   848  0002A4  D761               	goto	l305
   849  0002A6  0A02               	xorlw	2	; case 42
   850  0002A8  B4D8               	btfsc	status,2,c
   851  0002AA  D762               	goto	l311
   852  0002AC  0A06               	xorlw	6	; case 44
   853  0002AE  B4D8               	btfsc	status,2,c
   854  0002B0  D763               	goto	l317
   855  0002B2  0A02               	xorlw	2	; case 46
   856  0002B4  B4D8               	btfsc	status,2,c
   857  0002B6  D764               	goto	l323
   858  0002B8  0A01               	xorlw	1	; case 47
   859  0002BA  B4D8               	btfsc	status,2,c
   860  0002BC  D7A5               	goto	l409
   861  0002BE  0A1F               	xorlw	31	; case 48
   862  0002C0  B4D8               	btfsc	status,2,c
   863  0002C2  D762               	goto	l329
   864  0002C4  0A01               	xorlw	1	; case 49
   865  0002C6  B4D8               	btfsc	status,2,c
   866  0002C8  D7A3               	goto	l415
   867  0002CA  0A03               	xorlw	3	; case 50
   868  0002CC  B4D8               	btfsc	status,2,c
   869  0002CE  D760               	goto	l335
   870  0002D0  0A01               	xorlw	1	; case 51
   871  0002D2  B4D8               	btfsc	status,2,c
   872  0002D4  D79F               	goto	l418
   873  0002D6  0A07               	xorlw	7	; case 52
   874  0002D8  B4D8               	btfsc	status,2,c
   875  0002DA  D75E               	goto	l341
   876  0002DC  0A02               	xorlw	2	; case 54
   877  0002DE  B4D8               	btfsc	status,2,c
   878  0002E0  D75F               	goto	l347
   879  0002E2  0A0E               	xorlw	14	; case 56
   880  0002E4  B4D8               	btfsc	status,2,c
   881  0002E6  D760               	goto	l353
   882  0002E8  0A02               	xorlw	2	; case 58
   883  0002EA  B4D8               	btfsc	status,2,c
   884  0002EC  D761               	goto	l359
   885  0002EE  0A06               	xorlw	6	; case 60
   886  0002F0  B4D8               	btfsc	status,2,c
   887  0002F2  D762               	goto	l365
   888  0002F4  0A02               	xorlw	2	; case 62
   889  0002F6  B4D8               	btfsc	status,2,c
   890  0002F8  D763               	goto	l371
   891  0002FA  0A77               	xorlw	119	; case 73
   892  0002FC  B4D8               	btfsc	status,2,c
   893  0002FE  D6D5               	goto	l1097
   894  000300  0A1D               	xorlw	29	; case 84
   895  000302  B4D8               	btfsc	status,2,c
   896  000304  D6CE               	goto	l1095
   897  000306  0A0C               	xorlw	12	; case 88
   898  000308  B4D8               	btfsc	status,2,c
   899  00030A  D6FA               	goto	l243
   900  00030C  0A39               	xorlw	57	; case 97
   901  00030E  B4D8               	btfsc	status,2,c
   902  000310  D6F3               	goto	l237
   903  000312  0A03               	xorlw	3	; case 98
   904  000314  B4D8               	btfsc	status,2,c
   905  000316  D6F2               	goto	l240
   906  000318  0A1A               	xorlw	26	; case 120
   907  00031A  B4D8               	btfsc	status,2,c
   908  00031C  D753               	goto	l374
   909  00031E  D77C               	goto	l1111
   910  000320  0012               	return		;funcret
   911  000322                     __end_of_relayControl:
   912                           	opt stack 0
   913                           tblptru	equ	0xFF8
   914                           intcon	equ	0xFF2
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           indf2	equ	0xFDF
   918                           fsr2h	equ	0xFDA
   919                           fsr2l	equ	0xFD9
   920                           status	equ	0xFD8
   921                           
   922 ;; *************** function _EUSART1_Write *****************
   923 ;; Defined at:
   924 ;;		line 132 in file "mcc_generated_files/eusart1.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  txData          1    wreg     unsigned char 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  txData          1   14[COMRAM] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;		None               void
   931 ;; Registers used:
   932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   938 ;;      Params:         0       0       0       0       0       0       0
   939 ;;      Locals:         1       0       0       0       0       0       0
   940 ;;      Temps:          0       0       0       0       0       0       0
   941 ;;      Totals:         1       0       0       0       0       0       0
   942 ;;Total ram usage:        1 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    2
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_relayControl
   949 ;;		_putch
   950 ;;		_sendString
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text2
   955  000414                     __ptext2:
   956                           	opt stack 0
   957  000414                     _EUSART1_Write:
   958                           	opt stack 27
   959                           
   960                           ;incstack = 0
   961                           ;EUSART1_Write@txData stored from wreg
   962  000414  6E34               	movwf	EUSART1_Write@txData,c
   963                           
   964                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
   965  000416  D000               	goto	l1021
   966  000418                     l1021:
   967  000418  503B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
   968  00041A  B4D8               	btfsc	status,2,c
   969  00041C  D7FD               	goto	l1021
   970                           
   971                           ;eusart1.c: 136: }
   972                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
   973  00041E  B89D               	btfsc	3997,4,c	;volatile
   974  000420  D003               	goto	l70
   975                           
   976                           ;eusart1.c: 139: {
   977                           ;eusart1.c: 140: TXREG1 = txData;
   978  000422  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
   979                           
   980                           ;eusart1.c: 141: }
   981  000426  D014               	goto	l1035
   982  000428                     l70:
   983                           
   984                           ;eusart1.c: 142: else
   985                           ;eusart1.c: 143: {
   986                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
   987  000428  989D               	bcf	3997,4,c	;volatile
   988                           
   989                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
   990  00042A  5024               	movf	_eusart1TxHead,w,c
   991  00042C  0D01               	mullw	1
   992  00042E  0E19               	movlw	low _eusart1TxBuffer
   993  000430  24F3               	addwf	prodl,w,c
   994  000432  6ED9               	movwf	fsr2l,c
   995  000434  0E00               	movlw	high _eusart1TxBuffer
   996  000436  20F4               	addwfc	prodh,w,c
   997  000438  6EDA               	movwf	fsr2h,c
   998  00043A  C034  FFDF         	movff	EUSART1_Write@txData,indf2
   999  00043E  2A24               	incf	_eusart1TxHead,f,c
  1000                           
  1001                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1002  000440  0E07               	movlw	7
  1003  000442  6424               	cpfsgt	_eusart1TxHead,c
  1004  000444  D003               	goto	l1033
  1005                           
  1006                           ;eusart1.c: 147: {
  1007                           ;eusart1.c: 148: eusart1TxHead = 0;
  1008  000446  0E00               	movlw	0
  1009  000448  6E24               	movwf	_eusart1TxHead,c
  1010  00044A  D000               	goto	l1033
  1011  00044C                     l1033:
  1012                           
  1013                           ;eusart1.c: 149: }
  1014                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  1015  00044C  063B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1016  00044E  D000               	goto	l1035
  1017  000450                     l1035:
  1018                           
  1019                           ;eusart1.c: 151: }
  1020                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
  1021  000450  889D               	bsf	3997,4,c	;volatile
  1022  000452  0012               	return		;funcret
  1023  000454                     __end_of_EUSART1_Write:
  1024                           	opt stack 0
  1025                           tblptru	equ	0xFF8
  1026                           prodh	equ	0xFF4
  1027                           prodl	equ	0xFF3
  1028                           intcon	equ	0xFF2
  1029                           postinc0	equ	0xFEE
  1030                           wreg	equ	0xFE8
  1031                           indf2	equ	0xFDF
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _SYSTEM_Initialize *****************
  1037 ;; Defined at:
  1038 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    3
  1059 ;; This function calls:
  1060 ;;		_EUSART1_Initialize
  1061 ;;		_INTERRUPT_Initialize
  1062 ;;		_OSCILLATOR_Initialize
  1063 ;;		_PIN_MANAGER_Initialize
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070  00053A                     __ptext3:
  1071                           	opt stack 0
  1072  00053A                     _SYSTEM_Initialize:
  1073                           	opt stack 27
  1074                           
  1075                           ;mcc.c: 114: INTERRUPT_Initialize();
  1076                           
  1077                           ;incstack = 0
  1078  00053A  ECAD  F002         	call	_INTERRUPT_Initialize	;wreg free
  1079                           
  1080                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1081  00053E  ECE4  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1082                           
  1083                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1084  000542  ECA6  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1085                           
  1086                           ;mcc.c: 117: EUSART1_Initialize();
  1087  000546  EC47  F002         	call	_EUSART1_Initialize	;wreg free
  1088  00054A  0012               	return		;funcret
  1089  00054C                     __end_of_SYSTEM_Initialize:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           prodh	equ	0xFF4
  1093                           prodl	equ	0xFF3
  1094                           intcon	equ	0xFF2
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           indf2	equ	0xFDF
  1098                           fsr2h	equ	0xFDA
  1099                           fsr2l	equ	0xFD9
  1100                           status	equ	0xFD8
  1101                           
  1102 ;; *************** function _PIN_MANAGER_Initialize *****************
  1103 ;; Defined at:
  1104 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;		None               void
  1111 ;; Registers used:
  1112 ;;		wreg, status,2
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1118 ;;      Params:         0       0       0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    2
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_SYSTEM_Initialize
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text4
  1133  0003C8                     __ptext4:
  1134                           	opt stack 0
  1135  0003C8                     _PIN_MANAGER_Initialize:
  1136                           	opt stack 27
  1137                           
  1138                           ;pin_manager.c: 56: LATE = 0x00;
  1139                           
  1140                           ;incstack = 0
  1141  0003C8  0E00               	movlw	0
  1142  0003CA  6E8D               	movwf	3981,c	;volatile
  1143                           
  1144                           ;pin_manager.c: 57: LATD = 0x00;
  1145  0003CC  0E00               	movlw	0
  1146  0003CE  6E8C               	movwf	3980,c	;volatile
  1147                           
  1148                           ;pin_manager.c: 58: LATA = 0x00;
  1149  0003D0  0E00               	movlw	0
  1150  0003D2  6E89               	movwf	3977,c	;volatile
  1151                           
  1152                           ;pin_manager.c: 59: LATB = 0x00;
  1153  0003D4  0E00               	movlw	0
  1154  0003D6  6E8A               	movwf	3978,c	;volatile
  1155                           
  1156                           ;pin_manager.c: 60: LATC = 0x00;
  1157  0003D8  0E00               	movlw	0
  1158  0003DA  6E8B               	movwf	3979,c	;volatile
  1159                           
  1160                           ;pin_manager.c: 65: TRISE = 0x00;
  1161  0003DC  0E00               	movlw	0
  1162  0003DE  6E96               	movwf	3990,c	;volatile
  1163                           
  1164                           ;pin_manager.c: 66: TRISA = 0x80;
  1165  0003E0  0E80               	movlw	128
  1166  0003E2  6E92               	movwf	3986,c	;volatile
  1167                           
  1168                           ;pin_manager.c: 67: TRISB = 0x3C;
  1169  0003E4  0E3C               	movlw	60
  1170  0003E6  6E93               	movwf	3987,c	;volatile
  1171                           
  1172                           ;pin_manager.c: 68: TRISC = 0xB8;
  1173  0003E8  0EB8               	movlw	184
  1174  0003EA  6E94               	movwf	3988,c	;volatile
  1175                           
  1176                           ;pin_manager.c: 69: TRISD = 0x7C;
  1177  0003EC  0E7C               	movlw	124
  1178  0003EE  6E95               	movwf	3989,c	;volatile
  1179                           
  1180                           ;pin_manager.c: 74: ANSELC = 0x38;
  1181  0003F0  0E38               	movlw	56
  1182  0003F2  010F               	movlb	15	; () banked
  1183  0003F4  6F3A               	movwf	58,b	;volatile
  1184                           
  1185                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1186  0003F6  0E3F               	movlw	63
  1187  0003F8  010F               	movlb	15	; () banked
  1188  0003FA  6F39               	movwf	57,b	;volatile
  1189                           
  1190                           ;pin_manager.c: 76: ANSELD = 0x00;
  1191  0003FC  0E00               	movlw	0
  1192  0003FE  010F               	movlb	15	; () banked
  1193  000400  6F3B               	movwf	59,b	;volatile
  1194                           
  1195                           ;pin_manager.c: 77: ANSELE = 0x00;
  1196  000402  0E00               	movlw	0
  1197  000404  010F               	movlb	15	; () banked
  1198  000406  6F3C               	movwf	60,b	;volatile
  1199                           
  1200                           ;pin_manager.c: 78: ANSELA = 0x00;
  1201  000408  0E00               	movlw	0
  1202  00040A  010F               	movlb	15	; () banked
  1203  00040C  6F38               	movwf	56,b	;volatile
  1204                           
  1205                           ; BSR set to: 15
  1206                           ;pin_manager.c: 83: WPUB = 0xFF;
  1207  00040E  6861               	setf	3937,c	;volatile
  1208                           
  1209                           ; BSR set to: 15
  1210                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1211  000410  9EF1               	bcf	intcon2,7,c	;volatile
  1212                           
  1213                           ; BSR set to: 15
  1214  000412  0012               	return		;funcret
  1215  000414                     __end_of_PIN_MANAGER_Initialize:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           prodh	equ	0xFF4
  1219                           prodl	equ	0xFF3
  1220                           intcon	equ	0xFF2
  1221                           intcon2	equ	0xFF1
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           indf2	equ	0xFDF
  1225                           fsr2h	equ	0xFDA
  1226                           fsr2l	equ	0xFD9
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function _OSCILLATOR_Initialize *****************
  1230 ;; Defined at:
  1231 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;		None               void
  1238 ;; Registers used:
  1239 ;;		wreg, status,2
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1245 ;;      Params:         0       0       0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    2
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_SYSTEM_Initialize
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text5
  1260  00054C                     __ptext5:
  1261                           	opt stack 0
  1262  00054C                     _OSCILLATOR_Initialize:
  1263                           	opt stack 27
  1264                           
  1265                           ;mcc.c: 123: OSCCON = 0x60;
  1266                           
  1267                           ; BSR set to: 15
  1268                           ;incstack = 0
  1269  00054C  0E60               	movlw	96
  1270  00054E  6ED3               	movwf	4051,c	;volatile
  1271                           
  1272                           ;mcc.c: 125: OSCCON2 = 0x04;
  1273  000550  0E04               	movlw	4
  1274  000552  6ED2               	movwf	4050,c	;volatile
  1275                           
  1276                           ;mcc.c: 127: OSCTUNE = 0x00;
  1277  000554  0E00               	movlw	0
  1278  000556  6E9B               	movwf	3995,c	;volatile
  1279  000558  0012               	return		;funcret
  1280  00055A                     __end_of_OSCILLATOR_Initialize:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           prodh	equ	0xFF4
  1284                           prodl	equ	0xFF3
  1285                           intcon	equ	0xFF2
  1286                           intcon2	equ	0xFF1
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           indf2	equ	0xFDF
  1290                           fsr2h	equ	0xFDA
  1291                           fsr2l	equ	0xFD9
  1292                           status	equ	0xFD8
  1293                           
  1294 ;; *************** function _INTERRUPT_Initialize *****************
  1295 ;; Defined at:
  1296 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;		None               void
  1303 ;; Registers used:
  1304 ;;		None
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1310 ;;      Params:         0       0       0       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0
  1313 ;;      Totals:         0       0       0       0       0       0       0
  1314 ;;Total ram usage:        0 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    2
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_SYSTEM_Initialize
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text6
  1325  00055A                     __ptext6:
  1326                           	opt stack 0
  1327  00055A                     _INTERRUPT_Initialize:
  1328                           	opt stack 27
  1329                           
  1330                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1331                           
  1332                           ;incstack = 0
  1333  00055A  9ED0               	bcf	4048,7,c	;volatile
  1334  00055C  0012               	return		;funcret
  1335  00055E                     __end_of_INTERRUPT_Initialize:
  1336                           	opt stack 0
  1337                           tblptru	equ	0xFF8
  1338                           prodh	equ	0xFF4
  1339                           prodl	equ	0xFF3
  1340                           intcon	equ	0xFF2
  1341                           intcon2	equ	0xFF1
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           indf2	equ	0xFDF
  1345                           fsr2h	equ	0xFDA
  1346                           fsr2l	equ	0xFD9
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _EUSART1_Initialize *****************
  1350 ;; Defined at:
  1351 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;		None               void
  1358 ;; Registers used:
  1359 ;;		wreg, status,2
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1365 ;;      Params:         0       0       0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    2
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_SYSTEM_Initialize
  1376 ;;		_sendString
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text7
  1381  00048E                     __ptext7:
  1382                           	opt stack 0
  1383  00048E                     _EUSART1_Initialize:
  1384                           	opt stack 27
  1385                           
  1386                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1387                           
  1388                           ;incstack = 0
  1389  00048E  9A9D               	bcf	3997,5,c	;volatile
  1390                           
  1391                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1392  000490  989D               	bcf	3997,4,c	;volatile
  1393                           
  1394                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1395  000492  0E08               	movlw	8
  1396  000494  6EB8               	movwf	4024,c	;volatile
  1397                           
  1398                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1399  000496  0E90               	movlw	144
  1400  000498  6EAB               	movwf	4011,c	;volatile
  1401                           
  1402                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1403  00049A  0E24               	movlw	36
  1404  00049C  6EAC               	movwf	4012,c	;volatile
  1405                           
  1406                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1407  00049E  0ECF               	movlw	207
  1408  0004A0  6EAF               	movwf	4015,c	;volatile
  1409                           
  1410                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1411  0004A2  0E00               	movlw	0
  1412  0004A4  6EB0               	movwf	4016,c	;volatile
  1413                           
  1414                           ;eusart1.c: 100: eusart1TxHead = 0;
  1415  0004A6  0E00               	movlw	0
  1416  0004A8  6E24               	movwf	_eusart1TxHead,c
  1417                           
  1418                           ;eusart1.c: 101: eusart1TxTail = 0;
  1419  0004AA  0E00               	movlw	0
  1420  0004AC  6E25               	movwf	_eusart1TxTail,c
  1421                           
  1422                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1423  0004AE  0E08               	movlw	8
  1424  0004B0  6E3B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1425                           
  1426                           ;eusart1.c: 104: eusart1RxHead = 0;
  1427  0004B2  0E00               	movlw	0
  1428  0004B4  6E22               	movwf	_eusart1RxHead,c
  1429                           
  1430                           ;eusart1.c: 105: eusart1RxTail = 0;
  1431  0004B6  0E00               	movlw	0
  1432  0004B8  6E23               	movwf	_eusart1RxTail,c
  1433                           
  1434                           ;eusart1.c: 106: eusart1RxCount = 0;
  1435  0004BA  0E00               	movlw	0
  1436  0004BC  6E21               	movwf	_eusart1RxCount,c	;volatile
  1437                           
  1438                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1439  0004BE  8A9D               	bsf	3997,5,c	;volatile
  1440  0004C0  0012               	return		;funcret
  1441  0004C2                     __end_of_EUSART1_Initialize:
  1442                           	opt stack 0
  1443                           tblptru	equ	0xFF8
  1444                           prodh	equ	0xFF4
  1445                           prodl	equ	0xFF3
  1446                           intcon	equ	0xFF2
  1447                           intcon2	equ	0xFF1
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           indf2	equ	0xFDF
  1451                           fsr2h	equ	0xFDA
  1452                           fsr2l	equ	0xFD9
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function _EUSART1_Read *****************
  1456 ;; Defined at:
  1457 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  readValue       1   14[COMRAM] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1471 ;;      Params:         0       0       0       0       0       0       0
  1472 ;;      Locals:         1       0       0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0
  1474 ;;      Totals:         1       0       0       0       0       0       0
  1475 ;;Total ram usage:        1 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    2
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;;		_getch
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text8
  1487  000454                     __ptext8:
  1488                           	opt stack 0
  1489  000454                     _EUSART1_Read:
  1490                           	opt stack 28
  1491                           
  1492                           ;eusart1.c: 114: uint8_t readValue = 0;
  1493                           
  1494                           ;incstack = 0
  1495  000454  0E00               	movlw	0
  1496  000456  6E34               	movwf	EUSART1_Read@readValue,c
  1497                           
  1498                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1499  000458  D000               	goto	l1047
  1500  00045A                     l1047:
  1501  00045A  5021               	movf	_eusart1RxCount,w,c	;volatile
  1502  00045C  B4D8               	btfsc	status,2,c
  1503  00045E  D7FD               	goto	l1047
  1504                           
  1505                           ;eusart1.c: 118: }
  1506                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1507  000460  5023               	movf	_eusart1RxTail,w,c
  1508  000462  0D01               	mullw	1
  1509  000464  0E11               	movlw	low _eusart1RxBuffer
  1510  000466  24F3               	addwf	prodl,w,c
  1511  000468  6ED9               	movwf	fsr2l,c
  1512  00046A  0E00               	movlw	high _eusart1RxBuffer
  1513  00046C  20F4               	addwfc	prodh,w,c
  1514  00046E  6EDA               	movwf	fsr2h,c
  1515  000470  50DF               	movf	indf2,w,c
  1516  000472  6E34               	movwf	EUSART1_Read@readValue,c
  1517  000474  2A23               	incf	_eusart1RxTail,f,c
  1518                           
  1519                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1520  000476  0E07               	movlw	7
  1521  000478  6423               	cpfsgt	_eusart1RxTail,c
  1522  00047A  D003               	goto	l1057
  1523                           
  1524                           ;eusart1.c: 122: {
  1525                           ;eusart1.c: 123: eusart1RxTail = 0;
  1526  00047C  0E00               	movlw	0
  1527  00047E  6E23               	movwf	_eusart1RxTail,c
  1528  000480  D000               	goto	l1057
  1529  000482                     l1057:
  1530                           
  1531                           ;eusart1.c: 124: }
  1532                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1533  000482  9A9D               	bcf	3997,5,c	;volatile
  1534                           
  1535                           ;eusart1.c: 126: eusart1RxCount--;
  1536  000484  0621               	decf	_eusart1RxCount,f,c	;volatile
  1537                           
  1538                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1539  000486  8A9D               	bsf	3997,5,c	;volatile
  1540                           
  1541                           ;eusart1.c: 129: return readValue;
  1542  000488  5034               	movf	EUSART1_Read@readValue,w,c
  1543  00048A  0012               	return	
  1544  00048C  0012               	return		;funcret
  1545  00048E                     __end_of_EUSART1_Read:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           prodh	equ	0xFF4
  1549                           prodl	equ	0xFF3
  1550                           intcon	equ	0xFF2
  1551                           intcon2	equ	0xFF1
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           indf2	equ	0xFDF
  1555                           fsr2h	equ	0xFDA
  1556                           fsr2l	equ	0xFD9
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _INTERRUPT_InterruptManager *****************
  1560 ;; Defined at:
  1561 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;		None               void
  1568 ;; Registers used:
  1569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1575 ;;      Params:         0       0       0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0       0       0
  1577 ;;      Temps:         14       0       0       0       0       0       0
  1578 ;;      Totals:        14       0       0       0       0       0       0
  1579 ;;Total ram usage:       14 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    1
  1582 ;; This function calls:
  1583 ;;		_EUSART1_Receive_ISR
  1584 ;;		_EUSART1_Transmit_ISR
  1585 ;; This function is called by:
  1586 ;;		Interrupt level 2
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	intcode
  1591  000008                     __pintcode:
  1592                           	opt stack 0
  1593  000008                     _INTERRUPT_InterruptManager:
  1594                           	opt stack 27
  1595                           
  1596                           ;incstack = 0
  1597  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1598  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1599  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1600  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1601  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1602  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1603  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1604  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1605  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1606  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1607  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1608  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1609  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1610  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1611                           
  1612                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1613  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1614  000042  A89D               	btfss	3997,4,c	;volatile
  1615  000044  D005               	goto	i2l148
  1616  000046  A89E               	btfss	3998,4,c	;volatile
  1617  000048  D003               	goto	i2l148
  1618                           
  1619                           ;interrupt_manager.c: 61: {
  1620                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1621  00004A  EC61  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  1622                           
  1623                           ;interrupt_manager.c: 63: }
  1624  00004E  D008               	goto	i2l152
  1625  000050                     i2l148:
  1626                           
  1627                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1628  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1629  000052  AA9D               	btfss	3997,5,c	;volatile
  1630  000054  D005               	goto	i2l152
  1631  000056  AA9E               	btfss	3998,5,c	;volatile
  1632  000058  D003               	goto	i2l152
  1633                           
  1634                           ;interrupt_manager.c: 65: {
  1635                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1636  00005A  EC7A  F002         	call	_EUSART1_Receive_ISR	;wreg free
  1637                           
  1638                           ;interrupt_manager.c: 68: else
  1639                           ;interrupt_manager.c: 69: {
  1640                           
  1641                           ;interrupt_manager.c: 67: }
  1642  00005E  D000               	goto	i2l152
  1643  000060                     i2l152:
  1644  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1645  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1646  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1647  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1648  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1649  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1650  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1651  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1652  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1653  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1654  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1655  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1656  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1657  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1658  000098  0011               	retfie		f
  1659  00009A                     __end_of_INTERRUPT_InterruptManager:
  1660                           	opt stack 0
  1661                           pclatu	equ	0xFFB
  1662                           pclath	equ	0xFFA
  1663                           tblptru	equ	0xFF8
  1664                           tblptrh	equ	0xFF7
  1665                           tblptrl	equ	0xFF6
  1666                           tablat	equ	0xFF5
  1667                           prodh	equ	0xFF4
  1668                           prodl	equ	0xFF3
  1669                           intcon	equ	0xFF2
  1670                           intcon2	equ	0xFF1
  1671                           postinc0	equ	0xFEE
  1672                           fsr0h	equ	0xFEA
  1673                           fsr0l	equ	0xFE9
  1674                           wreg	equ	0xFE8
  1675                           fsr1h	equ	0xFE2
  1676                           fsr1l	equ	0xFE1
  1677                           indf2	equ	0xFDF
  1678                           fsr2h	equ	0xFDA
  1679                           fsr2l	equ	0xFD9
  1680                           status	equ	0xFD8
  1681                           
  1682 ;; *************** function _EUSART1_Transmit_ISR *****************
  1683 ;; Defined at:
  1684 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;		None               void
  1691 ;; Registers used:
  1692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1698 ;;      Params:         0       0       0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_INTERRUPT_InterruptManager
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text10
  1712  0004C2                     __ptext10:
  1713                           	opt stack 0
  1714  0004C2                     _EUSART1_Transmit_ISR:
  1715                           	opt stack 27
  1716                           
  1717                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1718                           
  1719                           ;incstack = 0
  1720  0004C2  0E08               	movlw	8
  1721  0004C4  603B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1722  0004C6  D013               	goto	i2l82
  1723                           
  1724                           ;eusart1.c: 170: {
  1725                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1726  0004C8  5025               	movf	_eusart1TxTail,w,c
  1727  0004CA  0D01               	mullw	1
  1728  0004CC  0E19               	movlw	low _eusart1TxBuffer
  1729  0004CE  24F3               	addwf	prodl,w,c
  1730  0004D0  6ED9               	movwf	fsr2l,c
  1731  0004D2  0E00               	movlw	high _eusart1TxBuffer
  1732  0004D4  20F4               	addwfc	prodh,w,c
  1733  0004D6  6EDA               	movwf	fsr2h,c
  1734  0004D8  50DF               	movf	indf2,w,c
  1735  0004DA  6EAD               	movwf	4013,c	;volatile
  1736  0004DC  2A25               	incf	_eusart1TxTail,f,c
  1737                           
  1738                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1739  0004DE  0E07               	movlw	7
  1740  0004E0  6425               	cpfsgt	_eusart1TxTail,c
  1741  0004E2  D003               	goto	i2l1077
  1742                           
  1743                           ;eusart1.c: 173: {
  1744                           ;eusart1.c: 174: eusart1TxTail = 0;
  1745  0004E4  0E00               	movlw	0
  1746  0004E6  6E25               	movwf	_eusart1TxTail,c
  1747  0004E8  D000               	goto	i2l1077
  1748  0004EA                     i2l1077:
  1749                           
  1750                           ;eusart1.c: 175: }
  1751                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1752  0004EA  2A3B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1753                           
  1754                           ;eusart1.c: 177: }
  1755  0004EC  0012               	return	
  1756  0004EE                     i2l82:
  1757                           
  1758                           ;eusart1.c: 178: else
  1759                           ;eusart1.c: 179: {
  1760                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1761  0004EE  989D               	bcf	3997,4,c	;volatile
  1762  0004F0  0012               	return	
  1763  0004F2  0012               	return		;funcret
  1764  0004F4                     __end_of_EUSART1_Transmit_ISR:
  1765                           	opt stack 0
  1766                           pclatu	equ	0xFFB
  1767                           pclath	equ	0xFFA
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           prodh	equ	0xFF4
  1773                           prodl	equ	0xFF3
  1774                           intcon	equ	0xFF2
  1775                           intcon2	equ	0xFF1
  1776                           postinc0	equ	0xFEE
  1777                           fsr0h	equ	0xFEA
  1778                           fsr0l	equ	0xFE9
  1779                           wreg	equ	0xFE8
  1780                           fsr1h	equ	0xFE2
  1781                           fsr1l	equ	0xFE1
  1782                           indf2	equ	0xFDF
  1783                           fsr2h	equ	0xFDA
  1784                           fsr2l	equ	0xFD9
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _EUSART1_Receive_ISR *****************
  1788 ;; Defined at:
  1789 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;		None               void
  1796 ;; Registers used:
  1797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1803 ;;      Params:         0       0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_INTERRUPT_InterruptManager
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text11
  1817  0004F4                     __ptext11:
  1818                           	opt stack 0
  1819  0004F4                     _EUSART1_Receive_ISR:
  1820                           	opt stack 27
  1821                           
  1822                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1823                           
  1824                           ;incstack = 0
  1825  0004F4  A2AB               	btfss	4011,1,c	;volatile
  1826  0004F6  D003               	goto	i2l1083
  1827                           
  1828                           ;eusart1.c: 188: {
  1829                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1830  0004F8  98AB               	bcf	4011,4,c	;volatile
  1831                           
  1832                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1833  0004FA  88AB               	bsf	4011,4,c	;volatile
  1834  0004FC  D000               	goto	i2l1083
  1835  0004FE                     i2l1083:
  1836                           
  1837                           ;eusart1.c: 193: }
  1838                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1839  0004FE  5022               	movf	_eusart1RxHead,w,c
  1840  000500  0D01               	mullw	1
  1841  000502  0E11               	movlw	low _eusart1RxBuffer
  1842  000504  24F3               	addwf	prodl,w,c
  1843  000506  6ED9               	movwf	fsr2l,c
  1844  000508  0E00               	movlw	high _eusart1RxBuffer
  1845  00050A  20F4               	addwfc	prodh,w,c
  1846  00050C  6EDA               	movwf	fsr2h,c
  1847  00050E  CFAE FFDF          	movff	4014,indf2	;volatile
  1848  000512  2A22               	incf	_eusart1RxHead,f,c
  1849                           
  1850                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1851  000514  0E07               	movlw	7
  1852  000516  6422               	cpfsgt	_eusart1RxHead,c
  1853  000518  D003               	goto	i2l1091
  1854                           
  1855                           ;eusart1.c: 198: {
  1856                           ;eusart1.c: 199: eusart1RxHead = 0;
  1857  00051A  0E00               	movlw	0
  1858  00051C  6E22               	movwf	_eusart1RxHead,c
  1859  00051E  D000               	goto	i2l1091
  1860  000520                     i2l1091:
  1861                           
  1862                           ;eusart1.c: 200: }
  1863                           ;eusart1.c: 201: eusart1RxCount++;
  1864  000520  2A21               	incf	_eusart1RxCount,f,c	;volatile
  1865  000522  0012               	return		;funcret
  1866  000524                     __end_of_EUSART1_Receive_ISR:
  1867                           	opt stack 0
  1868  0000                     pclatu	equ	0xFFB
  1869                           pclath	equ	0xFFA
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           intcon	equ	0xFF2
  1877                           intcon2	equ	0xFF1
  1878                           postinc0	equ	0xFEE
  1879                           fsr0h	equ	0xFEA
  1880                           fsr0l	equ	0xFE9
  1881                           wreg	equ	0xFE8
  1882                           fsr1h	equ	0xFE2
  1883                           fsr1l	equ	0xFE1
  1884                           indf2	equ	0xFDF
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           pclatu	equ	0xFFB
  1889                           pclath	equ	0xFFA
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           intcon2	equ	0xFF1
  1898                           postinc0	equ	0xFEE
  1899                           fsr0h	equ	0xFEA
  1900                           fsr0l	equ	0xFE9
  1901                           wreg	equ	0xFE8
  1902                           fsr1h	equ	0xFE2
  1903                           fsr1l	equ	0xFE1
  1904                           indf2	equ	0xFDF
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           
  1909                           	psect	rparam
  1910  0000                     pclatu	equ	0xFFB
  1911                           pclath	equ	0xFFA
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           prodh	equ	0xFF4
  1917                           prodl	equ	0xFF3
  1918                           intcon	equ	0xFF2
  1919                           intcon2	equ	0xFF1
  1920                           postinc0	equ	0xFEE
  1921                           fsr0h	equ	0xFEA
  1922                           fsr0l	equ	0xFE9
  1923                           wreg	equ	0xFE8
  1924                           fsr1h	equ	0xFE2
  1925                           fsr1l	equ	0xFE1
  1926                           indf2	equ	0xFDF
  1927                           fsr2h	equ	0xFDA
  1928                           fsr2l	equ	0xFD9
  1929                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_relayControl
    _relayControl->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                             19 COMRAM     1     1      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      3B       1       62.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       9        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 15 17:18:35 2018

           _eusart1TxBufferRemaining 003B                                   l70 0428  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l302 0164  
                                l311 0170                                  l400 01F8  
                                l320 017C                                  l240 00FC  
                                l305 0168                                  l402 01FC  
                                l314 0174                                  l323 0180  
                                l251 0110                                  l243 0100  
                                l412 020C                                  l404 0200  
                                l332 018C                                  l308 016C  
                                l341 0198                                  l317 0178  
                                l261 0124                                  l253 0114  
                                l245 0104                                  l237 00F8  
                                l406 0204                                  l350 01A4  
                                l326 0184                                  l415 0210  
                                l335 0190                                  l271 0138  
                                l263 0128                                  l255 0118  
                                l247 0108                                  l344 019C  
                                l409 0208                                  l353 01A8  
                                l329 0188                                  l281 0148  
                                l273 013C                                  l265 012C  
                                l257 011C                                  l249 010C  
                                l418 0214                                  l362 01B4  
                                l338 0194                                  l290 0154  
                                l371 01C0                                  l347 01A0  
                                l275 0140                                  l267 0130  
                                l259 0120                                  l380 01D0  
                                l356 01AC                                  l284 014C  
                                l365 01B8                                  l293 0158  
                                l269 0134                                  l390 01E4  
                                l382 01D4                                  l374 01C4  
                                l278 0144                                  l359 01B0  
                                l287 0150                                  l392 01E8  
                                l384 01D8                                  l376 01C8  
                                l368 01BC                                  l296 015C  
                                l394 01EC                                  l386 01DC  
                                l378 01CC                                  l299 0160  
                                l396 01F0                                  l388 01E0  
                                l398 01F4                         __CFG_CPB$OFF 000000  
                                u100 00C4                                  u110 00F6  
                                u207 00DE                         __CFG_CPD$OFF 000000  
                                prod 000FF3                                  wreg 000FE8  
                               l1021 0418                                 l1111 0218  
                               l1103 00C6                                 l1033 044C  
                               l1201 03A0                                 l1035 0450  
                               l1115 0220                                 l1203 03A4  
                               l1205 03A8                                 l1047 045A  
                               l1207 03AC                                 l1057 0482  
                               l1209 03BA                                 l1181 0378  
                               l1095 00A2                                 l1191 038C  
                               l1183 037C                                 l1097 00AA  
                               l1193 0390                                 l1185 0380  
                               l1177 0370                                 l1195 0394  
                               l1187 0384                                 l1179 0374  
                               l1197 0398                                 l1189 0388  
                               l1199 039C                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               i2l82 04EE                                 _WPUB 000F61  
                      _EUSART1_Write 0414                                 _main 0322  
                      ?_EUSART1_Read 0026                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 009A                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 055A                                ?_main 0026  
                     __CFG_DEBUG$OFF 000000                                i2l152 0060  
                              i2l148 0050                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _TFNum 003A                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 04C2  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                   __CFG_MCLRE$EXTMCLR 000000  
                     ?_EUSART1_Write 0026                                tablat 000FF5  
                     ??_EUSART1_Read 0034                                status 000FD8  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
                    __initialization 0524           __end_of_EUSART1_Initialize 04C2  
                       __end_of_main 03C8          ?_INTERRUPT_InterruptManager 0026  
                             ??_main 0039                        __activetblptr 000002  
              ?_EUSART1_Transmit_ISR 0026                               _ANSELA 000F38  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             i2l1091 0520                               i2l1083 04FE  
                             i2l1077 04EA                       __CFG_WDTEN$OFF 000000  
                             _RCREG1 000FAE                               _RCSTA1 000FAB  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                     __CFG_XINST$OFF 000000                       __CFG_STVREN$ON 000000  
                             clear_0 052A                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                    ??_EUSART1_Write 0034                      _eusart1RxBuffer 0011  
      __size_of_INTERRUPT_Initialize 0004                      _eusart1TxBuffer 0019  
                  _SYSTEM_Initialize 053A                           __accesstop 0060  
            __end_of__initialization 0530                   ?_SYSTEM_Initialize 0026  
                      ___rparam_used 000001                       __pcstackCOMRAM 0026  
                ??_SYSTEM_Initialize 0034                 __end_of_EUSART1_Read 048E  
             ??_EUSART1_Transmit_ISR 0026          __end_of_EUSART1_Receive_ISR 0524  
                      ?_relayControl 0026            __end_of_SYSTEM_Initialize 054C  
                      _eusart1RxHead 0022                        _eusart1TxHead 0024  
                      _eusart1RxTail 0023                        _eusart1TxTail 0025  
                    __CFG_PLLCFG$OFF 000000                           __pnvCOMRAM 003A  
                 __CFG_CCP2MX$PORTC1 000000                   __CFG_CCP3MX$PORTB5 000000  
                            _OSCCON2 000FD2                       ??_relayControl 0035  
                            _OSCTUNE 000F9B                              _SPBRGH1 000FB0  
                    __CFG_PWRTEN$OFF 000000                              __Hparam 0000  
                            __Lparam 0000                              __pcinit 0524  
                            __ramtop 0600                              __ptext0 0322  
                            __ptext1 009E                              __ptext2 0414  
                            __ptext3 053A                              __ptext4 03C8  
                            __ptext5 054C                              __ptext6 055A  
                            __ptext7 048E                              __ptext8 0454  
              _OSCILLATOR_Initialize 054C                   _EUSART1_Initialize 048E  
           ??_PIN_MANAGER_Initialize 0034           __size_of_SYSTEM_Initialize 0012  
               end_of_initialization 0530                  ?_EUSART1_Initialize 0026  
                      __Lmediumconst 0000                              postinc0 000FEE  
              __size_of_EUSART1_Read 003A                 ??_EUSART1_Initialize 0034  
                EUSART1_Write@txData 0034                           main@RxData 0039  
                       _EUSART1_Read 0454                 __end_of_relayControl 0322  
       __end_of_INTERRUPT_Initialize 055E               ?_OSCILLATOR_Initialize 0026  
                start_initialization 0524      __size_of_PIN_MANAGER_Initialize 004C  
              __end_of_EUSART1_Write 0454                       _eusart1RxCount 0021  
                        __pbssCOMRAM 0001        __size_of_EUSART1_Transmit_ISR 0032  
                  relayControl@count 0037         __size_of_EUSART1_Receive_ISR 0030  
             _PIN_MANAGER_Initialize 03C8                            __pintcode 0008  
       ??_INTERRUPT_InterruptManager 0026                     __CFG_PRICLKEN$ON 000000  
                           _BAUDCON1 000FB8                 _INTERRUPT_Initialize 055A  
                           _LATAbits 000F89                             _LATBbits 000F8A  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
                           _LATEbits 000F8D                __size_of_relayControl 0284  
                           _PIE1bits 000F9D  __size_of_INTERRUPT_InterruptManager 0092  
                           _PIR1bits 000F9E                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                         _relayControl 009E  
                        _INTCON2bits 000FF1                ?_INTERRUPT_Initialize 0026  
              EUSART1_Read@readValue 0034                             __Hrparam 0000  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 0034  
        __size_of_EUSART1_Initialize 0034                     relayControl@data 0036  
                           __ptext10 04C2                             __ptext11 04F4  
                      __size_of_main 00A6                             _site0_IL 0001  
 __end_of_INTERRUPT_InterruptManager 009A           _INTERRUPT_InterruptManager 0008  
                _EUSART1_Receive_ISR 04F4                           _INTCONbits 000FF2  
             ??_INTERRUPT_Initialize 0034                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0026              ?_PIN_MANAGER_Initialize 0026  
                         _RCSTA1bits 000FAB         __end_of_EUSART1_Transmit_ISR 04F4  
             __size_of_EUSART1_Write 0040                    __CFG_T3CMX$PORTC0 000000  
              ??_EUSART1_Receive_ISR 0026       __end_of_PIN_MANAGER_Initialize 0414  
                  __CFG_FOSC$INTIO67 000000  
